<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://markusthill.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://markusthill.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-09-27T19:41:32+00:00</updated><id>https://markusthill.github.io/feed.xml</id><title type="html">blank</title><subtitle>Personal notes and code snippets on math, ML &amp; programming. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">Online and Batch-Incremental Estimation of Covariance Matrices and Means in Python</title><link href="https://markusthill.github.io/blog/2025/online-batch-estimate-cov-mu/" rel="alternate" type="text/html" title="Online and Batch-Incremental Estimation of Covariance Matrices and Means in Python"/><published>2025-09-26T09:00:51+00:00</published><updated>2025-09-26T09:00:51+00:00</updated><id>https://markusthill.github.io/blog/2025/online-batch-estimate-cov-mu</id><content type="html" xml:base="https://markusthill.github.io/blog/2025/online-batch-estimate-cov-mu/"><![CDATA[<blockquote> <p>Estimating the mean and covariance matrix of a dataset is a cornerstone of multivariate statistics and machine learning. While batch (offline) methods are straightforward when all data is available at once, many modern applications require online or streaming estimation — where data arrives sequentially, potentially at very high rates, and storing all past samples is infeasible.</p> </blockquote> <blockquote> <p>In this Jupyter Notebook below, we explore fully online and batch-incremental estimators for the mean and covariance matrix, including their inverses. We look at how these algorithms work, why they are useful, and how they can adapt to non-stationary data through a forgetting factor. Importantly, these approaches allow us to update estimates efficiently without recomputing matrix inverses from scratch.</p> </blockquote> <blockquote> <p>The goal is to provide both the mathematical background and practical insights for applying online covariance and mean estimation in real-world scenarios such as anomaly detection, adaptive systems, and streaming analytics.</p> </blockquote> <style>.jupyter-child-ext{width:112%;position:relative;left:calc(-10%)}</style> <div class="jupyter-child-ext"> <div class="jupyter-notebook" style="position: relative; width: 100%; margin: 0 auto;"> <div class="jupyter-notebook-iframe-container"> <iframe src="/assets/jupyter/MarkusThill.github.io-jupyter/2025_09_27_online_estimate_cov_mu.ipynb.html" style="position: absolute; top: 0; left: 0; border-style: none;" width="100%" height="100%" onload="this.parentElement.style.paddingBottom = (this.contentWindow.document.documentElement.scrollHeight + 10) + 'px'"></iframe> </div> </div> </div>]]></content><author><name></name></author><category term="programming"/><category term="math"/><category term="stats"/><category term="math"/><summary type="html"><![CDATA[Learn how to estimate the mean, covariance, and inverse covariance matrices in an online or batch-incremental fashion. This post explains the theory behind forgetting factors and effective memory, provides Python implementations for both online and batch estimators, and investigates their accuracy and efficiency through experiments and visualizations.]]></summary></entry><entry><title type="html">The Relationship between the Mahalanobis Distance and the Chi-Squared Distribution</title><link href="https://markusthill.github.io/blog/2025/mahalanobis-distance/" rel="alternate" type="text/html" title="The Relationship between the Mahalanobis Distance and the Chi-Squared Distribution"/><published>2025-09-25T09:00:51+00:00</published><updated>2025-09-25T09:00:51+00:00</updated><id>https://markusthill.github.io/blog/2025/mahalanobis-distance</id><content type="html" xml:base="https://markusthill.github.io/blog/2025/mahalanobis-distance/"><![CDATA[<p>\( \renewcommand{\vec}[1]{\boldsymbol{\mathbf{#1}}} \def\matr#1{\boldsymbol{\mathbf{#1}}} \def\tp{\mathsf T} \DeclareMathOperator{\E}{\mathbb{E}} \)</p> <p>Gaussian distributions are a common choice for anomaly detection, especially when the data is roughly normally distributed. The parameters of the distribution can be estimated using maximum likelihood estimation (MLE), which gives the sample mean and covariance matrix. Once these parameters are known, the next step is to decide on a threshold that separates normal data from anomalies. A simple approach is to set this threshold based on the probability density function (PDF): if a new data point has a PDF value below the threshold, it is flagged as anomalous.</p> <p>In one dimension, this threshold separates the tails of the distribution from its center. In two dimensions, the boundary takes the shape of an ellipse, and in higher dimensions, it becomes an ellipsoid. All points on such a boundary are equally distant from the mean in terms of the Mahalanobis distance, which makes this distance a useful alternative for defining thresholds.</p> <p>Unlike the PDF, the Mahalanobis distance does not rely on assuming a Gaussian distribution. Still, if the data is approximately Gaussian, the squared Mahalanobis distance follows a Chi-square distribution—a relationship that can also be confirmed visually using a quantile–quantile plot.</p> <h1 id="prerequisites">Prerequisites</h1> <h2 id="matrix-algebra">Matrix Algebra</h2> <p>The product of an $n \times \ell$ matrix $\matr A$ and an $\ell \times p$ matrix $\matr B$ is defined entry-wise as</p> \[(\matr A \matr B)_{ij} = \sum_{k=1}^\ell \matr A_{ik}\,\matr B_{kj}.\] <p>In particular, the product of a matrix $\matr A$ with its transpose $\matr A^\top$ can be written as</p> \[\begin{align} (\matr A \matr A^\top)_{ij} &amp;= \sum_{k=1}^\ell \matr A_{ik}\,\matr A^\top_{kj} = \sum_{k=1}^\ell \matr A_{ik}\,\matr A_{jk}, \nonumber \\[6pt] \matr A \matr A^\top &amp;= \sum_{k=1}^\ell \vec a_{k}\,\vec a_{k}^\top, \label{eq:matrixProductWithTranspose} \end{align}\] <p>where $\vec a_{k}$ denotes the $k$-th column vector of $\matr A$.</p> <p>We will also use the following simple relation for vectors $\vec a, \vec b$:</p> \[\begin{align} x &amp;= \vec a^\top \vec b, \\ y &amp;= \vec b^\top \vec a = x^\top = x, \\ xy &amp;= \vec a^\top \vec b \,\vec b^\top \vec a = x^2 = (\vec a^\top \vec b)^2. \label{eq:multOfTwoScalars} \end{align}\] <p><em>(Inverse of a Matrix Product)</em></p> <p>For invertible square matrices $ \matr A \in \mathbb R^{n \times n} $ and $ \matr B \in \mathbb R^{n \times n} $, the inverse of their product is</p> \[\begin{align} (\matr A \matr B)^{-1} &amp;= \matr B^{-1} \matr A^{-1}. \label{eq:inverseProduct} \end{align}\] <p>Indeed,</p> \[\begin{align} (\matr A \matr B)(\matr B^{-1} \matr A^{-1}) &amp;= \matr A(\matr B \matr B^{-1}) \matr A^{-1} \\[4pt] &amp;= \matr A \mathbf I \matr A^{-1} \\[4pt] &amp;= \matr A \matr A^{-1} \\[4pt] &amp;= \mathbf I, \end{align}\] <p>which verifies the result.</p> <p>Note that the order of the factors is crucial: in general $ \matr B^{-1} \matr A^{-1} \ne \matr A^{-1} \matr B^{-1} $, since matrix multiplication is not commutative.</p> <p><br/></p> <h2 id="eigenvalues-and-eigenvectors">Eigenvalues and Eigenvectors</h2> <p>For a square $n \times n$ matrix $\matr A$, a non-zero vector $\vec u$ is called an eigenvector of $\matr A$ if it satisfies</p> \[\matr A \vec u = \lambda \vec u,\] <p>where the scalar $\lambda$ is the corresponding eigenvalue.</p> <p>If the eigenvectors of $\matr A$ are collected as the columns of a matrix $\matr U \in \mathbb R^{n \times n}$, with the $i$-th column given by $\vec u^{(i)}$, and if $\matr \Lambda$ is the diagonal matrix containing the associated eigenvalues $\lambda_i$, then</p> \[\begin{align} \matr A \matr U &amp;= \matr U \matr \Lambda, \nonumber \\[6pt] \matr A &amp;= \matr U \matr \Lambda \matr U^{-1}, \label{eq:eigendecomp} \end{align}\] <p>which is known as the <strong>eigenvalue decomposition</strong> of $\matr A$.</p> <p>If $\matr A$ is symmetric, its eigenvectors are orthogonal (and can be chosen to be orthonormal). In that case, $\matr U$ is an orthogonal matrix, so $\matr U^{-1} = \matr U^\top$, and the decomposition simplifies to</p> \[\matr A = \matr U \matr \Lambda \matr U^\top.\] <p>The square root of a matrix $\matr A$ (denoted $\matr A^{\tfrac{1}{2}}$), defined such that $\matr A^{\tfrac{1}{2}} \matr A^{\tfrac{1}{2}} = \matr A$, can be expressed using the eigenvalue decomposition as:</p> \[\begin{align} \matr A^{\tfrac{1}{2}} &amp;= \matr U \matr \Lambda^{\tfrac{1}{2}} \matr U^{\tp}, \label{eq:sqrtSymMatrix} \end{align}\] <p>where $\matr \Lambda^{\tfrac{1}{2}}$ is the diagonal matrix containing the square roots of the eigenvalues of $\matr A$.</p> <p>Verifying this:</p> \[\begin{align*} \matr A^{\tfrac{1}{2}} \cdot \matr A^{\tfrac{1}{2}} &amp;= \matr U \matr \Lambda^{\tfrac{1}{2}} \matr U^{\tp} \matr U \matr \Lambda^{\tfrac{1}{2}} \matr U^{\tp} \\ &amp;= \matr U \matr \Lambda^{\tfrac{1}{2}} \matr I \matr \Lambda^{\tfrac{1}{2}} \matr U^{\tp} \\ &amp;= \matr U \matr \Lambda \matr U^{\tp} \\ &amp;= \matr A. \end{align*}\] <p>Similarly, the inverse of $\matr A$ can be expressed through its eigenvalue decomposition. Using the associativity of matrix multiplication, we obtain:</p> \[\begin{align} \matr A^{-1} &amp;= \big( \matr U \matr \Lambda \matr U^{-1} \big)^{-1} \\ &amp;= \big( \matr U^{-1} \big)^{-1} \matr \Lambda^{-1} \matr U^{-1} \\ &amp;= \matr U \matr \Lambda^{-1} \matr U^{-1} \nonumber \\ &amp;= \matr U \matr \Lambda^{-1} \matr U^{\tp}, \label{eq:eigenvalueInverse} \end{align}\] <p>where $\matr \Lambda^{-1}$ is a diagonal matrix containing the reciprocals of the eigenvalues of $\matr A$.</p> <p>Note that $\matr \Lambda^{-1}$ is again a diagonal matrix containing the reciprocal eigenvalues of $\matr A$.</p> <p><br/></p> <h2 id="linear-affine-transform-of-a-normally-distributed-random-variable">Linear Affine Transform of a Normally Distributed Random Variable</h2> <p>Consider a random variable $X \sim \mathcal N(\vec \mu_x, \matr \Sigma_x)$ with mean vector $\vec \mu_x$ and covariance matrix $\matr \Sigma_x$.<br/> Applying a linear affine transformation with matrix $\matr A$ and vector $\vec b$ yields a new random variable $Y$:</p> \[\begin{align} Y = \matr A X + \vec b. \end{align}\] <p>The mean $\vec \mu_y$ and covariance $\matr \Sigma_y$ of $Y$ can be derived as follows:</p> \[\begin{align} \vec \mu_y &amp;= \E \{ Y \} \\ &amp;= \E \{ \matr A X + \vec b \} \\ &amp;= \matr A \E \{ X \} + \vec b \\ &amp;= \matr A \vec \mu_x + \vec b, \label{eq:AffineLinearTransformMean} \end{align}\] <p>and</p> \[\begin{align} \matr \Sigma_y &amp;= \E \{ (Y - \vec \mu_y)(Y - \vec \mu_y)^\tp \} \\ &amp;= \E \{ \big[ \matr A (X - \vec \mu_x) \big] \big[ \matr A (X - \vec \mu_x) \big]^\tp \} \\ &amp;= \E \{ \matr A (X - \vec \mu_x)(X - \vec \mu_x)^\tp \matr A^\tp \} \\ &amp;= \matr A \E \{ (X - \vec \mu_x)(X - \vec \mu_x)^\tp \} \matr A^\tp \\ &amp;= \matr A \matr \Sigma_x \matr A^\tp. \label{eq:AffineLinearTransformCovariance} \end{align}\] <p>Thus, affine transformations preserve Gaussianity: the result is still normally distributed, but with a mean shifted and scaled by $\matr A$ and $\vec b$, and a covariance matrix transformed as $\matr A \matr \Sigma_x \matr A^\tp$.</p> <h2 id="quantile-estimation-for-multivariate-gaussian-distributions">Quantile Estimation for Multivariate Gaussian Distributions</h2> <p>Estimating quantiles for multivariate Gaussian distributions is more involved than in the one-dimensional case. In one dimension, quantiles can be obtained by directly evaluating the cumulative distribution function in the tails of the distribution. In higher dimensions, however, this approach does not generalize in a straightforward way.</p> <p>In the bivariate case, quantiles can be visualized as ellipses, and in higher dimensions as ellipsoids. A useful tool for describing such contours is the <strong>Mahalanobis distance</strong>, which measures the distance of a point from the mean while accounting for the covariance structure of the distribution. All points at the same Mahalanobis distance from the mean lie on the surface of an ellipsoid.</p> <p>More formally, the usual definition of a $p$-quantile involves a random variable: the $p$-quantile of a distribution is the value $q_p$ such that the probability of the random variable being less than or equal to $q_p$ is exactly $p$. For a multivariate Gaussian distribution, we can treat the <strong>squared Mahalanobis distance</strong> between a random point $\vec x$ and the mean $\vec \mu$ as such a random variable:</p> \[d^2 = (\vec x - \vec \mu)^\tp \matr \Sigma^{-1} (\vec x - \vec \mu).\] <p>The $p$-quantile then corresponds to the threshold value $q_p$ such that</p> \[P(d^2 \leq q_p) = p.\] <p>Geometrically, the set of all points with $d^2 \leq q_p$ forms an ellipsoid centered at the mean.</p> <p>A naive way to compute these quantiles is through a <strong>Monte Carlo approach</strong>: sample many points from the multivariate Gaussian distribution, compute their Mahalanobis distances, and then estimate the quantile empirically. While straightforward, this method becomes computationally inefficient, especially if quantiles need to be evaluated repeatedly.</p> <p>Fortunately, there is a more direct connection: the squared Mahalanobis distance of a Gaussian-distributed random vector follows a <strong>Chi-square distribution</strong> with degrees of freedom equal to the dimensionality $k$ of the Gaussian. This means that the $p$-quantile can be computed directly as</p> \[q_p = \chi^2_{k,p},\] <p>where $\chi^2_{k,p}$ is the $p$-quantile of the Chi-square distribution with $k$ degrees of freedom. In other words, for a $k$-dimensional Gaussian, the region</p> \[\{ \vec x \in \mathbb R^k : d^2 \leq \chi^2_{k,p} \}\] <p>defines the ellipsoidal contour that contains probability mass $p$.</p> <p><br/></p> <h3 id="empirical-evidence-that-the-mahalanobis-distance-is-chi-square-distributed">Empirical Evidence that the Mahalanobis Distance is Chi-Square Distributed</h3> <p>The relationship between the Mahalanobis distance and the Chi-square distribution can also be verified empirically.<br/> A common tool for this is the <strong>Quantile-Quantile (Q-Q) plot</strong>, which compares the quantiles of two distributions.<br/> If the squared Mahalanobis distance of samples drawn from a Gaussian distribution truly follows a Chi-square distribution, then the Q-Q plot of their quantiles should lie approximately on the identity line.</p> <p>The following R script demonstrates this approach by generating a sample from a multivariate Gaussian distribution, computing the squared Mahalanobis distances, and comparing them against the theoretical Chi-square quantiles:</p> <figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">library</span><span class="p">(</span><span class="n">Matrix</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">MASS</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">ggplot2</span><span class="p">)</span><span class="w">
</span><span class="n">DIM</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">10</span><span class="w">
</span><span class="n">nSample</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1000</span><span class="w">

</span><span class="n">Posdef</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="w"> </span><span class="p">(</span><span class="n">n</span><span class="p">,</span><span class="w"> </span><span class="n">ev</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">runif</span><span class="p">(</span><span class="n">n</span><span class="p">,</span><span class="w"> </span><span class="m">0</span><span class="p">,</span><span class="w"> </span><span class="m">1</span><span class="p">))</span><span class="w">
</span><span class="p">{</span><span class="w">
  </span><span class="n">Z</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">matrix</span><span class="p">(</span><span class="n">ncol</span><span class="o">=</span><span class="n">n</span><span class="p">,</span><span class="w"> </span><span class="n">rnorm</span><span class="p">(</span><span class="n">n</span><span class="o">^</span><span class="m">2</span><span class="p">))</span><span class="w">
  </span><span class="n">decomp</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">qr</span><span class="p">(</span><span class="n">Z</span><span class="p">)</span><span class="w">
  </span><span class="n">Q</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">qr.Q</span><span class="p">(</span><span class="n">decomp</span><span class="p">)</span><span class="w">
  </span><span class="n">R</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">qr.R</span><span class="p">(</span><span class="n">decomp</span><span class="p">)</span><span class="w">
  </span><span class="n">d</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">diag</span><span class="p">(</span><span class="n">R</span><span class="p">)</span><span class="w">
  </span><span class="n">ph</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">d</span><span class="w"> </span><span class="o">/</span><span class="w"> </span><span class="nf">abs</span><span class="p">(</span><span class="n">d</span><span class="p">)</span><span class="w">
  </span><span class="n">O</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">Q</span><span class="w"> </span><span class="o">%*%</span><span class="w"> </span><span class="n">diag</span><span class="p">(</span><span class="n">ph</span><span class="p">)</span><span class="w">
  </span><span class="n">Z</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">t</span><span class="p">(</span><span class="n">O</span><span class="p">)</span><span class="w"> </span><span class="o">%*%</span><span class="w"> </span><span class="n">diag</span><span class="p">(</span><span class="n">ev</span><span class="p">)</span><span class="w"> </span><span class="o">%*%</span><span class="w"> </span><span class="n">O</span><span class="w">
  </span><span class="nf">return</span><span class="p">(</span><span class="n">Z</span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">Sigma</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">Posdef</span><span class="p">(</span><span class="n">DIM</span><span class="p">)</span><span class="w">
</span><span class="n">muhat</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">rnorm</span><span class="p">(</span><span class="n">DIM</span><span class="p">)</span><span class="w">


</span><span class="n">sample</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">mvrnorm</span><span class="p">(</span><span class="n">n</span><span class="o">=</span><span class="n">nSample</span><span class="p">,</span><span class="w"> </span><span class="n">mu</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">muhat</span><span class="p">,</span><span class="w"> </span><span class="n">Sigma</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">Sigma</span><span class="p">)</span><span class="w">
</span><span class="n">C</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">.5</span><span class="o">*</span><span class="nf">log</span><span class="p">(</span><span class="n">det</span><span class="p">(</span><span class="m">2</span><span class="o">*</span><span class="nb">pi</span><span class="o">*</span><span class="n">Sigma</span><span class="p">))</span><span class="w">
</span><span class="n">mahaDist2</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">mahalanobis</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">sample</span><span class="p">,</span><span class="w"> </span><span class="n">center</span><span class="o">=</span><span class="n">muhat</span><span class="p">,</span><span class="n">cov</span><span class="o">=</span><span class="n">Sigma</span><span class="p">)</span><span class="w">

</span><span class="c1">#</span><span class="w">
</span><span class="c1"># Interestingly, the Mahalanobis distance of samples follows a Chi-Square distribution</span><span class="w">
</span><span class="c1"># with d degrees of freedom</span><span class="w">
</span><span class="c1">#</span><span class="w">
</span><span class="n">pps</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="m">100</span><span class="p">)</span><span class="o">/</span><span class="p">(</span><span class="m">100+1</span><span class="p">)</span><span class="w">
</span><span class="n">qq1</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sapply</span><span class="p">(</span><span class="n">X</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">pps</span><span class="p">,</span><span class="w"> </span><span class="n">FUN</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">x</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="n">quantile</span><span class="p">(</span><span class="n">mahaDist2</span><span class="p">,</span><span class="w"> </span><span class="n">probs</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">x</span><span class="p">)</span><span class="w"> </span><span class="p">})</span><span class="w">
</span><span class="n">qq2</span><span class="w"> </span><span class="o">&lt;-</span><span class="w">  </span><span class="n">sapply</span><span class="p">(</span><span class="n">X</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">pps</span><span class="p">,</span><span class="w"> </span><span class="n">FUN</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">qchisq</span><span class="p">,</span><span class="w"> </span><span class="n">df</span><span class="o">=</span><span class="n">ncol</span><span class="p">(</span><span class="n">Sigma</span><span class="p">))</span><span class="w">

</span><span class="n">dat</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">data.frame</span><span class="p">(</span><span class="n">qEmp</span><span class="o">=</span><span class="w"> </span><span class="n">qq1</span><span class="p">,</span><span class="w"> </span><span class="n">qChiSq</span><span class="o">=</span><span class="n">qq2</span><span class="p">)</span><span class="w">
</span><span class="n">p</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">dat</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">geom_point</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">qEmp</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">qChiSq</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">xlab</span><span class="p">(</span><span class="s2">"Sample quantile"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">ylab</span><span class="p">(</span><span class="s2">"Chi-Squared Quantile"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_abline</span><span class="p">(</span><span class="n">slope</span><span class="o">=</span><span class="m">1</span><span class="p">)</span><span class="w">
</span><span class="n">plot</span><span class="p">(</span><span class="n">p</span><span class="p">)</span></code></pre></figure> <p><br/></p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-09-25-mahalanobis-distance/q-q-plot-480.webp 480w,/assets/img/2025-09-25-mahalanobis-distance/q-q-plot-800.webp 800w,/assets/img/2025-09-25-mahalanobis-distance/q-q-plot-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-09-25-mahalanobis-distance/q-q-plot.png" class="img-fluid rounded z-depth-1 imgcenter" width="80%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 1:</b> Quantile–Quantile (Q–Q) plot comparing the squared Mahalanobis distances of a Gaussian sample with the theoretical Chi-square distribution. The close alignment of the points along the diagonal line indicates that the squared Mahalanobis distance is well-approximated by a Chi-square distribution. </figcaption> </figure> <p><br/></p> <h1 id="the-squared-mahalanobis-distance-follows-a-chi-square-distribution">The Squared Mahalanobis Distance follows a Chi-Square Distribution</h1> <p>In this section we prove the conjecture: “The squared Mahalanobis distance of a Gaussian-distributed random vector $\matr X$ and the center $\vec\mu$ of this Gaussian distribution follows a Chi-square distribution.”</p> <p><br/></p> <h2 id="derivation-based-on-the-eigenvalue-decomposition">Derivation Based on the Eigenvalue Decomposition</h2> <p>The Mahalanobis distance between two points $\vec x$ and $\vec y$ is defined as</p> \[\begin{align} d(\vec x,\vec y) = \sqrt{(\vec x -\vec y )^\tp \matr \Sigma^{-1} (\vec x - \vec y)}. \end{align}\] <p>Thus, the squared Mahalanobis distance of a random vector $\matr X$ and the center $\vec \mu$ of a multivariate Gaussian distribution is defined as:</p> \[\begin{align} D = d(\matr X,\vec \mu)^2 = (\matr X -\vec \mu )^\tp \matr \Sigma^{-1} (\matr X - \vec \mu ), \label{eq:sqMahalanobis} \end{align}\] <p>where $\matr \Sigma$ is a $\ell \times \ell$ covariance matrix and $\vec \mu \in \mathbb{R}^\ell$ is the mean vector. In order to achieve a different representation of $D$ one can first perform an eigenvalue decomposition on $\matr \Sigma^{-1}$ which is (with Eq. $\eqref{eq:eigenvalueInverse}$ and assuming orthonormal eigenvectors):</p> \[\begin{align} \matr \Sigma^{-1} &amp;= \matr U \matr \Lambda^{-1} \matr U^{-1} = \matr U \matr \Lambda^{-1} \matr U^{T} \end{align}\] <p>With Eq. \eqref{eq:matrixProductWithTranspose} we obtain:</p> \[\begin{align} \matr \Sigma^{-1} &amp;= \sum_{k=1}^\ell \lambda_k^{-1} \vec u_{k} \vec u_{k}^\tp \label{eq:SigmaInverseAsSum} \end{align}\] <p>where $\vec u_{k}$ is the $k$-th eigenvector of the corresponding eigenvalue $\lambda_k$. Plugging \eqref{eq:SigmaInverseAsSum} back into \eqref{eq:sqMahalanobis} results in:</p> \[\begin{align*} D &amp;= (\matr X -\vec \mu )^\tp \matr \Sigma^{-1} (\matr X - \vec \mu ) = (\matr X -\vec \mu )^\tp \Bigg( \sum_{k=1}^\ell \lambda_k^{-1} \vec u_{k} \vec u_{k}^\tp \Bigg) (\matr X - \vec \mu ) \\ &amp;= \sum_{k=1}^\ell \lambda_k^{-1} (\matr X -\vec \mu )^\tp \vec u_{k} \vec u_{k}^\tp (\matr X - \vec \mu )\\ &amp;= \sum_{k=1}^\ell \lambda_k^{-1} \Big[ \vec u_{k}^\tp (\matr X - \vec \mu ) \Big]^2 = \sum_{k=1}^\ell \Big[ \lambda_k^{-\frac{1}{2}} \vec u_{k}^\tp (\matr X - \vec \mu ) \Big]^2\\ &amp;= \sum_{k=1}^\ell Y_k^2 \end{align*}\] <p>where $Y_k$ is a new random variable based on an affine linear transform of the random vector $\matr X$. According to Eq. \eqref{eq:AffineLinearTransformMean} , we have $\matr Z = (\matr X - \vec \mu ) \thicksim N(\vec 0,\Sigma)$. If we set $ \vec a_{k}^\tp = \lambda_k^{-\frac{1}{2}} \vec u_{k}^\tp$ then we get $Y_k = \vec a_{k}^\tp \matr Z = \lambda_k^{-\frac{1}{2}} \vec u_{k}^\tp \matr Z$. Note that $Y_k$ is now a random variable drawn from a univariate normal distribution $Y_k \thicksim N(0,\sigma_k^2)$, where, according to \eqref{eq:AffineLinearTransformCovariance}:</p> \[\begin{align} \sigma_k^2 &amp;= \vec a_{k}^\tp \Sigma \vec a_{k}= \lambda_k^{-\frac{1}{2}} \vec u_{k}^\tp \Sigma \lambda_k^{-\frac{1}{2}} \vec u_{k} \\ &amp;= \lambda_k^{-1} \vec u_{k}^\tp \Sigma \vec u_{k} \label{eq:smallSigma} \end{align}\] <p>If we insert $\matr \Sigma = \sum_{j=1}^\ell \lambda_j \vec u_{j} \vec u_{j}^\tp$ into Eq. \eqref{eq:smallSigma}, we get:</p> \[\begin{align*} \sigma_k^2 &amp;= \lambda_k^{-1} \vec u_{k}^\tp \Sigma \vec u_{k} = \lambda_k^{-1} \vec u_{k}^\tp \Bigg( \sum_{j=1}^\ell \lambda_j \vec u_{j} \vec u_{j}^\tp \Bigg) \vec u_{k} = \sum_{j=1}^\ell \lambda_k^{-1} \vec u_{k}^\tp \lambda_j \vec u_{j} \vec u_{j}^\tp \vec u_{k} \\ &amp;= \sum_{j=1}^\ell \lambda_k^{-1} \lambda_j \vec u_{k}^\tp \vec u_{j} \vec u_{j}^\tp \vec u_{k} \end{align*}\] <p>Since all eigenvectors $\vec u_{i}$ are pairwise orthonormal the dotted products $\vec u_{k}^\tp \vec u_{j}$ and $\vec u_{j}^\tp \vec u_{k}$ will be zero for $j \neq k$. Only for the case $j = k$ we get:</p> \[\begin{align*} \sigma_k^2 &amp;= \lambda_k^{-1} \lambda_k \vec u_{k}^\tp \vec u_{k} \vec u_{k}^\tp \vec u_{k} = \lambda_k^{-1} \lambda_k ||\vec u_{k}||^2 ||\vec u_{k}||^2 = \lambda_k^{-1} \lambda_k ||\vec u_{k}||^2 ||\vec u_{k}||^2 \\ &amp;= 1, \end{align*}\] <p>since the the norm $||\vec u_{k}||$ of a orthonormal eigenvector is equal to 1. Thus, the squared Mahalanobis distance can be expressed as:</p> \[\begin{align*} D = \sum_{k=1}^\ell Y_k^2, \end{align*}\] <p>where</p> \[\begin{align} Y_k \thicksim N(0,1). \end{align}\] <p>Now the Chi-square distribution with $\ell$ degrees of freedom is exactly defined as being the distribution of a variable which is the sum of the squares of $\ell$ random variables being standard normally distributed. Hence, $D$ is Chi-square distributed with $\ell$ degrees of freedom.</p> <p><br/></p> <h2 id="alternative-derivation-based-on-the-whitening-property-of-the-mahalanobis-distance">Alternative Derivation Based on the Whitening Property of the Mahalanobis Distance</h2> <p>Since the inverse $\matr \Sigma^{-1}$ of the covariance matrix $\matr \Sigma$ is also a symmetric matrix, its square root can be found – based on Eq. \eqref{eq:sqrtSymMatrix} – to be a symmetric matrix. In this case we can write the squared Mahalanobis distance as</p> \[\begin{align*} D &amp;= (\matr X -\vec \mu )^\tp \matr \Sigma^{-1} (\matr X - \vec \mu ) = (\matr X -\vec \mu )^\tp \matr \Sigma^{-\frac{1}{2}} \matr \Sigma^{-\frac{1}{2}} (\matr X - \vec \mu )\\ &amp;= \Big( \matr \Sigma^{-\frac{1}{2}} (\matr X -\vec \mu ) \Big)^\tp \Big(\matr \Sigma^{-\frac{1}{2}} (\matr X - \vec \mu ) \Big) = \matr Y^\tp \matr Y = ||\matr Y||^2 \\ &amp;= \sum_{k=1}^\ell Y_k^2 \end{align*}\] <p>The multiplication $\matr Y = \matr W \matr Z$, with $\matr W=\matr \Sigma^{-\frac{1}{2}}$ and $\matr Z= \matr X -\vec \mu $ is typically referred to as a whitening transform, where in this case $\matr W=\matr \Sigma^{-\frac{1}{2}}$ is the so called Mahalanobis (or ZCA) whitening matrix. $\matr Y$ has zero mean, since $(\matr X - \vec \mu ) \thicksim N(\vec 0,\Sigma)$. Due to the (linear) whitening transform the new covariance matrix $\matr \Sigma_y$ is the identity matrix $\matr I$, as shown in the following (using the property in Eq. \eqref{eq:AffineLinearTransformCovariance}):</p> \[\begin{align*} \matr \Sigma_y &amp;= \matr W \matr \Sigma \matr W^\tp = \matr \Sigma^{-\frac{1}{2}} \matr \Sigma \Big( \matr \Sigma^{-\frac{1}{2}} \Big)^\tp = \matr \Sigma^{-\frac{1}{2}} \Big(\matr \Sigma^{\frac{1}{2}}\matr \Sigma^{\frac{1}{2}} \Big) \Big( \matr \Sigma^{-\frac{1}{2}} \Big)^\tp \\ &amp;= \matr \Sigma^{-\frac{1}{2}} \Big(\matr \Sigma^{\frac{1}{2}}\matr \Sigma^{\frac{1}{2}} \Big) \matr \Sigma^{-\frac{1}{2}} = \Big(\matr \Sigma^{-\frac{1}{2}} \matr \Sigma^{\frac{1}{2}} \Big) \Big(\matr \Sigma^{\frac{1}{2}} \matr \Sigma^{-\frac{1}{2}}\Big)\\ &amp;= \matr I. \end{align*}\] <p>Hence, all elements $Y_k$ in the random vector $\matr Y$ are random variables drawn from independent normal distributions $Y_k \thicksim N(0,1)$, which leads us to the same conclusion as before, that $D$ is Chi-square distributed with $\ell$ degrees of freedom.</p> <p><br/></p> <h1 id="conclusion">Conclusion</h1> <p>We have shown that the squared Mahalanobis distance of a Gaussian random vector follows a Chi-square distribution with degrees of freedom equal to the dimension of the data.<br/> This result has a very practical consequence: it allows us to replace heuristic or Monte Carlo–based thresholding with an exact statistical criterion.</p> <p>In anomaly detection, instead of deciding “by hand” where to cut off the probability density, we can set thresholds directly using the quantiles of the Chi-square distribution.<br/> For example, in $\ell$ dimensions, the 95% confidence region of a Gaussian distribution is exactly the ellipsoid</p> \[\{ \vec x \in \mathbb R^\ell : d^2 \leq \chi^2_{\ell,0.95} \}.\] <p>This means we can flag data points outside this ellipsoid as anomalies with a well-defined false alarm rate.</p> <p>More generally, the Mahalanobis distance provides a natural way to measure how unusual a point is relative to a multivariate distribution. Combined with the Chi-square connection, it gives both a geometric intuition (ellipsoids of equal distance) and a rigorous statistical tool for multivariate analysis.</p> <p>👉 A more detailed exploration of the Mahalanobis distance — including multiple Python implementations, benchmarks, and visualizations — is covered in a separate blog post <strong><a href="/blog/2025/mahalanobis-distance-implementations/">here</a></strong>.</p>]]></content><author><name></name></author><category term="programming"/><category term="math"/><category term="stats"/><category term="math"/><summary type="html"><![CDATA[This post explores why the squared Mahalanobis distance of Gaussian data follows a Chi-square distribution. We cover the theory step by step, show empirical evidence, and explain how this relationship provides a principled way to set anomaly detection thresholds using quantiles.A companion Jupyter Notebook with code, benchmarks, and visualizations is provided to put the theory into practice.]]></summary></entry><entry><title type="html">Notes on the Runtime Complexity of Latin Hypercube Sampling</title><link href="https://markusthill.github.io/blog/2025/a-few-notes-on-the-runtime-complexity-of-latin-hypercube-sampling/" rel="alternate" type="text/html" title="Notes on the Runtime Complexity of Latin Hypercube Sampling"/><published>2025-09-24T19:00:51+00:00</published><updated>2025-09-24T19:00:51+00:00</updated><id>https://markusthill.github.io/blog/2025/a-few-notes-on-the-runtime-complexity-of-latin-hypercube-sampling</id><content type="html" xml:base="https://markusthill.github.io/blog/2025/a-few-notes-on-the-runtime-complexity-of-latin-hypercube-sampling/"><![CDATA[<p>\( <br/> \def\myT{\mathsf{T}} \def\myPhi{\mathbf{\Phi}} \)</p> <p>Recently, I needed to tune several parameters of a simple algorithm (five in total). To efficiently explore the parameter space, I chose to use a <strong>Latin Hypercube Sampling (LHS)</strong> design. Because each design point could be evaluated very quickly, selecting <strong>1,000 design points</strong> seemed reasonable.</p> <p>In <strong>R</strong>, the <code class="language-plaintext highlighter-rouge">lhs</code> package provides a convenient function, <code class="language-plaintext highlighter-rouge">optimumLHS</code>, to generate such designs. However, when attempting to generate (n = 1000) points, the function failed to return even after several minutes. This behavior highlights an important issue: <strong>the runtime complexity of the LHS algorithm</strong>.</p> <p>To better understand this, I measured the runtime of LHS for different numbers of design points. The following R code illustrates how these measurements were obtained:</p> <figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">library</span><span class="p">(</span><span class="n">lhs</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">ggplot2</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">MASS</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">dplyr</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">pbapply</span><span class="p">)</span><span class="w">

</span><span class="n">runLHS</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">whichN</span><span class="p">,</span><span class="w"> </span><span class="n">repeats</span><span class="p">){</span><span class="w">
  </span><span class="n">lhsTimes</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">data.frame</span><span class="p">()</span><span class="w">
  </span><span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="n">whichN</span><span class="p">){</span><span class="w">
    </span><span class="k">for</span><span class="p">(</span><span class="n">j</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="n">repeats</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="n">tStart</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">proc.time</span><span class="p">()</span><span class="w">
      </span><span class="nf">invisible</span><span class="p">(</span><span class="n">optimumLHS</span><span class="p">(</span><span class="n">n</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">i</span><span class="p">,</span><span class="w"> </span><span class="n">k</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">5</span><span class="p">,</span><span class="w"> </span><span class="n">verbose</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">))</span><span class="w">
      </span><span class="n">tt</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="p">(</span><span class="nf">proc.time</span><span class="p">()</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="n">tStart</span><span class="p">)</span><span class="w">
      </span><span class="n">lhsTimes</span><span class="o">&lt;-</span><span class="n">rbind</span><span class="p">(</span><span class="n">lhsTimes</span><span class="p">,</span><span class="n">data.frame</span><span class="p">(</span><span class="n">user</span><span class="o">=</span><span class="n">tt</span><span class="p">[</span><span class="m">1</span><span class="p">],</span><span class="w"> </span><span class="n">system</span><span class="o">=</span><span class="n">tt</span><span class="p">[</span><span class="m">2</span><span class="p">],</span><span class="w"> </span><span class="n">elapsed</span><span class="o">=</span><span class="n">tt</span><span class="p">[</span><span class="m">3</span><span class="p">],</span><span class="w"> </span><span class="n">n</span><span class="o">=</span><span class="n">i</span><span class="p">))</span><span class="w">
    </span><span class="p">}</span><span class="w">
  </span><span class="p">}</span><span class="w">
  </span><span class="n">return</span><span class="w"> </span><span class="p">(</span><span class="n">lhsTimes</span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w">


</span><span class="n">res</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">pblapply</span><span class="p">(</span><span class="n">X</span><span class="o">=</span><span class="n">rev</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="m">30</span><span class="p">)</span><span class="o">*</span><span class="m">10</span><span class="p">,</span><span class="w"> </span><span class="n">FUN</span><span class="o">=</span><span class="n">runLHS</span><span class="p">,</span><span class="w"> </span><span class="m">10</span><span class="p">,</span><span class="w"> </span><span class="n">cl</span><span class="o">=</span><span class="m">1</span><span class="p">)</span><span class="w">
</span><span class="n">res</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">do.call</span><span class="p">(</span><span class="n">rbind</span><span class="p">,</span><span class="w"> </span><span class="n">res</span><span class="p">)</span><span class="w">
</span><span class="c1"># saveRDS(object=res, file="lhs.rds") # In case you want to save the results</span><span class="w">
</span><span class="c1"># res &lt;- readRDS(file="lhs.rds") # In case you want to load the results</span><span class="w">
</span><span class="n">stop</span><span class="p">(</span><span class="s2">"Stop here for the moment"</span><span class="p">)</span><span class="w">

</span><span class="n">plotData</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">res</span><span class="p">[</span><span class="n">which</span><span class="p">(</span><span class="n">res</span><span class="o">$</span><span class="n">elapsed</span><span class="o">&gt;</span><span class="m">.01</span><span class="p">),]</span><span class="w"> </span><span class="c1"># smaller values are not really interesting</span><span class="w">
</span><span class="n">p</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">ggplot</span><span class="p">(</span><span class="n">plotData</span><span class="p">,</span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">n</span><span class="p">,</span><span class="n">y</span><span class="o">=</span><span class="n">user</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">geom_point</span><span class="p">()</span><span class="w">
</span><span class="n">p</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">p</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">theme_bw</span><span class="p">()</span><span class="w">
</span><span class="n">p</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">p</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">ylab</span><span class="p">(</span><span class="s2">"computation time / s"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">theme</span><span class="p">(</span><span class="n">axis.text</span><span class="o">=</span><span class="n">element_text</span><span class="p">(</span><span class="n">size</span><span class="o">=</span><span class="m">12</span><span class="p">),</span><span class="w">
        </span><span class="n">axis.title</span><span class="o">=</span><span class="n">element_text</span><span class="p">(</span><span class="n">size</span><span class="o">=</span><span class="m">14</span><span class="p">,</span><span class="w"> </span><span class="n">face</span><span class="o">=</span><span class="s2">"bold"</span><span class="p">))</span><span class="w">
</span><span class="n">plot</span><span class="p">(</span><span class="n">p</span><span class="p">)</span></code></pre></figure> <hr/> <p></p> <p>The corresponding plot is shown below:</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-09-23-a-few-notes-on-the-runtime-complexity-of-latin-hypercube-sampling/initialplot-480.webp 480w,/assets/img/2025-09-23-a-few-notes-on-the-runtime-complexity-of-latin-hypercube-sampling/initialplot-800.webp 800w,/assets/img/2025-09-23-a-few-notes-on-the-runtime-complexity-of-latin-hypercube-sampling/initialplot-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-09-23-a-few-notes-on-the-runtime-complexity-of-latin-hypercube-sampling/initialplot.png" class="img-fluid rounded z-depth-1 imgcenter" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 1:</b> Computation time of the LHS algorithm for different numbers of design points \(n\). For each \(n\) we ran LHS 10 times and measured the times. Each design point is a 5-dimensional vector. </figcaption> </figure> <p>At first glance, the runtime appears to grow at least polynomially, and it could even suggest exponential growth. To investigate this further, we add a logarithmic scale to the y-axis:</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-09-23-a-few-notes-on-the-runtime-complexity-of-latin-hypercube-sampling/log_y_scalePlot-480.webp 480w,/assets/img/2025-09-23-a-few-notes-on-the-runtime-complexity-of-latin-hypercube-sampling/log_y_scalePlot-800.webp 800w,/assets/img/2025-09-23-a-few-notes-on-the-runtime-complexity-of-latin-hypercube-sampling/log_y_scalePlot-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-09-23-a-few-notes-on-the-runtime-complexity-of-latin-hypercube-sampling/log_y_scalePlot.png" class="img-fluid rounded z-depth-1 imgcenter" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 2:</b> Same as before, but with a log10 scale on the y-axis. From this view, the runtime growth does not appear exponential. </figcaption> </figure> <p>If the runtime were exponential, the log-scaled y-axis would produce a straight line. Since this is not the case, a polynomial growth seems more likely. To confirm, we also apply a log10 scale to the x-axis:</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-09-23-a-few-notes-on-the-runtime-complexity-of-latin-hypercube-sampling/logxyPlot-480.webp 480w,/assets/img/2025-09-23-a-few-notes-on-the-runtime-complexity-of-latin-hypercube-sampling/logxyPlot-800.webp 800w,/assets/img/2025-09-23-a-few-notes-on-the-runtime-complexity-of-latin-hypercube-sampling/logxyPlot-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-09-23-a-few-notes-on-the-runtime-complexity-of-latin-hypercube-sampling/logxyPlot.png" class="img-fluid rounded z-depth-1 imgcenter" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 3:</b> Same as Fig. 1, but with log10 scales on both axes. The resulting straight line suggests that the runtime complexity of LHS is polynomial. </figcaption> </figure> <p>Since we now observe a straight line on the log-log plot, it is reasonable to conclude that the runtime of the LHS algorithm grows polynomially. Next, it is interesting to determine the order of this polynomial. To do so, we estimate the slope and intercept of the line using linear regression.</p> <p>Because we have 10 measurements for each value of \(n\), we can employ a weighted linear regression approach to account for variations in the observed runtimes.</p> \[\begin{align} \vec{\theta} = \big(\myPhi^\myT \mathbf{W} \myPhi + \lambda \mathbf{I} \big)^{-1} \myPhi^\myT \mathbf{W} \vec{y}_* \end{align}\] <p>with</p> \[\mathbf{W} = \mbox{diag}(\vec{w})\] <p>and</p> \[\begin{align} w_i = \frac{1}{\sigma_{x_i}^2}. \end{align}\] <p>The R code for estimating the Intercept \(b\) and the slope \(m\) of the line is as follows:</p> <figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="c1"># Apply log10 to the data</span><span class="w">
</span><span class="n">log_n</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">log10</span><span class="p">(</span><span class="n">plotData</span><span class="o">$</span><span class="n">n</span><span class="p">)</span><span class="w">
</span><span class="n">log_y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">log10</span><span class="p">(</span><span class="n">plotData</span><span class="o">$</span><span class="n">user</span><span class="p">)</span><span class="w">
</span><span class="n">log_data</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">data.frame</span><span class="p">(</span><span class="n">log_n</span><span class="p">,</span><span class="w"> </span><span class="n">log_y</span><span class="p">)</span><span class="w">

</span><span class="c1">#</span><span class="w">
</span><span class="c1"># Since we repeated each run several times: Measure the variance for each point n</span><span class="w">
</span><span class="c1">#</span><span class="w">
</span><span class="n">grouped</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">group_by</span><span class="p">(</span><span class="n">cbind</span><span class="p">(</span><span class="n">data.frame</span><span class="p">(</span><span class="n">log_n</span><span class="o">=</span><span class="n">log_n</span><span class="p">),</span><span class="w"> </span><span class="n">data.frame</span><span class="p">(</span><span class="n">log_y</span><span class="o">=</span><span class="n">log_y</span><span class="p">)),</span><span class="w"> </span><span class="n">log_n</span><span class="p">)</span><span class="w">
</span><span class="n">stats</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">summarise</span><span class="p">(</span><span class="n">grouped</span><span class="p">,</span><span class="w"> </span><span class="n">mean</span><span class="o">=</span><span class="n">mean</span><span class="p">(</span><span class="n">log_y</span><span class="p">),</span><span class="w"> </span><span class="n">var</span><span class="o">=</span><span class="n">var</span><span class="p">(</span><span class="n">log_y</span><span class="p">))</span><span class="w">

</span><span class="c1"># Now assign the corresponding variance to each data-point again</span><span class="w">
</span><span class="n">mergedData</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">merge</span><span class="p">(</span><span class="n">log_data</span><span class="p">,</span><span class="w"> </span><span class="n">stats</span><span class="p">)</span><span class="w">

</span><span class="c1"># Prepare the vectors and matrices for the weighted linear least squares estimator</span><span class="w">
</span><span class="n">W</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">diag</span><span class="p">(</span><span class="m">1.0</span><span class="w"> </span><span class="o">/</span><span class="w"> </span><span class="n">mergedData</span><span class="o">$</span><span class="n">var</span><span class="p">)</span><span class="w">
</span><span class="n">X</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">cbind</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="n">mergedData</span><span class="o">$</span><span class="n">log_n</span><span class="p">)</span><span class="w">
</span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">mergedData</span><span class="o">$</span><span class="n">log_y</span><span class="w">

</span><span class="c1"># Estimate the Intercept and Slope using weighted linear least squares</span><span class="w">
</span><span class="n">theta</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">ginv</span><span class="p">(</span><span class="n">t</span><span class="p">(</span><span class="n">X</span><span class="p">)</span><span class="w"> </span><span class="o">%*%</span><span class="w"> </span><span class="n">W</span><span class="w"> </span><span class="o">%*%</span><span class="w"> </span><span class="n">X</span><span class="p">)</span><span class="w"> </span><span class="o">%*%</span><span class="w"> </span><span class="n">t</span><span class="p">(</span><span class="n">X</span><span class="p">)</span><span class="w"> </span><span class="o">%*%</span><span class="w"> </span><span class="n">W</span><span class="w"> </span><span class="o">%*%</span><span class="w"> </span><span class="n">y</span><span class="w">
</span><span class="n">cat</span><span class="p">(</span><span class="s2">"slope m="</span><span class="p">,</span><span class="w"> </span><span class="n">theta</span><span class="p">[</span><span class="m">2</span><span class="p">],</span><span class="w"> </span><span class="s2">". Intercept b="</span><span class="p">,</span><span class="w"> </span><span class="n">theta</span><span class="p">[</span><span class="m">1</span><span class="p">],</span><span class="w"> </span><span class="n">sep</span><span class="o">=</span><span class="s2">""</span><span class="p">)</span><span class="w">

</span><span class="c1"># Plot the estimated line</span><span class="w">
</span><span class="n">p</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">ggplot</span><span class="p">(</span><span class="n">plotData</span><span class="p">,</span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">n</span><span class="p">,</span><span class="n">y</span><span class="o">=</span><span class="n">user</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_point</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">scale_y_log10</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">scale_x_log10</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_abline</span><span class="p">(</span><span class="n">slope</span><span class="o">=</span><span class="n">theta</span><span class="p">[</span><span class="m">2</span><span class="p">],</span><span class="w"> </span><span class="n">intercept</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">theta</span><span class="p">[</span><span class="m">1</span><span class="p">])</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">theme_bw</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">ylab</span><span class="p">(</span><span class="s2">"computation time / s"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">theme</span><span class="p">(</span><span class="n">axis.text</span><span class="o">=</span><span class="n">element_text</span><span class="p">(</span><span class="n">size</span><span class="o">=</span><span class="m">12</span><span class="p">),</span><span class="w">
        </span><span class="n">axis.title</span><span class="o">=</span><span class="n">element_text</span><span class="p">(</span><span class="n">size</span><span class="o">=</span><span class="m">14</span><span class="p">,</span><span class="n">face</span><span class="o">=</span><span class="s2">"bold"</span><span class="p">))</span><span class="w">
</span><span class="n">plot</span><span class="p">(</span><span class="n">p</span><span class="p">)</span></code></pre></figure> <hr/> <p></p> <p>The estimator computes the following values for the slope and the intercept:</p> <figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">Slope</span><span class="w"> </span><span class="n">m</span><span class="o">=</span><span class="m">3.993954</span><span class="n">.</span><span class="w"> </span><span class="n">Intercept</span><span class="w"> </span><span class="n">b</span><span class="o">=</span><span class="m">-7.875513</span></code></pre></figure> <p>The fitted line aligns closely with the data, as illustrated in the plot below:</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-09-23-a-few-notes-on-the-runtime-complexity-of-latin-hypercube-sampling/logXYfitPlot-480.webp 480w,/assets/img/2025-09-23-a-few-notes-on-the-runtime-complexity-of-latin-hypercube-sampling/logXYfitPlot-800.webp 800w,/assets/img/2025-09-23-a-few-notes-on-the-runtime-complexity-of-latin-hypercube-sampling/logXYfitPlot-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-09-23-a-few-notes-on-the-runtime-complexity-of-latin-hypercube-sampling/logXYfitPlot.png" class="img-fluid rounded z-depth-1 imgcenter" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 4:</b> Computation time of the LHS algorithm for different numbers of design points \(n\), shown on a log10 scale for both axes. A fitted line through all points helps estimate the runtime complexity of LHS. </figcaption> </figure> <p>Using the estimated slope and intercept, we can now express the expected runtime of the LHS algorithm as a function of the number of design points \(n\):</p> \[\begin{align} \log_{10} y &amp;= m \log_{10} n + b \\ f(n) = y &amp;= 10 ^{m \log_{10} n + b} \\ &amp;= \big(10^{\log_{10} n} \big)^m \cdot 10^b \\ &amp;= 10^b \cdot n^m \\ &amp;= 10^{-7.8755} \cdot n^{3.9939} \\ &amp;\approx 10^{-7.8} \cdot n^{4} \end{align}\] <p>The estimated runtime from the fitted line is slightly pessimistic, so in practice the actual computation time (at least on my machine) is likely a bit lower. Extrapolating this estimate to \(n=1000\), we would expect a runtime of approximately 16,000 seconds, or about 4.5 hours.</p> <p>In summary, we can conclude that the LHS algorithm exhibits a runtime complexity of order \(\mathcal{O}(n^4)\).</p>]]></content><author><name></name></author><category term="programming"/><category term="math"/><category term="math"/><summary type="html"><![CDATA[Exploring the runtime complexity of the Latin Hypercube Sampling (LHS) algorithm, this post investigates how computation time scales with the number of design points. By measuring runtimes, applying log-log transformations, and using weighted linear regression, we estimate the polynomial order of growth and provide practical insights into the expected performance of LHS for larger datasets.]]></summary></entry><entry><title type="html">Implementing the Mahalanobis Distance in Python</title><link href="https://markusthill.github.io/blog/2025/mahalanobis-distance-implementations/" rel="alternate" type="text/html" title="Implementing the Mahalanobis Distance in Python"/><published>2025-09-24T09:00:51+00:00</published><updated>2025-09-24T09:00:51+00:00</updated><id>https://markusthill.github.io/blog/2025/mahalanobis-distance-implementations</id><content type="html" xml:base="https://markusthill.github.io/blog/2025/mahalanobis-distance-implementations/"><![CDATA[<blockquote> <p>Below you will find a Jupyter Notebook that explores the Mahalanobis distance in depth.<br/> It begins with the theoretical foundations and practical applications, followed by multiple Python implementations (NumPy, JAX, TensorFlow, SciPy) to ensure correctness and compare performance.<br/> The notebook validates these implementations, benchmarks them across low- and high-dimensional datasets, and illustrates the geometric intuition behind the Mahalanobis distance through visualizations and whitening transformations.<br/> Finally, it demonstrates the close connection to the Chi-square distribution and applies the method to a simple anomaly detection task.</p> <p>The aim is to provide both a solid theoretical understanding and practical tools for applying the Mahalanobis distance in real-world scenarios.</p> </blockquote> <p>👉 A more theoretical discussion of the Mahalanobis distance and its connection to the Chi-square distribution can be found <strong><a href="/blog/2025/mahalanobis-distance/">here</a></strong>.</p> <style>.jupyter-child-ext{width:112%;position:relative;left:calc(-10%)}</style> <div class="jupyter-child-ext"> <div class="jupyter-notebook" style="position: relative; width: 100%; margin: 0 auto;"> <div class="jupyter-notebook-iframe-container"> <iframe src="/assets/jupyter/MarkusThill.github.io-jupyter/2025_09_26_mahalanobis.ipynb.html" style="position: absolute; top: 0; left: 0; border-style: none;" width="100%" height="100%" onload="this.parentElement.style.paddingBottom = (this.contentWindow.document.documentElement.scrollHeight + 10) + 'px'"></iframe> </div> </div> </div>]]></content><author><name></name></author><category term="programming"/><category term="math"/><category term="stats"/><category term="math"/><summary type="html"><![CDATA[A hands-on Jupyter Notebook implementation of the Mahalanobis distance in Python. Covers theory, multiple implementations (NumPy, JAX, TensorFlow, SciPy), benchmarking on low- and high-dimensional data, visualizations, and its connection to the Chi-square distribution for anomaly detection.]]></summary></entry><entry><title type="html">Building Intelligent Agents for Connect-4: Tree Search Algorithms</title><link href="https://markusthill.github.io/blog/2025/connect-4-tree-search-algorithms/" rel="alternate" type="text/html" title="Building Intelligent Agents for Connect-4: Tree Search Algorithms"/><published>2025-09-24T08:00:51+00:00</published><updated>2025-09-24T08:00:51+00:00</updated><id>https://markusthill.github.io/blog/2025/connect-4-tree-search-algorithms</id><content type="html" xml:base="https://markusthill.github.io/blog/2025/connect-4-tree-search-algorithms/"><![CDATA[<p>This post is the 2nd part of a series of 7 articles:</p> <ol> <li><a href="/blog/2025/connect-4-introduction-and-tree-search-algorithms/">Building Intelligent Agents for Connect-4: First Steps</a></li> <li><strong><a href="/blog/2025/connect-4-tree-search-algorithms/">Building Intelligent Agents for Connect-4: Tree Search Algorithms</a></strong></li> <li><a href="#">Building Intelligent Agents for Connect-4: Board Representations</a></li> <li><a href="#">Building Intelligent Agents for Connect-4: Move Ordering</a></li> <li><a href="#">Building Intelligent Agents for Connect-4: Transposition Tables</a></li> <li><a href="#">Building Intelligent Agents for Connect-4: Opening Databases</a></li> <li><a href="#">Building Intelligent Agents for Connect-4: Final Considerations</a></li> </ol> <p>To play Connect-4 perfectly, an agent must be capable of fully exploring the entire game tree—which, in the most extreme case, can span all 42 moves of the game. However, the search effort grows exponentially with depth, making this a significant computational challenge and requiring considerable development effort to achieve optimal play.</p> <p>This post (and the ones that follow) will introduce some of the techniques and strategies that make such an agent possible. In this article, we’ll focus on one of the fundamental methods for efficient game tree exploration: <strong>alpha-beta search</strong>.</p> <h2 id="the-alpha-beta-search">The Alpha-Beta Search</h2> <p>The <strong>Alpha-Beta search</strong> is an optimized version of the classic Minimax algorithm. While a simple Minimax search evaluates <em>every</em> node in the game tree, Alpha-Beta introduces two bounds—<strong>alpha</strong> and <strong>beta</strong>—to prune (cut off) large parts of the tree that cannot influence the final decision. The effectiveness of this pruning depends on factors such as the quality of the move ordering.</p> <p>The core idea is straightforward: because each player alternates between maximizing and minimizing outcomes, certain branches can be skipped if a better alternative is already known. Two key variables guide this process:</p> <ul> <li><strong>Alpha</strong> – the best score the <em>maximizing</em> player can guarantee so far (a lower bound).</li> <li><strong>Beta</strong> – the best score the <em>minimizing</em> player can guarantee so far (an upper bound).</li> </ul> <p>As the search progresses recursively through the tree, alpha and beta are updated and compared at each node. When the algorithm detects that further exploration cannot improve the current result, it prunes that branch. This pruning can occur at any level, not just near the root.</p> <p>From the maximizing player’s perspective, the procedure for processing a node is as follows:</p> <ol> <li>Generate all legal moves for the current state.</li> <li>Evaluate these moves in sequence.</li> <li>If any move returns a value <strong>greater than or equal to beta</strong>, the search stops at that node and returns beta (a <strong>fail-high</strong>). This indicates that the minimizing opponent will never allow this position to occur.</li> <li>If none of the moves improves alpha, the node returns alpha as a bound (<strong>fail-low</strong>), signaling that this position is not good enough to pursue.</li> <li>Only values between alpha and beta are considered <strong>exact</strong> evaluations; values outside this range are treated as bounds.</li> </ol> <p>As chess programmer <a href="http://web.archive.org/web/20040512194831/brucemo.com/compchess/programming/glossary.htm">Bruce Moreland</a> explains succinctly:</p> <blockquote> <p><em>“A fail-high indicates that the search found something that was ‘too good.’ The opponent can avoid this position, so there’s no need to explore further. A fail-low indicates that the position was not good enough—we have a better alternative, and will not choose the move that leads here.”</em></p> </blockquote> <p>You can find a simplified pseudo-code implementation below, and the full implementation is available as <code class="language-plaintext highlighter-rouge">AlphaBetaAgent</code> in the appendix. Some of these elements will be discussed in greater depth in upcoming posts.</p> <figure class="highlight"><pre><code class="language-c" data-lang="c"><span class="kt">double</span> <span class="nf">max</span><span class="p">(</span><span class="kt">double</span> <span class="n">alpha</span><span class="p">,</span> <span class="kt">double</span> <span class="n">beta</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">if</span><span class="p">(</span><span class="n">hasWin</span><span class="p">(</span><span class="n">playerMax</span><span class="p">))</span>
    <span class="k">return</span> <span class="o">+</span><span class="mi">1</span><span class="p">;</span>
  <span class="k">if</span><span class="p">(</span><span class="n">isDraw</span><span class="p">())</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
  <span class="k">if</span><span class="p">(</span><span class="n">bookEntryAvailable</span><span class="p">())</span> <span class="k">return</span> <span class="n">bookValue</span><span class="p">();</span> <span class="c1">// Opening Book</span>
  <span class="k">if</span><span class="p">(</span><span class="n">hasTransTableEntry</span><span class="p">(</span><span class="n">board</span><span class="p">,</span> <span class="n">mirroredBoard</span><span class="p">))</span>
    <span class="k">return</span> <span class="n">transTableEntryValue</span><span class="p">(</span><span class="n">board</span><span class="p">,</span> <span class="n">mirroredBoard</span><span class="p">)</span>
  <span class="n">generateMoves</span><span class="p">(</span><span class="n">max</span><span class="p">);</span>
  <span class="n">sortMoves</span><span class="p">(</span><span class="n">max</span><span class="p">);</span>
  <span class="k">if</span><span class="p">(</span><span class="n">isSymmetricPosition</span><span class="p">())</span>
    <span class="n">removeSymMoves</span><span class="p">();</span>
  <span class="k">while</span><span class="p">(</span><span class="n">hasMovesLeft</span><span class="p">(</span><span class="n">max</span><span class="p">))</span> <span class="p">{</span>
    <span class="n">makeMove</span><span class="p">(</span><span class="n">max</span><span class="p">);</span>
    <span class="n">value</span> <span class="o">=</span> <span class="n">min</span><span class="p">(</span><span class="n">alpha</span><span class="p">,</span> <span class="n">beta</span><span class="p">);</span>
    <span class="n">takeMoveBack</span><span class="p">(</span><span class="n">max</span><span class="p">);</span>
    <span class="k">if</span><span class="p">(</span><span class="n">value</span> <span class="o">&gt;=</span> <span class="n">beta</span><span class="p">)</span> <span class="p">{</span>
      <span class="n">putEntryInTranspositionTable</span><span class="p">();</span>
      <span class="k">return</span> <span class="n">beta</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">if</span><span class="p">(</span><span class="n">value</span> <span class="o">&gt;</span> <span class="n">alpha</span><span class="p">)</span>
      <span class="n">alpha</span> <span class="o">=</span> <span class="n">value</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="n">putEntryInTranspositionTable</span><span class="p">();</span>
  <span class="k">return</span> <span class="n">alpha</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">double</span> <span class="nf">min</span><span class="p">(</span><span class="kt">double</span> <span class="n">alpha</span><span class="p">,</span> <span class="kt">double</span> <span class="n">beta</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">if</span><span class="p">(</span><span class="n">hasWin</span><span class="p">(</span><span class="n">min</span><span class="p">))</span> <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
  <span class="k">if</span><span class="p">(</span><span class="n">enhancedTranspositionCutoff</span><span class="p">(</span><span class="n">board</span><span class="p">,</span> <span class="n">mirroredBoard</span><span class="p">))</span>
    <span class="k">return</span> <span class="n">ETCValue</span><span class="p">;</span>
  <span class="n">generateMoves</span><span class="p">(</span><span class="n">min</span><span class="p">);</span>
  <span class="n">sortMoves</span><span class="p">(</span><span class="n">min</span><span class="p">);</span>
  <span class="k">if</span><span class="p">(</span><span class="n">isSymmetricPosition</span><span class="p">())</span>
    <span class="n">removeSymMoves</span><span class="p">();</span>
  <span class="k">while</span><span class="p">(</span><span class="n">hasMovesLeft</span><span class="p">(</span><span class="n">min</span><span class="p">))</span> <span class="p">{</span>
    <span class="n">makeMove</span><span class="p">(</span><span class="n">min</span><span class="p">);</span>
    <span class="n">value</span> <span class="o">=</span> <span class="n">max</span><span class="p">(</span><span class="n">alpha</span><span class="p">,</span> <span class="n">beta</span><span class="p">);</span>
    <span class="n">takeMoveBack</span><span class="p">(</span><span class="n">min</span><span class="p">);</span>
    <span class="k">if</span><span class="p">(</span><span class="n">value</span> <span class="o">&lt;=</span> <span class="n">alpha</span><span class="p">)</span>
      <span class="k">return</span> <span class="n">alpha</span><span class="p">;</span>
    <span class="k">if</span><span class="p">(</span><span class="n">value</span> <span class="o">&lt;</span> <span class="n">beta</span><span class="p">)</span>
      <span class="n">beta</span> <span class="o">=</span> <span class="n">value</span><span class="p">;</span>
  <span class="p">}</span>
    <span class="k">return</span> <span class="n">beta</span><span class="p">;</span>
<span class="p">}</span></code></pre></figure> <h3 id="the-negamax-variant">The Negamax Variant</h3> <p>In our implementation, we use the <strong>Negamax</strong> variant of the Minimax algorithm. Negamax is mathematically equivalent to Minimax but simplifies the code by taking advantage of the symmetry between maximizing and minimizing players. Instead of maintaining two separate evaluation branches—one for the maximizing player and one for the minimizing player—Negamax represents both using a single recursive function. The idea is based on the relation:</p> \[\min(a, b) = -\max(-a, -b)\] <p>At each step, the algorithm evaluates a move by calling itself recursively with inverted scores and a flipped sign, effectively switching the roles of the players. This reduces code complexity and makes implementing features like alpha-beta pruning more straightforward.</p> <p>Negamax is widely used in game AI development for games like chess, checkers, and Connect-4 because it keeps the logic compact while maintaining the same performance and search results as the standard Minimax algorithm.</p> <p>The corresponding code for our negamax implementation can be found on <a href="https://github.com/MarkusThill/BitBully/blob/9c8993b185662d800568494dd4983a7aa2bb7fb8/src/BitBully.h#L100">GitHub</a>.</p> <p><br/></p> <h2 id="additional-resources-and-source-code">Additional Resources and Source Code</h2> <p>More recently, I developed a high-performance C++ and Python version of a Connect-4 solver called <strong>BitBully</strong>, available on <a href="https://github.com/MarkusThill/BitBully">GitHub</a> and <a href="https://pypi.org/project/bitbully/">PyPI</a>. Also, check out the related <a href="https://markusthill.github.io/projects/0_bitbully/">project page</a>.</p> <p>For those interested in a more educational or research-oriented setup, an earlier Java-based framework for <em>Connect-4</em> is also available on GitHub: <a href="http://github.com/MarkusThill/Connect-Four">http://github.com/MarkusThill/Connect-Four</a>.</p>]]></content><author><name></name></author><category term="Programming"/><category term="Connect-4"/><category term="AI"/><category term="tree-search"/><category term="alpha-beta"/><category term="minimax"/><category term="transposition tables"/><category term="opening databases"/><category term="move ordering"/><category term="bitboards"/><summary type="html"><![CDATA[Learn how the Alpha-Beta search algorithm optimizes Minimax for Connect-4 by pruning unnecessary branches, improving efficiency, and enabling stronger gameplay strategies.]]></summary></entry><entry><title type="html">DIY IoT: Building a Smart Adapter Plug from Scratch with ESP8266-01 and MQTT</title><link href="https://markusthill.github.io/blog/2025/control-an-adapter-plug-with-an-esp8266-and-mqtt/" rel="alternate" type="text/html" title="DIY IoT: Building a Smart Adapter Plug from Scratch with ESP8266-01 and MQTT"/><published>2025-09-21T08:00:51+00:00</published><updated>2025-09-21T08:00:51+00:00</updated><id>https://markusthill.github.io/blog/2025/control-an-adapter-plug-with-an-esp8266-and-mqtt</id><content type="html" xml:base="https://markusthill.github.io/blog/2025/control-an-adapter-plug-with-an-esp8266-and-mqtt/"><![CDATA[<p>The ESP8266 Wi-Fi chip family, now several years old, remains a fantastic choice for DIY IoT projects. With a built-in microcontroller unit (MCU) and a full TCP/IP stack, the ESP8266 is a versatile and affordable solution for a wide range of IoT (Internet of Things) applications. Produced by the Chinese manufacturer Espressif Systems in Shanghai, these chips have become increasingly popular among hobbyists and makers.</p> <p>For this post, I’m using the compact ESP8266-01 module, which provides just two general-purpose input/output (GPIO) pins. Despite its minimal pin count, the module is small, inexpensive, and perfectly suitable for the task at hand. Here, we’ll walk through the steps to build a simple adapter plug that can be turned on and off over the internet—or a local network—using an ESP8266 module and the MQTT protocol. This project serves as a clear example of how to create connected devices with minimal hardware and effort, making it a relevant and educational reference for anyone interested in IoT.</p> <p>In this post, we’ll walk through the steps to build a simple adapter plug that can be controlled over the internet—or a local network—using an ESP8266 module and the MQTT protocol. The finished adapter plug will look like this:</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/electronics06-480.webp 480w,/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/electronics06-800.webp 800w,/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/electronics06-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/electronics06.jpg" class="img-fluid rounded z-depth-1 imgcenter" width="80%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/electronics07-480.webp 480w,/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/electronics07-800.webp 800w,/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/electronics07-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/electronics07.jpg" class="img-fluid rounded z-depth-1 imgcenter" width="80%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p>The low-cost ESP8266 Wi-Fi chip family has become increasingly popular among hobbyists. The ESP8266 features a built-in microcontroller unit (MCU) and a full TCP/IP stack, making it an attractive choice for many IoT (Internet of Things) projects. These chips are produced by the Chinese manufacturer Espressif Systems, based in Shanghai. For this post, I am using a simple module, the ESP8266-01, which provides only two general-purpose input/output (GPIO) pins but is compact and perfectly sufficient for the task at hand. The figure below shows the top view of the ESP-01.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/esp01v0-480.webp 480w,/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/esp01v0-800.webp 800w,/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/esp01v0-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/esp01v0.jpg" class="img-fluid rounded z-depth-1 imgcenter" width="80%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/esp8266-01-480.webp 480w,/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/esp8266-01-800.webp 800w,/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/esp8266-01-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/esp8266-01.jpg" class="img-fluid rounded z-depth-1 imgcenter" width="80%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p><em>Top view of the ESP8266-01 module. Images taken from <a href="https://www.sparkfun.com/products/13678">Sparkfun</a>. Images are CC by <a href="https://creativecommons.org/licenses/by/2.0/">2.0</a></em> </p> <h2 id="wiring-of-the-esp8266-01">Wiring of the ESP8266-01</h2> <p>The first and most important thing to note is that the ESP8266 chip operates entirely on 3.3V for both power and I/O. Never connect it directly to 5V, as this will likely damage the chip permanently. Extra caution is required when using FTDI USB-to-TTL adapter cables, which often provide 5V on VCC.</p> <p>If you are using your own power supply, ensure it can deliver at least 200mA—this applies as well to USB ports and adapter cables. Insufficient current can lead to erratic behavior, such as random restarts of the ESP.</p> <p>When working with FTDI USB-to-TTL adapters that use the PL-2303HX chipset, you may encounter driver installation issues on Windows 7, 8, or 10. In my experience, the solution described at <a href="https://www.ifamilysoftware.com/news37.html">ifamilysoftware.com</a> resolved these problems.</p> <p>Typically, the ESP8266-01 is wired as shown in the following diagram:</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/esp8266_flash_prog_board_sch-480.webp 480w,/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/esp8266_flash_prog_board_sch-800.webp 800w,/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/esp8266_flash_prog_board_sch-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/esp8266_flash_prog_board_sch.png" class="img-fluid rounded z-depth-1 imgcenter" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p><em>Image taken from <a href="https://www.esp8266.com/wiki/doku.php?id=getting-started-with-the-esp8266">https://www.esp8266.com/wiki/doku.php?id=getting-started-with-the-esp8266</a></em></p> <p>The ESP-01 module has 8 pins: VCC, GND, CH_PD, TX, RX, RST, GPIO0, and GPIO1. To make the module work correctly, follow this wiring scheme:</p> <ul> <li><strong>VCC</strong>: Connect to 3.3V.</li> <li><strong>CH_PD</strong>: Must be pulled up to 3.3V, typically via a 1kΩ resistor. This step is essential; the ESP will not function without it.</li> <li><strong>GND</strong>: Connect to the FTDI adapter’s GND pin.</li> <li><strong>RX and TX</strong>: Required for serial communication with your computer. When connecting to the FTDI adapter, cross the wires: <ul> <li><strong>RX</strong> → FTDI TX</li> <li><strong>TX</strong> → FTDI RX</li> </ul> </li> <li><strong>RST</strong>: Pull up to 3.3V with a 1kΩ resistor. Pulling it down to GND via a switch will reset the module (RESET switch in the diagram). Do not forget the pull-up resistor, or the ESP will reset continuously.</li> <li><strong>GPIO0</strong>: Connect to GND through a switch (PROG in the diagram) to enable flashing. During normal operation, it can be used for other purposes.</li> <li><strong>GPIO1</strong>: Free for general use.</li> </ul> <p>This wiring ensures proper operation and allows you to flash and control the ESP-01 safely.</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/20160503_172349-480.webp 480w,/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/20160503_172349-800.webp 800w,/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/20160503_172349-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/20160503_172349.jpg" class="img-fluid rounded z-depth-1 imgcenter" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <center><it>Wiring of the ESP8266-01 on a breadboard.</it></center> <h2 id="first-conversation-with-the-esp">First Conversation with the ESP</h2> <p>To verify that your wiring with a new ESP8266-01 works, you can use a standard terminal emulator to communicate with the module, which comes with pre-flashed firmware. Note that once you flash the ESP-01 yourself, it will no longer respond to AT commands (such as <code class="language-plaintext highlighter-rouge">AT+GMR</code> or <code class="language-plaintext highlighter-rouge">AT+RST</code>), since the original firmware will be overwritten.</p> <p>The ESP-01’s default baud rate is not consistent, so you may need to try different settings. Start with <strong>9600</strong> and <strong>115200</strong>, then try <strong>57600</strong> or <strong>76800</strong> (38400 × 2). At the wrong baud rate, you might see garbled symbols or nothing at all.</p> <p>After resetting the ESP module, a <code class="language-plaintext highlighter-rouge">ready</code> message should appear at the correct baud rate if your UART RX wiring is correct. Once you have identified a working baud rate, you can send the first <code class="language-plaintext highlighter-rouge">AT</code> command to check if the module is responsive. The module should reply with <code class="language-plaintext highlighter-rouge">OK</code>.</p> <figure class="highlight"><pre><code class="language-plaintext" data-lang="plaintext">  AT

  OK</code></pre></figure> <p>Additionally, you can try the <code class="language-plaintext highlighter-rouge">AT+GMR</code> command, which should produce a result similar to this:</p> <figure class="highlight"><pre><code class="language-plaintext" data-lang="plaintext">  AT+GMR

  AT version:0.40.0.0(Aug  8 2015 14:45:58)
  SDK version:1.3.0
  Ai-Thinker Technology Co.,Ltd.
  Build:1.3.0.2 Sep 11 2015 11:48:04
  OK</code></pre></figure> <p>The AT command set for the ESP8266 is quite extensive. A handy table of commands—including those used to configure Wi-Fi—can be found <a href="https://nurdspace.nl/ESP8266#AT_Commands">here</a>. Even with this basic firmware installed, you can already accomplish a wide range of tasks on the ESP module.</p> <h2 id="a-simple-test-program-using-the-arduino-ide">A simple Test Program using the Arduino IDE</h2> <p>With just a few steps, you can use the Arduino IDE to program ESP8266 modules. Numerous tutorials are available online to guide you through setting up the Arduino IDE for the ESP8266 family.</p> <p>Once your Arduino environment is set up, a great first test is a simple program that blinks an LED.</p> <p>The wiring for this setup is straightforward and illustrated in the following diagram.</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/lochmaster-480.webp 480w,/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/lochmaster-800.webp 800w,/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/lochmaster-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/lochmaster.png" class="img-fluid rounded z-depth-1 imgcenter" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p><em>Connecting a LED to the GPIO-2 pin of the ESP8266 modul. Note that the connection diagram shown here is simplified and does not include the additional connections that are typically required (TxD, RxD) to flash a program to the device. Figure taken from <a href="https://iot-playground.com/blog/2-uncategorised/38-esp8266-and-arduino-ide-blink-example">iot-playground.com</a></em></p> <p>To see the result, connect an LED to the GPIO-2 pin through a resistor (typically 220–330 Ω, but calculate the appropriate value for your setup) and connect the other side to ground, as shown in the diagram above. Once the wiring is complete, you can flash the ESP8266-01 with the following simple program, which will make the LED blink at short intervals.</p> <figure class="highlight"><pre><code class="language-c" data-lang="c"><span class="c1">// ESP8266-01 LED Blink Example</span>
<span class="c1">// This sketch blinks an LED connected to GPIO-2</span>

<span class="k">const</span> <span class="kt">int</span> <span class="n">ledPin</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span>          <span class="c1">// Pin connected to the LED</span>
<span class="k">const</span> <span class="kt">unsigned</span> <span class="kt">long</span> <span class="n">ON_TIME</span> <span class="o">=</span> <span class="mi">500</span><span class="p">;</span>   <span class="c1">// LED on duration in milliseconds</span>
<span class="k">const</span> <span class="kt">unsigned</span> <span class="kt">long</span> <span class="n">OFF_TIME</span> <span class="o">=</span> <span class="mi">1000</span><span class="p">;</span> <span class="c1">// LED off duration in milliseconds</span>

<span class="kt">void</span> <span class="nf">setup</span><span class="p">()</span> <span class="p">{</span>
  <span class="n">pinMode</span><span class="p">(</span><span class="n">ledPin</span><span class="p">,</span> <span class="n">OUTPUT</span><span class="p">);</span>      <span class="c1">// Configure the LED pin as an output</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">loop</span><span class="p">()</span> <span class="p">{</span>
  <span class="n">blinkLED</span><span class="p">(</span><span class="n">ledPin</span><span class="p">,</span> <span class="n">ON_TIME</span><span class="p">,</span> <span class="n">OFF_TIME</span><span class="p">);</span>
<span class="p">}</span>

<span class="c1">// Function to blink an LED with specified on/off durations</span>
<span class="kt">void</span> <span class="nf">blinkLED</span><span class="p">(</span><span class="kt">int</span> <span class="n">pin</span><span class="p">,</span> <span class="kt">unsigned</span> <span class="kt">long</span> <span class="n">onTime</span><span class="p">,</span> <span class="kt">unsigned</span> <span class="kt">long</span> <span class="n">offTime</span><span class="p">)</span> <span class="p">{</span>
  <span class="n">digitalWrite</span><span class="p">(</span><span class="n">pin</span><span class="p">,</span> <span class="n">HIGH</span><span class="p">);</span>      <span class="c1">// Turn LED on</span>
  <span class="n">delay</span><span class="p">(</span><span class="n">onTime</span><span class="p">);</span>                <span class="c1">// Wait for onTime milliseconds</span>

  <span class="n">digitalWrite</span><span class="p">(</span><span class="n">pin</span><span class="p">,</span> <span class="n">LOW</span><span class="p">);</span>       <span class="c1">// Turn LED off</span>
  <span class="n">delay</span><span class="p">(</span><span class="n">offTime</span><span class="p">);</span>               <span class="c1">// Wait for offTime milliseconds</span>
<span class="p">}</span></code></pre></figure> <h2 id="circuit-for-controlling-the-adapter-plug">Circuit for Controlling the Adapter Plug</h2> <p>Once you’ve confirmed that your ESP8266 is working correctly and you’re comfortable programming it, let’s move on to the circuit for our adapter plug.</p> <p><strong>Important:</strong> If you plan to work with mains voltage, extreme caution is required. Ensure that all high-voltage contacts are properly insulated and not exposed. If you are not confident handling mains electricity, you can still build the circuit to switch lower voltages safely.</p> <p>First, let’s take a look at the stripboard layout:</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/lochmaster2-480.webp 480w,/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/lochmaster2-800.webp 800w,/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/lochmaster2-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/lochmaster2.png" class="img-fluid rounded z-depth-1 imgcenter" width="70%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <ul> <li>The circuit requires a 5V supply (top-left corner of the diagram). Ensure the power source can provide at least 500 mA. I found a compact supply that fits neatly inside the adapter plug enclosure.</li> <li>Since the ESP-01 module operates at 3.3V, a voltage regulator (LM1117T) is used to step down the 5V supply.</li> <li>The ESP-01 module is plugged into the socket shown in the upper-middle part of the diagram.</li> <li>Button S1 (RST) is used to reset the ESP-01.</li> <li>Button S2 serves two purposes: <ol> <li>Enter programming mode: press S1 → press S2 → release S2 → release S1.</li> <li>Normal operation: manually turn the outlet on or off.</li> </ol> </li> <li>Transistor T2 (e.g., D1163A or equivalent) drives the relay. Any NPN transistor capable of handling the relay current can be used. A diode (D2) must be connected in parallel to the relay to protect the circuit from voltage spikes caused by the relay’s inductive load.</li> <li>LED D1 indicates the current state of the adapter plug (on or off).</li> <li>The ESP-01 cannot reliably initialize if GPIO2 is directly connected to T2’s base, likely because GPIO2 defaults to HIGH at startup and attempts to activate the relay. To prevent this, a second transistor T1 (BC547) with a 10 µF capacitor delays the HIGH signal from GPIO2 for about one second. During initialization, the capacitor charges through R5 (470 kΩ), keeping T1 inactive until the voltage is sufficient. Once T1 activates, T2 can drive the relay safely.</li> <li>The green pin header connects to an FTDI device to program the ESP-01 via the serial interface.</li> <li>The ESP-01 operates between 0 V and 3.3 V. Make sure your FTDI converter matches this voltage range to avoid damaging the module.</li> </ul> <p>The following images show how the circuit board and the final adapter plug could look like:</p> <div style="width: 70%" class="imgcenter"> <swiper-container keyboard="true" navigation="true" pagination="true" pagination-clickable="true" pagination-dynamic-bullets="true" rewind="true"> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/electronics01-480.webp 480w,/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/electronics01-800.webp 800w,/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/electronics01-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/electronics01.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/electronics02-480.webp 480w,/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/electronics02-800.webp 800w,/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/electronics02-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/electronics02.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/electronics03-480.webp 480w,/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/electronics03-800.webp 800w,/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/electronics03-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/electronics03.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/electronics04-480.webp 480w,/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/electronics04-800.webp 800w,/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/electronics04-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/electronics04.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/electronics05-480.webp 480w,/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/electronics05-800.webp 800w,/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/electronics05-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/electronics05.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/electronics06-480.webp 480w,/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/electronics06-800.webp 800w,/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/electronics06-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/electronics06.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/electronics07-480.webp 480w,/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/electronics07-800.webp 800w,/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/electronics07-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-09-21-control-an-adapter-plug-with-an-esp8266-and-mqtt/electronics07.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> </swiper-container> </div> <h2 id="source-code">Source code</h2> <p>Finally, we just need a program to control the adapter plug via MQTT, and the setup is complete!</p> <hr/> <figure class="highlight"><pre><code class="language-c" data-lang="c"><span class="cp">#include</span> <span class="cpf">&lt;ESP8266WiFi.h&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;PubSubClient.h&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;string.h&gt;</span><span class="cp">
</span>
<span class="cp">#define SLEEP_DELAY_IN_SECONDS  10
#define TOPIC_ROOT "diedackel/f"
#define DEVICE_ID  "plug-02"
#define SLASH "/"
#define CMD_RELAIS_ON "device=on"
#define CMD_RELAIS_OFF "device=off"
#define STR_CONFIRM_STATE "confirmNewState="
</span>
<span class="c1">// ---------------------- WIFI &amp; MQTT CONFIGURATION ----------------------</span>
<span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">ssid</span> <span class="o">=</span> <span class="s">"FusulFusul"</span><span class="p">;</span> <span class="c1">// WiFi SSID</span>
<span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">password</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>        <span class="c1">// WiFi password</span>
<span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">mqtt_server</span> <span class="o">=</span> <span class="s">"io.adafruit.com"</span><span class="p">;</span>
<span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">mqtt_username</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>
<span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">mqtt_password</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>
<span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">mqtt_pubs_topic</span> <span class="o">=</span> <span class="n">TOPIC_ROOT</span> <span class="n">SLASH</span> <span class="n">DEVICE_ID</span><span class="p">;</span>
<span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">mqtt_subs_topic</span> <span class="o">=</span> <span class="n">TOPIC_ROOT</span> <span class="n">SLASH</span> <span class="n">DEVICE_ID</span><span class="p">;</span>

<span class="n">WiFiClient</span> <span class="n">espClient</span><span class="p">;</span>
<span class="n">PubSubClient</span> <span class="nf">client</span><span class="p">(</span><span class="n">espClient</span><span class="p">);</span>

<span class="c1">// ---------------------- GPIO &amp; STATE VARIABLES ----------------------</span>
<span class="kt">int</span> <span class="n">GPIO2</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span> <span class="c1">// GPIO pin controlling the relay</span>
<span class="kt">int</span> <span class="n">GPIO0</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="c1">// GPIO pin for manual relay control button</span>
<span class="kt">int</span> <span class="n">state</span> <span class="o">=</span> <span class="n">LOW</span><span class="p">;</span> <span class="c1">// Current relay state</span>
<span class="n">bool</span> <span class="n">debounce</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span> <span class="c1">// Debounce flag for button press</span>

<span class="cm">/*
 * setup() - Called once during initialization after reset
 */</span>
<span class="kt">void</span> <span class="nf">setup</span><span class="p">()</span> <span class="p">{</span>
  <span class="c1">// Configure GPIO0 as input and attach interrupt for button press</span>
  <span class="n">pinMode</span><span class="p">(</span><span class="n">GPIO0</span><span class="p">,</span> <span class="n">INPUT</span><span class="p">);</span>
  <span class="n">attachInterrupt</span><span class="p">(</span><span class="n">GPIO0</span><span class="p">,</span> <span class="n">fallingEdge</span><span class="p">,</span> <span class="n">FALLING</span><span class="p">);</span>
  
  <span class="c1">// Initialize serial port for debugging</span>
  <span class="n">Serial</span><span class="p">.</span><span class="n">begin</span><span class="p">(</span><span class="mi">115200</span><span class="p">);</span>
  
  <span class="c1">// Connect to WiFi network</span>
  <span class="n">setup_wifi</span><span class="p">();</span>
  
  <span class="c1">// Initialize MQTT client</span>
  <span class="n">client</span><span class="p">.</span><span class="n">setServer</span><span class="p">(</span><span class="n">mqtt_server</span><span class="p">,</span> <span class="mi">1883</span><span class="p">);</span>
  <span class="n">client</span><span class="p">.</span><span class="n">setCallback</span><span class="p">(</span><span class="n">callback</span><span class="p">);</span>
  
  <span class="c1">// Configure GPIO2 as output for relay control</span>
  <span class="n">pinMode</span><span class="p">(</span><span class="n">GPIO2</span><span class="p">,</span> <span class="n">OUTPUT</span><span class="p">);</span>
  <span class="c1">//pinMode(LED_BUILTIN, OUTPUT); // Commented out: may conflict with TX/RX pins</span>
<span class="p">}</span>

<span class="cm">/*
 * fallingEdge() - Interrupt service routine for button press
 */</span>
<span class="kt">void</span> <span class="nf">fallingEdge</span><span class="p">()</span> <span class="p">{</span>
  <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">debounce</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">state</span> <span class="o">=</span> <span class="o">!</span><span class="n">state</span><span class="p">;</span>             <span class="c1">// Toggle relay state</span>
    <span class="n">digitalWrite</span><span class="p">(</span><span class="n">GPIO2</span><span class="p">,</span> <span class="n">state</span><span class="p">);</span> <span class="c1">// Update relay output</span>
    <span class="n">debounce</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>            <span class="c1">// Prevent multiple triggers</span>
  <span class="p">}</span>
  <span class="c1">// Avoid calling other functions (like delay) in interrupts</span>
<span class="p">}</span>

<span class="cm">/*
 * setup_wifi() - Connect to WiFi network
 */</span>
<span class="kt">void</span> <span class="nf">setup_wifi</span><span class="p">()</span> <span class="p">{</span>
  <span class="n">delay</span><span class="p">(</span><span class="mi">10</span><span class="p">);</span>
  <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">();</span>
  <span class="n">Serial</span><span class="p">.</span><span class="n">print</span><span class="p">(</span><span class="s">"Connecting to "</span><span class="p">);</span>
  <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="n">ssid</span><span class="p">);</span>

  <span class="n">WiFi</span><span class="p">.</span><span class="n">begin</span><span class="p">(</span><span class="n">ssid</span><span class="p">,</span> <span class="n">password</span><span class="p">);</span>
  <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
  <span class="k">while</span> <span class="p">(</span><span class="n">WiFi</span><span class="p">.</span><span class="n">status</span><span class="p">()</span> <span class="o">!=</span> <span class="n">WL_CONNECTED</span> <span class="o">&amp;&amp;</span> <span class="n">i</span><span class="o">++</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">delay</span><span class="p">(</span><span class="mi">500</span><span class="p">);</span>
    <span class="n">Serial</span><span class="p">.</span><span class="n">print</span><span class="p">(</span><span class="s">"."</span><span class="p">);</span>
  <span class="p">}</span>

  <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">""</span><span class="p">);</span>
  <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"WiFi connected"</span><span class="p">);</span>
  <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"IP address: "</span><span class="p">);</span>
  <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="n">WiFi</span><span class="p">.</span><span class="n">localIP</span><span class="p">());</span>
<span class="p">}</span>

<span class="cm">/*
 * callback() - MQTT callback function triggered when a message arrives
 * @topic: Topic on which the message was received
 * @payload: Message payload
 * @length: Length of payload
 */</span>
<span class="kt">void</span> <span class="nf">callback</span><span class="p">(</span><span class="kt">char</span><span class="o">*</span> <span class="n">topic</span><span class="p">,</span> <span class="n">byte</span><span class="o">*</span> <span class="n">payload</span><span class="p">,</span> <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">length</span><span class="p">)</span> <span class="p">{</span>
  <span class="kt">char</span> <span class="n">msg</span><span class="p">[</span><span class="mi">50</span><span class="p">];</span>
  <span class="kt">int</span> <span class="n">i</span><span class="p">;</span>
  <span class="kt">char</span> <span class="n">string</span><span class="p">[</span><span class="mi">50</span><span class="p">];</span>
  <span class="kt">char</span> <span class="n">lowerString</span><span class="p">[</span><span class="mi">50</span><span class="p">];</span>

  <span class="n">sprintf</span><span class="p">(</span><span class="n">msg</span><span class="p">,</span> <span class="s">"Message arrived [%s] "</span><span class="p">,</span> <span class="n">topic</span><span class="p">);</span>
  <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="n">msg</span><span class="p">);</span>
  
  <span class="c1">// Copy payload into C-string and convert to lowercase</span>
  <span class="k">for</span> <span class="p">(</span><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">length</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">string</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span><span class="kt">char</span><span class="p">)</span><span class="n">payload</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
    <span class="n">lowerString</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">tolower</span><span class="p">(</span><span class="n">string</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
  <span class="p">}</span>
  <span class="n">string</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
  <span class="n">lowerString</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
  <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="n">lowerString</span><span class="p">);</span>

  <span class="c1">// Determine if payload is a known command</span>
  <span class="kt">uint8_t</span> <span class="n">newState</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
  <span class="k">if</span> <span class="p">(</span><span class="n">strcmp</span><span class="p">(</span><span class="n">lowerString</span><span class="p">,</span> <span class="n">CMD_RELAIS_ON</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
     <span class="n">newState</span> <span class="o">=</span> <span class="n">HIGH</span><span class="p">;</span>
  <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">strcmp</span><span class="p">(</span><span class="n">lowerString</span><span class="p">,</span> <span class="n">CMD_RELAIS_OFF</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
     <span class="n">newState</span> <span class="o">=</span> <span class="n">LOW</span><span class="p">;</span>

  <span class="c1">// Apply new relay state if valid</span>
  <span class="k">if</span> <span class="p">(</span><span class="n">newState</span> <span class="o">==</span> <span class="n">LOW</span> <span class="o">||</span> <span class="n">newState</span> <span class="o">==</span> <span class="n">HIGH</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">state</span> <span class="o">=</span> <span class="n">newState</span><span class="p">;</span>
    <span class="n">digitalWrite</span><span class="p">(</span><span class="n">GPIO2</span><span class="p">,</span> <span class="n">state</span><span class="p">);</span>

    <span class="c1">// Send confirmation message via MQTT</span>
    <span class="n">sprintf</span><span class="p">(</span><span class="n">msg</span><span class="p">,</span> <span class="s">"%s%d"</span><span class="p">,</span> <span class="n">STR_CONFIRM_STATE</span><span class="p">,</span> <span class="n">state</span><span class="p">);</span>
    <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="n">msg</span><span class="p">);</span>
    <span class="n">client</span><span class="p">.</span><span class="n">publish</span><span class="p">(</span><span class="n">mqtt_pubs_topic</span><span class="p">,</span> <span class="n">msg</span><span class="p">);</span>
  <span class="p">}</span>  

  <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">();</span>
<span class="p">}</span>

<span class="cm">/*
 * reconnect() - Reconnect to MQTT broker if connection is lost
 */</span>
<span class="kt">void</span> <span class="nf">reconnect</span><span class="p">()</span> <span class="p">{</span>
  <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
  <span class="k">while</span> <span class="p">(</span><span class="o">!</span><span class="n">client</span><span class="p">.</span><span class="n">connected</span><span class="p">()</span> <span class="o">&amp;&amp;</span> <span class="n">i</span><span class="o">++</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Attempting MQTT connection..."</span><span class="p">);</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">client</span><span class="p">.</span><span class="n">connect</span><span class="p">(</span><span class="n">DEVICE_ID</span><span class="p">,</span> <span class="n">mqtt_username</span><span class="p">,</span> <span class="n">mqtt_password</span><span class="p">))</span> <span class="p">{</span>
      <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"connected"</span><span class="p">);</span>

      <span class="c1">// Subscribe to the topic for incoming commands</span>
      <span class="k">if</span><span class="p">(</span><span class="n">client</span><span class="p">.</span><span class="n">subscribe</span><span class="p">(</span><span class="n">mqtt_subs_topic</span><span class="p">))</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Subscribed to the specified topic"</span><span class="p">);</span>
      <span class="k">else</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Failed to subscribe to the specified topic"</span><span class="p">);</span>

      <span class="c1">// Publish an initial message</span>
      <span class="n">client</span><span class="p">.</span><span class="n">publish</span><span class="p">(</span><span class="n">mqtt_pubs_topic</span><span class="p">,</span> <span class="s">"Hello, here I am..."</span><span class="p">);</span>
    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
      <span class="n">Serial</span><span class="p">.</span><span class="n">print</span><span class="p">(</span><span class="s">"failed, rc="</span><span class="p">);</span>
      <span class="n">Serial</span><span class="p">.</span><span class="n">print</span><span class="p">(</span><span class="n">client</span><span class="p">.</span><span class="n">state</span><span class="p">());</span>
      <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">" trying again in 500 milliseconds"</span><span class="p">);</span>
      <span class="n">delay</span><span class="p">(</span><span class="mi">500</span><span class="p">);</span>
    <span class="p">}</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="cm">/*
 * loop() - Main loop function, repeatedly called after setup()
 */</span>
<span class="kt">void</span> <span class="nf">loop</span><span class="p">()</span> <span class="p">{</span>
  <span class="k">static</span> <span class="kt">int</span> <span class="n">loopCounter</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
  <span class="n">loopCounter</span><span class="o">++</span><span class="p">;</span>
  <span class="kt">char</span> <span class="n">msg</span><span class="p">[</span><span class="mi">50</span><span class="p">];</span>

  <span class="c1">// Reconnect WiFi if disconnected</span>
  <span class="k">if</span> <span class="p">(</span><span class="n">WiFi</span><span class="p">.</span><span class="n">status</span><span class="p">()</span> <span class="o">!=</span> <span class="n">WL_CONNECTED</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">setup_wifi</span><span class="p">();</span>
  <span class="p">}</span>
  <span class="c1">// Reconnect MQTT if disconnected</span>
  <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">client</span><span class="p">.</span><span class="n">connected</span><span class="p">())</span> <span class="p">{</span>
    <span class="n">reconnect</span><span class="p">();</span>
  <span class="p">}</span>

  <span class="c1">// Print a periodic "still alive" message every ~minute</span>
  <span class="k">if</span><span class="p">(</span><span class="n">loopCounter</span> <span class="o">%</span> <span class="mi">200</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"I am still alive..."</span><span class="p">);</span>
  <span class="p">}</span>

  <span class="c1">// Process MQTT messages</span>
  <span class="n">client</span><span class="p">.</span><span class="n">loop</span><span class="p">();</span>
  <span class="n">delay</span><span class="p">(</span><span class="mi">300</span><span class="p">);</span>

  <span class="c1">// Publish current relay state if button was pressed or periodically</span>
  <span class="k">if</span> <span class="p">(</span><span class="n">client</span><span class="p">.</span><span class="n">connected</span><span class="p">()</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">debounce</span> <span class="o">||</span> <span class="n">loopCounter</span> <span class="o">%</span> <span class="mi">200</span> <span class="o">==</span> <span class="mi">0</span><span class="p">))</span> <span class="p">{</span>
    <span class="n">sprintf</span><span class="p">(</span><span class="n">msg</span><span class="p">,</span> <span class="s">"%s%d"</span><span class="p">,</span> <span class="n">STR_CONFIRM_STATE</span><span class="p">,</span> <span class="n">state</span><span class="p">);</span>
    <span class="n">client</span><span class="p">.</span><span class="n">publish</span><span class="p">(</span><span class="n">mqtt_pubs_topic</span><span class="p">,</span> <span class="n">msg</span><span class="p">,</span> <span class="nb">true</span><span class="p">);</span> <span class="c1">// retained message</span>
  <span class="p">}</span>

  <span class="c1">// Reset debounce flag after processing</span>
  <span class="n">debounce</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
<span class="p">}</span></code></pre></figure> <h2 id="usage">Usage</h2> <p>Once the ESP-01 is flashed with the program above, there are two ways to control the electrical outlet:</p> <ol> <li> <p><strong>Manual Control:</strong> Use button S2 to toggle the outlet. Each press of the button will invert the current state of the relay.</p> </li> <li> <p><strong>MQTT Control:</strong> Use an MQTT client to publish messages to the configured topic to turn the outlet on or off. For example (based on the definitions in the code above, though some adjustments may be needed), you can send the following messages:</p> </li> </ol> <figure class="highlight"><pre><code class="language-plaintext" data-lang="plaintext">MQTT-Broker:        iot.eclipse.org
Port:               1883
Topic:              my-mqtt-topic/plug-01
Accepted Messages:  DEVICE=ON
                    DEVICE=OFF</code></pre></figure> <h2 id="future-work">Future Work</h2> <p>While this prototype is already functional, there are several improvements and extensions that could make it even more versatile:</p> <ul> <li><strong>Query the outlet state via MQTT:</strong> Allow clients to request the current state of the relay at any time.</li> <li><strong>Use a bi-stable relay:</strong> This would reduce power consumption and put less strain on the power supply compared to a standard relay.</li> <li><strong>Advanced addressing and communication:</strong> Develop a more robust scheme for managing multiple outlets or more complex setups.</li> <li><strong>Smartphone app integration:</strong> Create an app to control the outlets and other MQTT-enabled devices easily.</li> <li><strong>Integration with smart home systems:</strong> Connect the adapter plug to broader smart home platforms for centralized management and automation.</li> </ul> <h2 id="conclusion">Conclusion</h2> <p>In this project, we built a fully functional IoT adapter plug using the compact ESP8266-01 module. The key features include manual control via a push button and remote control via MQTT messages, making it a flexible solution for home automation. We walked through the main steps: wiring the ESP-01 and relay circuit, setting up the Arduino IDE, programming the ESP, and connecting it to WiFi and an MQTT broker. This project demonstrates how even minimal hardware can be used to create smart, networked devices, and provides a foundation for further enhancements like energy-efficient relays, smartphone apps, and integration with larger smart home systems.</p>]]></content><author><name></name></author><category term="Programming"/><category term="Electronics"/><category term="IoT"/><category term="Electronics"/><category term="ESP8266"/><summary type="html"><![CDATA[A DIY IoT project using the ESP8266-01 module to build a network-controlled adapter plug from scratch. This project demonstrates how to create connected devices with minimal hardware and effort using Wi-Fi and MQTT.]]></summary></entry><entry><title type="html">Seychelles from Above: A Drone Journey Across Its Most Beautiful Beaches</title><link href="https://markusthill.github.io/blog/2025/seychelles-images/" rel="alternate" type="text/html" title="Seychelles from Above: A Drone Journey Across Its Most Beautiful Beaches"/><published>2025-09-09T01:59:00+00:00</published><updated>2025-09-09T01:59:00+00:00</updated><id>https://markusthill.github.io/blog/2025/seychelles-images</id><content type="html" xml:base="https://markusthill.github.io/blog/2025/seychelles-images/"><![CDATA[<p>The Seychelles are famous for their powdery white sand, turquoise waters, and dramatic granite boulders that make its beaches some of the most photographed in the world. From the wild, untouched beauty of Anse Marron and Anse Caiman on La Digue, to the sweeping stretches of Anse Intendance on Mahé, every beach feels like a hidden paradise. Praslin’s Anse Lazio and Anse Volbert offer some of the best spots for swimming and snorkeling, while La Digue’s iconic Anse Source d’Argent continues to amaze with its surreal landscapes.</p> <p>With my drone, I had the chance to capture these breathtaking places from above, showing a new perspective of their beauty. Below you’ll find image galleries from beaches such as Grand Anse, Anse Cocos, Anse Pierrot, and more. Each one is unique, yet all share that unmistakable Seychelles magic.</p> <h2 id="anse-caiman-la-digue"><a href="https://www.google.com/maps/place/Anse+Caiman/@-4.3488765,55.8458481,14z/data=!4m6!3m5!1s0x231f92d6cb4682b7:0xa0949d275136fa8a!8m2!3d-4.3602468!4d55.8530639!16s%2Fg%2F1tnl3p7k?entry=ttu&amp;g_ep=EgoyMDI1MDkwMy4wIKXMDSoASAFQAw%3D%3D">Anse Caiman (La Digue)</a></h2> <p><a href="/assets/img/2025-09-09-seychelles-images/anse_caiman/DJI_0895.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_caiman/DJI_0895-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_caiman/DJI_0943.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_caiman/DJI_0943-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_caiman/DJI_0950.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_caiman/DJI_0950-480.webp" width="33%"/></a></p> <p><a href="/assets/img/2025-09-09-seychelles-images/anse_caiman/DJI_0953.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_caiman/DJI_0953-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_caiman/DJI_0959.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_caiman/DJI_0959-480.webp" width="33%"/></a></p> <hr/> <h2 id="anse-cocos-la-digue"><a href="https://www.google.com/maps/place/Anse+Cocos/@-4.3677962,55.8489772,17z/data=!3m1!4b1!4m6!3m5!1s0x231f9329314bd0cb:0xf2a567ca900dd4e1!8m2!3d-4.3673267!4d55.8537594!16s%2Fg%2F1vwgybzt?entry=ttu&amp;g_ep=EgoyMDI1MDkwMy4wIKXMDSoASAFQAw%3D%3D">Anse Cocos (La Digue)</a></h2> <p><a href="/assets/img/2025-09-09-seychelles-images/anse_cocos/DJI_0358.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_cocos/DJI_0358-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_cocos/DJI_0479.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_cocos/DJI_0479-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_cocos/DJI_0482.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_cocos/DJI_0482-480.webp" width="33%"/></a></p> <p><a href="/assets/img/2025-09-09-seychelles-images/anse_cocos/DJI_0486.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_cocos/DJI_0486-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_cocos/DJI_0505.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_cocos/DJI_0505-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_cocos/DJI_0520.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_cocos/DJI_0520-480.webp" width="33%"/></a></p> <p><a href="/assets/img/2025-09-09-seychelles-images/anse_cocos/DJI_0531.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_cocos/DJI_0531-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_cocos/DJI_0536.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_cocos/DJI_0536-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_cocos/DJI_0540.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_cocos/DJI_0540-480.webp" width="33%"/></a></p> <p><a href="/assets/img/2025-09-09-seychelles-images/anse_cocos/DJI_0551.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_cocos/DJI_0551-480.webp" width="33%"/></a></p> <hr/> <h2 id="anse-grosse-roche-la-digue"><a href="https://www.google.com/maps/place/Anse+Grosse+Roche/@14.4877431,-60.8175049,17z/data=!4m6!3m5!1s0x8c40274854e66da3:0xd7fe29d74febff5e!8m2!3d14.4877379!4d-60.81493!16s%2Fg%2F11sml8t4w0?entry=ttu&amp;g_ep=EgoyMDI1MDkwMy4wIKXMDSoASAFQAw%3D%3D">Anse Grosse Roche (La Digue)</a></h2> <p><a href="/assets/img/2025-09-09-seychelles-images/anse_grosse_roche/DJI_0026.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_grosse_roche/DJI_0026-480.webp" width="33%"/></a></p> <hr/> <h2 id="anse-intendance-mahé"><a href="https://www.google.com/maps/place/Anse+Intendance/@-4.7851745,55.4939281,17z/data=!3m1!4b1!4m6!3m5!1s0x231e2a0eec1b68ff:0x346ef7970acba9f0!8m2!3d-4.7840006!4d55.4992692!16s%2Fg%2F11c55jtttj?entry=ttu&amp;g_ep=EgoyMDI1MDkwMy4wIKXMDSoASAFQAw%3D%3D">Anse Intendance (Mahé)</a></h2> <p><a href="/assets/img/2025-09-09-seychelles-images/anse_intendance/DJI_0140.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_intendance/DJI_0140-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_intendance/DJI_0143.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_intendance/DJI_0143-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_intendance/DJI_0167.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_intendance/DJI_0167-480.webp" width="33%"/></a></p> <hr/> <h2 id="anse-lazio-praslin"><a href="https://www.google.com/maps/place/Anse+Lazio/@-4.2936471,55.6912067,15z/data=!3m1!4b1!4m6!3m5!1s0x231ff05ad4683b45:0xb86dca89962a5d20!8m2!3d-4.2936687!4d55.7015064!16zL20vMGJ5Yzhj?entry=ttu&amp;g_ep=EgoyMDI1MDkwMy4wIKXMDSoASAFQAw%3D%3D">Anse Lazio (Praslin)</a></h2> <p><a href="/assets/img/2025-09-09-seychelles-images/anse_lazio/DJI_0149-ed.png" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_lazio/DJI_0149-ed-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_lazio/DJI_0129.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_lazio/DJI_0129-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_lazio/DJI_0151.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_lazio/DJI_0151-480.webp" width="33%"/></a></p> <p><a href="/assets/img/2025-09-09-seychelles-images/anse_lazio/DJI_0152.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_lazio/DJI_0152-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_lazio/DJI_0156.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_lazio/DJI_0156-480.webp" width="33%"/></a></p> <hr/> <h2 id="anse-marron-la-digue"><a href="https://www.google.com/maps/place/Anse+Marron/@-4.3839609,55.8392401,17z/data=!3m1!4b1!4m6!3m5!1s0x231fecb40d67dfbb:0x6004329062cf92e2!8m2!3d-4.3840956!4d55.8426331!16s%2Fg%2F1vy5dj7x?entry=ttu&amp;g_ep=EgoyMDI1MDkwMy4wIKXMDSoASAFQAw%3D%3D">Anse Marron (La Digue)</a></h2> <p><a href="/assets/img/2025-09-09-seychelles-images/anse_marron/DJI_0661.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_marron/DJI_0661-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_marron/DJI_0671.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_marron/DJI_0671-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_marron/DJI_0708.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_marron/DJI_0708-480.webp" width="33%"/></a></p> <hr/> <h2 id="anse-pierrot-la-digue"><a href="https://www.google.com/maps/place/Anse+Pierrot/@-4.3802703,55.8274859,17z/data=!3m1!4b1!4m6!3m5!1s0x231fecbf5bbc9e7b:0x8a3f269b53cb648!8m2!3d-4.3812085!4d55.8287272!16s%2Fg%2F1thqd4lx?entry=ttu&amp;g_ep=EgoyMDI1MDkwMy4wIKXMDSoASAFQAw%3D%3D">Anse Pierrot (La Digue)</a></h2> <p><a href="/assets/img/2025-09-09-seychelles-images/anse_pierrot/DJI_0799.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_pierrot/DJI_0799-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_pierrot/DJI_0803.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_pierrot/DJI_0803-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_pierrot/DJI_0819.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_pierrot/DJI_0819-480.webp" width="33%"/></a></p> <p><a href="/assets/img/2025-09-09-seychelles-images/anse_pierrot/DJI_0842.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_pierrot/DJI_0842-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_pierrot/DJI_0855.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_pierrot/DJI_0855-480.webp" width="33%"/></a></p> <hr/> <h2 id="anse-source-dargent-la-digue"><a href="https://www.google.com/maps/place/Anse+Source+d'Argent/@-4.3754502,55.8252084,17z/data=!3m1!4b1!4m6!3m5!1s0x231fecc3f887ed23:0x938a5b07587e9fbd!8m2!3d-4.3754556!4d55.8300793!16s%2Fg%2F11c6s4j80k?entry=ttu&amp;g_ep=EgoyMDI1MDkwMy4wIKXMDSoASAFQAw%3D%3D">Anse Source d’Argent (La Digue)</a></h2> <p><a href="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0280.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0280-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0285.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0285-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0291.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0291-480.webp" width="33%"/></a></p> <p><a href="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0293.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0293-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0321.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0321-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0360.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0360-480.webp" width="33%"/></a></p> <p><a href="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0367.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0367-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0427.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0427-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0448.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0448-480.webp" width="33%"/></a></p> <p><a href="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0537.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0537-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0546.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0546-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0559.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0559-480.webp" width="33%"/></a></p> <p><a href="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0560.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0560-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0618.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0618-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0625.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0625-480.webp" width="33%"/></a></p> <p><a href="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0633.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0633-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0634.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0634-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0727.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0727-480.webp" width="33%"/></a></p> <p><a href="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0738.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0738-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0739.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0739-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0751.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0751-480.webp" width="33%"/></a></p> <p><a href="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0781.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0781-480.webp" width="33%"/></a></p> <hr/> <h2 id="anse-volbert-praslin"><a href="https://www.google.com/maps/place/Anse+Volbert+Village,+Seychelles/@-4.3142086,55.7327507,15z/data=!4m6!3m5!1s0x231ff1dd070f4a6b:0x482ca3162c8e12bc!8m2!3d-4.3169478!4d55.7476916!16s%2Fg%2F12120htz?entry=ttu&amp;g_ep=EgoyMDI1MDkwMy4wIKXMDSoASAFQAw%3D%3D">Anse Volbert (Praslin)</a></h2> <p><a href="/assets/img/2025-09-09-seychelles-images/anse_volbert/DJI_0066.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_volbert/DJI_0066-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_volbert/DJI_0068.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_volbert/DJI_0068-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_volbert/DJI_0079.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_volbert/DJI_0079-480.webp" width="33%"/></a></p> <p><a href="/assets/img/2025-09-09-seychelles-images/anse_volbert/DJI_0102.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_volbert/DJI_0102-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_volbert/DJI_0110.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_volbert/DJI_0110-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_volbert/DJI_0320.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_volbert/DJI_0320-480.webp" width="33%"/></a></p> <hr/> <h2 id="grand-anse-la-digue"><a href="https://www.google.com/maps/place/Grand+Anse+Beach/@-4.3742335,55.8428889,18z/data=!3m1!4b1!4m6!3m5!1s0x231feccd00e3f669:0x5512671ef2054b11!8m2!3d-4.3739963!4d55.84385!16s%2Fg%2F1td3tsgj?entry=ttu&amp;g_ep=EgoyMDI1MDkwMy4wIKXMDSoASAFQAw%3D%3D">Grand Anse (La Digue)</a></h2> <p><a href="/assets/img/2025-09-09-seychelles-images/grand_anse_la_digue/DJI_0617.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/grand_anse_la_digue/DJI_0617-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/grand_anse_la_digue/DJI_0626.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/grand_anse_la_digue/DJI_0626-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/grand_anse_la_digue/DJI_0627.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/grand_anse_la_digue/DJI_0627-480.webp" width="33%"/></a></p> <p><a href="/assets/img/2025-09-09-seychelles-images/grand_anse_la_digue/DJI_0280.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/grand_anse_la_digue/DJI_0280-480.webp" width="33%"/></a></p> <hr/> <h2 id="st-pierre-islet-praslin"><a href="https://www.google.com/maps/place/St.+Pierre+Island/@-4.3025895,55.7397003,15z/data=!3m1!4b1!4m14!1m7!3m6!1s0x231ff18c29a9ec39:0x3d6273d200ab4290!2sSt.+Pierre+Island!8m2!3d-4.302611!4d55.75!16s%2Fg%2F119x71wbn!3m5!1s0x231ff18c29a9ec39:0x3d6273d200ab4290!8m2!3d-4.302611!4d55.75!16s%2Fg%2F119x71wbn?entry=ttu&amp;g_ep=EgoyMDI1MDkwMy4wIKXMDSoASAFQAw%3D%3D">St. Pierre Islet (Praslin)</a></h2> <p><a href="/assets/img/2025-09-09-seychelles-images/st_pier/DJI_0279.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/st_pier/DJI_0279-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/st_pier/DJI_0294.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/st_pier/DJI_0294-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/st_pier/DJI_0300.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/st_pier/DJI_0300-480.webp" width="33%"/></a></p> <hr/> <h2 id="sunset-beach-mahé"><a href="https://www.google.com/maps/place/Sunset+Beach/@-4.5847981,55.4296932,17z/data=!3m1!4b1!4m6!3m5!1s0x22e0289d8f82778d:0xa99ff852a5248366!8m2!3d-4.5848855!4d55.432452!16s%2Fg%2F1thv27_q?entry=ttu&amp;g_ep=EgoyMDI1MDkwMy4wIKXMDSoASAFQAw%3D%3D">Sunset Beach (Mahé)</a></h2> <p><a href="/assets/img/2025-09-09-seychelles-images/sunset_beach/DJI_0093.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/sunset_beach/DJI_0093-480.webp" width="33%"/></a></p>]]></content><author><name></name></author><category term="traveling"/><category term="seychelles"/><category term="drone"/><summary type="html"><![CDATA[Discover the Seychelles’ most stunning beaches from a new perspective. From the iconic Anse Source d’Argent on La Digue to the sweeping Anse Intendance on Mahé, these drone shots capture some of the islands’ breathtaking beauty.]]></summary></entry><entry><title type="html">Short Notes: Understanding Euclid’s GCD Algorithm</title><link href="https://markusthill.github.io/blog/2025/euclids-algorithm/" rel="alternate" type="text/html" title="Short Notes: Understanding Euclid’s GCD Algorithm"/><published>2025-08-02T23:00:51+00:00</published><updated>2025-08-02T23:00:51+00:00</updated><id>https://markusthill.github.io/blog/2025/euclids-algorithm</id><content type="html" xml:base="https://markusthill.github.io/blog/2025/euclids-algorithm/"><![CDATA[<h1 id="introduction">Introduction</h1> <p>Euclid’s Algorithm is one of the oldest and most elegant procedures in mathematics. Dating back over two millennia, it provides an efficient method to compute the greatest common divisor (GCD) of two integers — the largest number that divides both without a remainder.</p> <p>But why does this algorithm work? What makes repeatedly replacing a pair $(a, b)$ with $(b, a \bmod b)$, eventually lead us to the GCD?</p> <p>In this short note, we take a closer look at the mathematical foundation behind Euclid’s Algorithm. Through a simple but rigorous argument, we’ll see how divisibility and the properties of remainders come together to justify the algorithm’s correctness.</p> <p><br/></p> <h1 id="a-fairly-informal-proof">A (fairly) Informal Proof</h1> <p>We aim to show that for integers $a, b \in \mathbb{Z}$ with $b \ne 0$, the greatest common divisor satisfies:</p> \[\gcd(a, b) = \gcd(b, a \bmod b).\] <p>Let $d = \gcd(a, b)$. By definition:</p> <ul> <li>$d \mid a$</li> <li>$d \mid b$</li> </ul> <p>Since $d \mid a$ and $d \mid b$, it also divides any linear combination of $a$ and $b$, in particular:</p> \[\begin{align} a &amp;= qb + r \quad \text{for some } q \in \mathbb{Z}, \, 0 \le r &lt; |b| \\ r &amp;= a - qb = a \bmod b. \end{align}\] <p>So $d \mid r$, and of course $d \mid b$ by assumption.</p> <p>Now let:</p> \[\begin{align} d' = \gcd(b,r). \end{align}\] <p>Since $d’$ divides both $b$ and $r$, it must also divide any linear combination of them, and in particular, it divides $a = qb + r$:</p> \[\begin{align} d' \mid r+qb = a. \end{align}\] <p>And since $d’ \mid a$ and $d’ \mid b$, meaning $d’$ is a common divisor of $a$ and $b$, it follows that</p> \[\begin{align} d' \le d, \end{align}\] <p>since $d$ is the greatest common divisor of $a$ and $b$, so $d’$ has to be less or equal. Conversely, we already showed that $d \mid b$ and $d \mid r$, so $d$ is a common divisor of $b$ and $r$, implying:</p> \[\begin{align} d \le d', \end{align}\] <p>which leads us to the conclusion:</p> \[\begin{align} d &amp;= d' \\ \gcd(a,b) &amp;= \gcd(b,r) \\ \gcd(a,b) &amp;= \gcd(b, a \bmod b). \end{align}\] <p>(In other words: we know that $d’ = \gcd(b, r) \le d$ and we know that $d \mid b$ and also $d \mid r$. But $d$ cannot be larger than the already defined GCD of $b$ and $r$, $d’ = \gcd(b, r)$, hence $\Rightarrow d’=d$).</p> <p>This identity is the key to <strong>Euclid’s Algorithm</strong>, which recursively applies:</p> \[\begin{align} \gcd(a, b) = \gcd(b, a \bmod b), \end{align}\] <p>until the second argument becomes zero, at which point $\gcd(a, 0) = | a |$ (by definition).</p> <p><br/></p> <h1 id="implementation-in-python">Implementation in Python</h1> <p>To translate the mathematical idea into code, we can use a simple recursive function that mirrors the structure of the proof:</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">gcd</span><span class="p">(</span><span class="n">a</span><span class="p">:</span> <span class="nb">int</span><span class="p">,</span> <span class="n">b</span><span class="p">:</span> <span class="nb">int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nb">int</span><span class="p">:</span>
    <span class="sh">"""</span><span class="s">
    Computes the greatest common divisor (GCD) of a and b using Euclid</span><span class="sh">'</span><span class="s">s Algorithm.
    </span><span class="sh">"""</span>
    <span class="k">if</span> <span class="n">b</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
        <span class="k">return</span> <span class="nf">abs</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>  <span class="c1"># GCD is always non-negative
</span>    <span class="k">return</span> <span class="nf">gcd</span><span class="p">(</span><span class="n">b</span><span class="p">,</span> <span class="n">a</span> <span class="o">%</span> <span class="n">b</span><span class="p">)</span>
</code></pre></div></div> <p>Alternatively, an iterative version avoids recursion and may be more efficient in practice:</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">gcd_iterative</span><span class="p">(</span><span class="n">a</span><span class="p">:</span> <span class="nb">int</span><span class="p">,</span> <span class="n">b</span><span class="p">:</span> <span class="nb">int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nb">int</span><span class="p">:</span>
    <span class="sh">"""</span><span class="s">
    Iterative version of Euclid</span><span class="sh">'</span><span class="s">s Algorithm.
    </span><span class="sh">"""</span>
    <span class="k">while</span> <span class="n">b</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">:</span>
        <span class="n">a</span><span class="p">,</span> <span class="n">b</span> <span class="o">=</span> <span class="n">b</span><span class="p">,</span> <span class="n">a</span> <span class="o">%</span> <span class="n">b</span>
    <span class="k">return</span> <span class="nf">abs</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
</code></pre></div></div> <p>Both versions rely on the identity $\gcd(a, b) = \gcd(b, a \bmod b)$.</p> <p><br/></p> <h1 id="worked-example-gcd-of-252-and-105">Worked Example: GCD of 252 and 105</h1> <p>To illustrate how Euclid’s Algorithm works in practice, let’s compute:</p> \[\gcd(252, 105)\] <p>We apply the rule $\gcd(a, b) = \gcd(b, a \bmod b)$ repeatedly:</p> <ol> <li> <p>$\gcd(252, 105)$<br/> $252 \bmod 105 = 42$<br/> So, $\gcd(252, 105) = \gcd(105, 42)$</p> </li> <li> <p>$\gcd(105, 42)$<br/> $105 \bmod 42 = 21$<br/> So, $\gcd(105, 42) = \gcd(42, 21)$</p> </li> <li> <p>$\gcd(42, 21)$<br/> $42 \bmod 21 = 0$<br/> So, $\gcd(42, 21) = 21$</p> </li> </ol> <p>We stop here since the remainder is 0, and the last non-zero value is the GCD. Therefore:</p> \[\gcd(252, 105) = 21\] <p>This example illustrates how the algorithm quickly reduces the problem to a simpler one through successive remainders. You can cross-check the result by running one of the GCD functions above in your Python IDE.</p>]]></content><author><name></name></author><category term="Math"/><category term="Algorithms"/><category term="Programming"/><category term="gcd"/><category term="euclids-algorithm"/><category term="number-theory"/><category term="mathematics"/><category term="proofs"/><summary type="html"><![CDATA[A concise walkthrough of why Euclid’s Algorithm correctly computes the greatest common divisor (GCD), using basic properties of divisibility and remainders.]]></summary></entry><entry><title type="html">Conway’s Game of Life</title><link href="https://markusthill.github.io/blog/2025/conways-game-of-life/" rel="alternate" type="text/html" title="Conway’s Game of Life"/><published>2025-08-01T21:50:48+00:00</published><updated>2025-08-01T21:50:48+00:00</updated><id>https://markusthill.github.io/blog/2025/conways-game-of-life</id><content type="html" xml:base="https://markusthill.github.io/blog/2025/conways-game-of-life/"><![CDATA[<h1 id="introduction">Introduction</h1> <p>Conway’s Game of Life is a so-called <em>zero-player game</em>, developed by British mathematician John Horton Conway in 1970. It begins with an initial configuration set by the player, and from that point on, it evolves automatically without any further interaction.</p> <p>The rules are quite simple. Here is an excerpt from <a href="https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life">wikipedia.org</a>:</p> <blockquote> <p><em>The universe of the Game of Life is an infinite, two-dimensional orthogonal grid of square cells, each of which is in one of two possible states: alive or dead (or populated and unpopulated, respectively). Every cell interacts with its eight neighbors, which are the cells that are horizontally, vertically, or diagonally adjacent. At each step in time, the following transitions occur:</em></p> </blockquote> <ol> <li><em>Any live cell with fewer than two live neighbors dies, as if by underpopulation.</em></li> <li><em>Any live cell with two or three live neighbors lives on to the next generation.</em></li> <li><em>Any live cell with more than three live neighbors dies, as if by overpopulation.</em></li> <li><em>Any dead cell with exactly three live neighbors becomes a live cell, as if by reproduction.</em></li> </ol> <blockquote> <p><em>The initial pattern constitutes the seed of the system. The first generation is created by applying the above rules simultaneously to every cell in the seed; births and deaths occur simultaneously, and the discrete moment at which this happens is sometimes called a tick. Each generation is a pure function of the preceding one. The rules continue to be applied repeatedly to create further generations.</em></p> </blockquote> <p>In this post, we will implement the Game of Life in \(R\) and explore some of the results it produces.</p> <h1 id="implementation-in-r">Implementation in <em>R</em></h1> <p>In principle, the grid in Conway’s Game of Life is infinite. Due to the limitations of our computers, however, we work with a finite grid. For our experiments, we will use relatively small grid sizes.</p> <p>First, we need a function to initialize the grid. Each cell has a 50% chance of being alive:</p> <figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">randInitWorld</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">dimX</span><span class="p">,</span><span class="w"> </span><span class="n">dimY</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">matrix</span><span class="p">(</span><span class="n">sample</span><span class="p">(</span><span class="nf">c</span><span class="p">(</span><span class="kc">TRUE</span><span class="p">,</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">),</span><span class="w"> </span><span class="n">dimX</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="n">dimY</span><span class="p">,</span><span class="w"> </span><span class="n">replace</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">),</span><span class="w"> </span><span class="n">dimY</span><span class="p">,</span><span class="w"> </span><span class="n">dimX</span><span class="p">)</span><span class="w">
</span><span class="p">}</span></code></pre></figure> <p>Next, we define a function to count the number of live neighbors for each cell in the grid. For each cell, we look at its surrounding 3×3 box (shrinking the box at the edges) and count the number of live cells—excluding the center cell itself:</p> <figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">countAliveNeighbors</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">X</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">d</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">dim</span><span class="p">(</span><span class="n">X</span><span class="p">)</span><span class="w">
  </span><span class="n">C</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">apply</span><span class="p">(</span><span class="n">merge</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="n">d</span><span class="p">[</span><span class="m">1</span><span class="p">],</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="n">d</span><span class="p">[</span><span class="m">2</span><span class="p">]),</span><span class="w"> </span><span class="m">1</span><span class="p">,</span><span class="w">
    </span><span class="k">function</span><span class="p">(</span><span class="n">i</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="nf">sum</span><span class="p">(</span><span class="n">X</span><span class="p">[</span><span class="nf">max</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="n">i</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="m">1</span><span class="p">)</span><span class="o">:</span><span class="nf">min</span><span class="p">(</span><span class="n">d</span><span class="p">[</span><span class="m">1</span><span class="p">],</span><span class="w"> </span><span class="n">i</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="m">1</span><span class="p">),</span><span class="w">
            </span><span class="nf">max</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="n">i</span><span class="p">[</span><span class="m">2</span><span class="p">]</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="m">1</span><span class="p">)</span><span class="o">:</span><span class="nf">min</span><span class="p">(</span><span class="n">d</span><span class="p">[</span><span class="m">2</span><span class="p">],</span><span class="w"> </span><span class="n">i</span><span class="p">[</span><span class="m">2</span><span class="p">]</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="m">1</span><span class="p">)])</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="n">X</span><span class="p">[</span><span class="n">i</span><span class="p">[</span><span class="m">1</span><span class="p">],</span><span class="w"> </span><span class="n">i</span><span class="p">[</span><span class="m">2</span><span class="p">]]</span><span class="w">
    </span><span class="p">}</span><span class="w">
  </span><span class="p">)</span><span class="w">
  </span><span class="n">matrix</span><span class="p">(</span><span class="n">C</span><span class="p">,</span><span class="w"> </span><span class="n">d</span><span class="p">[</span><span class="m">1</span><span class="p">],</span><span class="w"> </span><span class="n">d</span><span class="p">[</span><span class="m">2</span><span class="p">])</span><span class="w">
</span><span class="p">}</span></code></pre></figure> <p>Now we’re ready to write a function that performs the transition to the next generation. According to the rules, a cell will be alive in the next generation if:</p> <ol> <li>It has exactly three live neighbors, <strong>or</strong></li> <li>It is currently alive <strong>and</strong> has exactly two live neighbors.</li> </ol> <p>All other cells will be dead in the next generation. These two simple conditions make it easy to implement the evolution step:</p> <figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">evolveNextGeneration</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">XWorld</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">XWorldCount</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">countAliveNeighbors</span><span class="p">(</span><span class="n">XWorld</span><span class="p">)</span><span class="w">
  </span><span class="p">(</span><span class="n">XWorldCount</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="m">3</span><span class="p">)</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">XWorld</span><span class="w"> </span><span class="o">&amp;</span><span class="w"> </span><span class="p">(</span><span class="n">XWorldCount</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="m">2</span><span class="p">)</span><span class="w">
</span><span class="p">}</span></code></pre></figure> <p>And that’s essentially it. We only need a few utility functions to evolve the grid world over multiple time steps and to visualize the grid after each transition. The complete code is available on <a href="https://github.com/MarkusThill/Game-Of-Life">GitHub</a> and is also included in the appendix.</p> <h1 id="example">Example</h1> <p>Let’s take a look at how a randomly initialized 100×100 grid evolves over time:</p> <figure> <picture> <source class="responsive-img-srcset" srcset="https://github.com/MarkusThill/Game-Of-Life/blob/master/img/animation.gif?raw=true" sizes="95vw"/> <img src="https://github.com/MarkusThill/Game-Of-Life/blob/master/img/animation.gif?raw=true" class="img-fluid rounded z-depth-1 imgcenter" width="80%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 1:</b> Evolution of a 100×100 grid-world over time. After some time, characteristic (often periodic) patterns emerge, which are typical in Conway’s Game of Life. </figcaption> </figure> <p>Depending on the initial configuration, many interesting and diverse patterns can emerge. A wide variety of known patterns are documented on <a href="https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life">wikipedia.org</a>.</p> <p>In many cases, the population of live cells never completely dies out but instead stabilizes around a certain number. The following image illustrates how the population evolves over time on a 100×100 grid, based on 20 different random initializations. Initially, about 50% of all cells are alive, but this proportion quickly drops across all runs. After approximately 1,000 iterations, the number of live cells stabilizes at around 350.</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2019-04-13-conways-game-of-life/evolve-480.webp 480w,/assets/img/2019-04-13-conways-game-of-life/evolve-800.webp 800w,/assets/img/2019-04-13-conways-game-of-life/evolve-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2019-04-13-conways-game-of-life/evolve.png" class="img-fluid rounded z-depth-1 imgcenter" width="80%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 2:</b> Number of live cells on a 100×100 grid-world. The black line shows the mean across 20 runs, while the red ribbon indicates the 95% confidence interval for the mean. </figcaption> </figure> <h1 id="appendix">Appendix</h1> <h2 id="a1-code">A1: Code</h2> <p>The <a href="https://github.com/MarkusThill/Game-Of-Life">GitHub Code</a> is available <a href="https://github.com/MarkusThill/Game-Of-Life">here</a>!</p> <h2 id="a2-further-examples">A2: Further Examples</h2> <h3 id="example-1">Example 1</h3> <figure> <picture> <source class="responsive-img-srcset" srcset="https://github.com/MarkusThill/Game-Of-Life/blob/master/img/animation10.gif?raw=true" sizes="95vw"/> <img src="https://github.com/MarkusThill/Game-Of-Life/blob/master/img/animation10.gif?raw=true" class="img-fluid rounded z-depth-1 imgcenter" width="70%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h3 id="example-2">Example 2</h3> <figure> <picture> <source class="responsive-img-srcset" srcset="https://github.com/MarkusThill/Game-Of-Life/blob/master/img/animation12.gif?raw=true" sizes="95vw"/> <img src="https://github.com/MarkusThill/Game-Of-Life/blob/master/img/animation12.gif?raw=true" class="img-fluid rounded z-depth-1 imgcenter" width="70%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h3 id="example-3">Example 3</h3> <figure> <picture> <source class="responsive-img-srcset" srcset="https://github.com/MarkusThill/Game-Of-Life/blob/master/img/animation4.gif?raw=true" sizes="95vw"/> <img src="https://github.com/MarkusThill/Game-Of-Life/blob/master/img/animation4.gif?raw=true" class="img-fluid rounded z-depth-1 imgcenter" width="70%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h3 id="example-4">Example 4</h3> <figure> <picture> <source class="responsive-img-srcset" srcset="https://github.com/MarkusThill/Game-Of-Life/blob/master/img/animation6.gif?raw=true" sizes="95vw"/> <img src="https://github.com/MarkusThill/Game-Of-Life/blob/master/img/animation6.gif?raw=true" class="img-fluid rounded z-depth-1 imgcenter" width="70%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure>]]></content><author><name></name></author><category term="Programming"/><category term="Conway&apos;s Game of Life"/><category term="cellular automata"/><category term="R programming"/><category term="simulation"/><category term="computer science"/><category term="mathematical modeling"/><category term="zero-player games"/><category term="game theory"/><category term="dynamic systems"/><category term="grid-based models"/><summary type="html"><![CDATA[An introduction to Conway’s Game of Life with an implementation in R. We explore the simple rules behind this zero-player cellular automaton, simulate its evolution on a 100×100 grid, and visualize emerging patterns and population dynamics over time.]]></summary></entry><entry><title type="html">Visualizing High-Dimensional Data Using Parallel Coordinates</title><link href="https://markusthill.github.io/blog/2025/visualizing-high-dimensional-data-with-parallel-coordinates/" rel="alternate" type="text/html" title="Visualizing High-Dimensional Data Using Parallel Coordinates"/><published>2025-07-31T08:00:51+00:00</published><updated>2025-07-31T08:00:51+00:00</updated><id>https://markusthill.github.io/blog/2025/visualizing-high-dimensional-data-with-parallel-coordinates</id><content type="html" xml:base="https://markusthill.github.io/blog/2025/visualizing-high-dimensional-data-with-parallel-coordinates/"><![CDATA[<p>The human brain has a remarkable ability to recognize patterns in graphical representations of data, which is why visual methods continue to play a crucial role in data-mining tasks. When data is visualized effectively, humans can detect both relevant and irrelevant structures and draw meaningful conclusions. However, designing appropriate visualization tools—especially for high-dimensional data—remains a significant challenge. This is due to our spatial perception being limited to three dimensions, which means high-dimensional data must be mapped to lower dimensions.</p> <p>Parallel Coordinates (commonly ||-Coordinates), introduced by <em>Alfred Inselberg</em> <a class="citation" href="#Inselberg85">(Inselberg, 1985)</a>, follow such an approach by mapping high-dimensional data to 2D using a systematic and interpretable method.</p> <p>In this blog post, we will briefly introduce ||-Coordinates, explore their properties, and apply them to various datasets. We will also compare the results to several other visualization techniques.</p> <p><em>R</em> scripts and additional resources used in this blog post are available on <a href="https://github.com/MarkusThill/MultiDiminsionalViz">GitHub</a> at<br/> <a href="https://github.com/MarkusThill/MultiDiminsionalViz">https://github.com/MarkusThill/MultiDiminsionalViz</a>.</p> <h2 id="introduction">Introduction</h2> <p>In many application areas today, large and high-dimensional datasets with unknown content are frequently generated. To gain insights and uncover essential information hidden within such data, these datasets must be explored systematically and carefully. Often, it is unclear at the outset how to approach unfamiliar and complex data or which tools are best suited for the task. Typically, raw data is presented in textual or tabular form, which can be difficult for most people to interpret and makes it nearly impossible to detect hidden structures.</p> <p>To develop an initial understanding of the data, visual representations can support users in identifying meaningful patterns. However, human perception is limited to a maximum of three spatial dimensions. As a result, data with more than three dimensions must be mapped to lower-dimensional spaces—typically two dimensions—for effective graphical presentation. The challenge lies in preserving as much of the relevant structure as possible during this dimensionality reduction. Choosing a suitable visualization method is therefore a non-trivial task. Users are often faced with a wide range of options, each offering a different perspective on the data and each with its own advantages and disadvantages.</p> <p>Visualization techniques include geometric methods like the well-known <em>scatter plots</em>, pixel-oriented techniques such as <em>dimensional stacking</em> <a class="citation" href="#LeBlancWW90">(LeBlanc et al., 1990)</a>, and icon-based methods like <em>Chernoff-faces</em> <a class="citation" href="#CHERNOFF">(Chernoff, 1973)</a>.</p> <p>In this blog post, we present a geometric-based visualization technique called Parallel Coordinates (hereafter referred to as ||-Coordinates), which was specifically designed to visualize multidimensional and multivariate data <a class="citation" href="#Inselberg85">(Inselberg, 1985)</a>. ||-Coordinates for two dimensions were first described in 1885 by <em>Maurice d’Ocagne</em>, and later rediscovered independently in 1959 by <em>Alfred Inselberg</em>, who was unaware of d’Ocagne’s earlier work (<a class="citation" href="#Inselberg12">(Inselberg, 2012)</a>, p. 16).</p> <p>The core idea of ||-Coordinates is to project high-dimensional datasets into two dimensions \((\mathbb{R}^N \rightarrow \mathbb{R}^2)\) by placing each dimension’s axis in parallel and representing individual samples as polygonal lines. This 2D representation is well suited for visual exploration and pattern recognition, making it easier to identify relationships within the data <a class="citation" href="#Inselberg97">(Inselberg, 1997)</a>.</p> <p>In practice, ||-Coordinates have been successfully used in a variety of fields—for instance, in automatic collision detection and avoidance systems in air traffic control (covered by three U.S. patents), as well as in data mining and optimization tasks <a class="citation" href="#Plemenos2009">(Plemenos &amp; Miaoulis, 2009)</a>.</p> <p>We will make extensive use of ||-Coordinates throughout this blog post, applying the technique to diverse datasets and exploring its specific characteristics.</p> <h2 id="fundamentals-of-parallel-coordinates">Fundamentals of Parallel Coordinates</h2> <h3 id="construction-and-properties">Construction and Properties</h3> <p>Consider an \(N\)-dimensional dataset containing \(k\) observations. The construction of a ||-Coordinates graph for visualizing this data proceeds as follows:</p> <p>Analogous to the <em>Cartesian coordinate system</em>, one individual axis is required for each dimension. Thus, a total of \(N\) axes is created. These axes are arranged in parallel to each other on the plane—typically equally spaced and oriented vertically.</p> <p>More precisely, a ||-Coordinates graph can be interpreted as a collection of parallel \(Y\)-axes embedded within an \(XY\)-Cartesian coordinate system. For the \(i\)-th dimension (out of \(N\) total), the corresponding Y-axis is duplicated and positioned at \(d_i\)—the distance from the origin—along the \(X\)-axis. Typically, the axes are spaced uniformly: \(d_1 = d_2 = \ldots = d\). Each axis in ||-Coordinates is labeled \(\overline{X}_i\).</p> <p>There are \(N - 1\) <em>segments</em> (i.e., regions between adjacent axes). Given \(N\) axes, there are \(\frac{N(N - 1)}{2}\) possible pairs of axes and \(N!\) permutations for the arrangement of all \(N\) axes.</p> <p>A point \(P = (x_1, x_2, \cdots, x_N)\) in \(\mathbb{R}^N\) can be mapped to a polygonal line in ||-Coordinates by connecting the values \(x_i\) on their respective axes \(\overline{X}_i\) using straight lines. A set of \(k\) points will therefore produce \(k\) polygonal lines in the ||-Coordinates graph <a class="citation" href="#Inselberg85">(Inselberg, 1985; Heinrich &amp; Weiskopf, 2013; Inselberg &amp; Dimsdale, 1990)</a>.</p> <p>Inselberg notes that the representational complexity of ||-Coordinates is \(O(N)\), as each additional dimension merely adds one more axis <a class="citation" href="#Inselberg97">(Inselberg, 1997)</a>. While this is true in a structural sense, the ordering of axes plays a crucial role in visual interpretation. Consequently, in many cases, multiple ||-Coordinates plots with different axis orderings must be generated and compared—effectively increasing the cognitive and computational complexity.</p> <p>There are no inherent restrictions on the dimensionality of the data for <em>Parallel Coordinates</em>. In theory, ||-Coordinates can represent data with an infinite number of dimensions. In practice, however, the usable number of dimensions depends on factors such as dataset size, screen resolution, and human perceptual limits. We did not find a clearly defined upper bound in the literature.</p> <h3 id="examples">Examples</h3> <p>The following examples nicely illustrate several important properties of ||-Coordinates. For instance, negatively correlated variables—represented in Cartesian space by a straight line with negative slope—appear as intersecting lines in the ||-Coordinates graph.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/lineMxb_xy-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/lineMxb_xy-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/lineMxb_xy-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/lineMxb_xy.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/lineMxb_pc-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/lineMxb_pc-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/lineMxb_pc-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/lineMxb_pc.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/lineNegMxb_xy-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/lineNegMxb_xy-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/lineNegMxb_xy-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/lineNegMxb_xy.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/lineNegMxb_pc-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/lineNegMxb_pc-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/lineNegMxb_pc-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/lineNegMxb_pc.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <figure> <picture> <source class="responsive-img-srcset" srcset="" sizes="95vw"/> <img src="" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 1:</b> A few examples illustrating the relationship between the <i>Cartesian coordinate system</i> and ||-Coordinates, realized with an <i>R</i>-script (Part 1). <b>Top:</b> A sampled line (a set of points) with a <i>positive</i> slope in the <i>Cartesian coordinate system</i> results in a set of lines in the ||-Coordinates graph that do not intersect in the segment between the two axes. <b>Bottom:</b> A sampled line (a set of points) with a <i>negative</i> slope in the <i>Cartesian coordinate system</i> results in a set of lines in the ||-Coordinates graph that do intersect in the segment between the two axes. Finding a pattern like this in a ||-Coordinates plot is always an indication of negative correlation. </figcaption> </figure> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/cluster_xy-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/cluster_xy-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/cluster_xy-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/cluster_xy.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/cluster_pc-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/cluster_pc-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/cluster_pc-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/cluster_pc.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/rnorm_xy-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/rnorm_xy-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/rnorm_xy-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/rnorm_xy.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/rnorm_pc-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/rnorm_pc-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/rnorm_pc-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/rnorm_pc.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/circle_xy-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/circle_xy-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/circle_xy-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/circle_xy.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/circle_pc-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/circle_pc-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/circle_pc-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/circle_pc.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <figure> <picture> <source class="responsive-img-srcset" srcset="" sizes="95vw"/> <img src="" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 2:</b> A few examples illustrating the relationship between the <i>Cartesian coordinate system</i> and ||-Coordinates, realized with an <i>R</i>-script (Part 2). <b>Top:</b> Clusters in the <i>Cartesian coordinate system</i> can often also be identified in a ||-Coordinates graph. <b>Middle:</b> Normally distributed data produces a characteristic structure in the ||-Coordinates plot, typically forming hyperbolic envelopes. <b>Bottom:</b> Mapping a circle from the <i>XY</i>-plane to a ||-Coordinates graph. In this case, the hyperbolic envelopes in the ||-Coordinates plot are even more pronounced than in the figure above. </figcaption> </figure> <h3 id="point-line-duality">Point-Line Duality</h3> <p>Extensive theoretical work on ||-Coordinates has been conducted by Inselberg <a class="citation" href="#Inselberg85">(Inselberg, 1985; Inselberg &amp; Dimsdale, 1990)</a>, including the concept of <em>point-line duality</em>. At this point, we offer a brief overview: Point-line duality describes the fundamental relationship between points and lines — specifically, that points in the Cartesian coordinate system can be mapped to lines in the parallel-coordinates domain, and vice versa.</p> <p>As mentioned earlier, a set of points in the Cartesian coordinate system is transformed into a set of polygonal lines in ||-Coordinates. For instance, a point \(P = (p_1, p_2)\) in 2D Cartesian space is mapped to a line that connects the point \(y = p_1\) on the \(\overline{X}_1\)-axis with the point \(y = p_2\) on the \(\overline{X}_2\)-axis. Assuming that \(\overline{X}_2\) is placed at \(d_2 = (0, d)\), the resulting line can be described by:</p> \[\begin{equation} y = \frac{p_2 - p_1}{d} x + p_1 , \quad d &gt; 0. \label{ch3:eq:pointToLine} \end{equation}\] <p>It can be shown that a set of points lying on a linear function in Cartesian space (e.g., \(P_\text{we} = (p_1, m \cdot p_1 + b)\)) will result in a family of lines in ||-Coordinates that all intersect at a common point \(\overline{P_s}\):</p> \[\begin{equation} \overline{P_s} = \left( \frac{d}{1 - m}, \frac{b}{1 - m} \right), \quad m \neq 1. \label{ch3:eq:pointToLineIntersec} \end{equation}\] <p>This intersection point corresponds to exactly one line in the \(XY\)-domain, thereby completing the point-line duality theorem. As seen in equation \eqref{ch3:eq:pointToLineIntersec}, if the slope of the sampled linear curve \(\ell\) is \(m &lt; 0\), then the lines \(\overline{\ell_i}\) in the ||-Coordinates system will intersect between the axes \(\overline{X}_1\) and \(\overline{X}_2\). For \(m &gt; 1\), the virtual extensions of all \(\overline{\ell_i}\) intersect to the right of \(\overline{X}_2\), and analogously, for \(0 &lt; m &lt; 1\), to the left of \(\overline{X}_1\). In the special case where \(m = 1\), the resulting set of lines \(\overline{\ell_i}\) will not intersect within the ||-Coordinates plot.</p> <p>Inselberg provides a more detailed treatment of the underlying theory in <a class="citation" href="#Inselberg12">(Inselberg, 2012)</a> (Chapter 3).</p> <h3 id="tasks">Tasks</h3> <p>In general, ||-Coordinates can be applied to a wide range of high-dimensional visualization problems across various application areas. Perhaps the most important purpose of ||-Coordinates is simply to provide a general overview of the visualized data. At a glance, ||-Coordinates can reveal a wealth of information: outliers and other anomalies or patterns can be identified quickly. This initial summary can help guide the user’s data-mining process and suggest directions for further exploration.</p> <p><em>Cluster analysis</em> — the task of finding sets of samples with similar structure — can also be supported by ||-Coordinates. Obvious clusters can often be identified by inspecting individual axes, while clusters in higher dimensions may emerge from line characteristics such as density, proximity, slope, and intersection patterns.</p> <p>Frequently, visual clustering in ||-Coordinates is combined with the search for <em>correlations</em> within the data. ||-Coordinates can reveal many types of correlation; for instance, a strong negative linear correlation typically results in a set of lines intersecting at a single point between two adjacent axes.</p> <p>Moreover, ||-Coordinates can aid in <em>classification</em> tasks, and to some extent in <em>regression</em> tasks as well <a class="citation" href="#Heinrich2013">(Heinrich &amp; Weiskopf, 2013)</a>. One common approach is to color samples from different classes to visually compare their characteristics. This can help identify which attributes best separate the classes — a task not limited to classification, but relevant for general feature selection too. ||-Coordinates can also assist in evaluating or developing classifiers, especially when used interactively in combination with algorithmic classifiers, as proposed in <a class="citation" href="#Yonghong2007">(Xu et al., 2007; Steed et al., 2012)</a>.</p> <p>Finally, ||-Coordinates may be used for <em>verification</em> purposes — potentially in combination with the tasks above — or simply as a reporting tool, even without a specific intention of <em>knowledge discovery</em>.</p> <h3 id="common-issues">Common Issues</h3> <p>Although ||-Coordinates are often a powerful tool for visualizing high-dimensional data, several common issues should be considered. One major challenge is <em>overplotting</em> (often referred to as <em>visual clutter</em>). When visualizing large datasets, the multitude of overlapping lines can obscure important patterns in the plot <a class="citation" href="#Heinrich2013">(Heinrich &amp; Weiskopf, 2013)</a>.</p> <p>Various techniques have been proposed to mitigate visual clutter in ||-Coordinates. One straightforward approach is to (randomly) sample the dataset, which can preserve the most prominent patterns while reducing clutter. However, this method inevitably entails information loss and may lead to data misinterpretation. A number of sampling strategies are discussed in <a class="citation" href="#EllisD06">(Ellis &amp; Dix, 2007)</a>.</p> <p>Other clutter-reduction techniques include:</p> <ul> <li><strong>Brushing</strong>, which allows users to interactively highlight selected observations while dimming or hiding others.</li> <li><strong>Density-based methods</strong>, such as alpha blending, where overlapping lines are rendered with transparency so dense areas appear darker.</li> <li><strong>Aggregation</strong>, e.g., by clustering, to reduce the number of individual lines displayed.</li> <li><strong>Axis-reconfiguration</strong>, which includes reordering or inverting axes to expose structure more clearly.</li> </ul> <p>A comprehensive overview of clutter-reduction methods is available in <a class="citation" href="#Heinrich2013">(Heinrich &amp; Weiskopf, 2013)</a>.</p> <p>Another critical issue is <em>axis ordering</em>. The arrangement of axes in ||-Coordinates has a significant impact on which patterns can be visually perceived. Typically, relationships can only be observed between adjacent axes, so the choice of axis sequence can either reveal or obscure meaningful patterns. For small numbers of dimensions, it may be feasible to try all \(N!\) permutations of the axis order (for \(N\) variables), but this quickly becomes impractical as dimensionality grows. Fortunately, analyzing only pairwise relationships reduces the complexity substantially.</p> <p>The <em>Parallel Coordinates Matrix (PCM)</em> <a class="citation" href="#Heinrich2012">(Heinrich et al., 2012)</a> is one solution that visualizes all pairwise relationships using a compact set of ||-Coordinates plots. Another approach is to use <em>automated axis-ordering algorithms</em> that rank different axis configurations according to correlation or pattern strength, and present the most promising ones to the user <a class="citation" href="#TatuAESTMK09">(Tatu et al., 2009)</a>.</p> <p>A further challenge arises when multiple lines intersect at the exact same point on an axis — a situation that commonly occurs when axes represent discrete variables. In such cases, it becomes ambiguous how to trace individual lines, as multiple continuations are possible. While using distinct colors can help, this approach is only practical for small datasets. More advanced solutions include using curves instead of straight lines, or interactive techniques to isolate and highlight specific samples <a class="citation" href="#Heinrich2013">(Heinrich &amp; Weiskopf, 2013)</a>.</p> <h3 id="related-work-variations-and-extensions-of-parallel-coordinates">Related Work, Variations, and Extensions of Parallel Coordinates</h3> <p>Since the introduction of ||-Coordinates by Inselberg, extensive research has expanded and adapted the technique to address specific challenges, enhance usability, and support diverse application areas such as clustering, classification, and exploratory data analysis.</p> <p>One key direction of this research involves <em>hybrid visualization techniques</em>, which combine parallel coordinates with other methods to leverage their respective strengths and compensate for weaknesses. For instance, in <a class="citation" href="#Yuan2009">(Yuan et al., 2009)</a>, <em>scatter plots</em> and <em>multidimensional scaling</em> are integrated into the parallel coordinates framework. Similarly, Fanea et al. enhance clutter reduction by combining ||-Coordinates with <em>star glyphs</em>. In <a class="citation" href="#Bertini2005">(Bertini et al., 2005)</a>, <em>RadViz</em> is coupled with ||-Coordinates: RadViz is used for brushing, clustering, and coloring, while parallel coordinates visualize the quantitative dimensions of the data.</p> <p>Several efforts extend the original concept to support <em>three-dimensional visualizations</em>. Rübel et al. <a class="citation" href="#Rübel2006">(Rübel et al., 2009)</a> replace traditional axes with scatter plot planes and connect corresponding data points across planes using polygonal lines. In <a class="citation" href="#streit2006">(Streit et al., 2006)</a>, <em>isosurfaces</em> are generated based on data density, providing a volumetric representation that emphasizes high-density regions. Dang et al. <a class="citation" href="#Nhon2010">(Nhon et al., 2010)</a> follow a similar strategy by stacking overlapping graphical elements to alleviate overplotting.</p> <p>While classic ||-Coordinates focus on discrete samples, extensions have also been proposed for continuous data. For example, <a class="citation" href="#Heinrich2009">(Heinrich &amp; Weiskopf, 2009)</a> introduce a density-based model to represent continuous domains in parallel coordinates.</p> <p>As discussed earlier, the <em>Parallel Coordinates Matrix (PCM)</em> <a class="citation" href="#Heinrich2012">(Heinrich et al., 2012)</a> is an important innovation designed to address the axis-ordering challenge. It enables visualization of all pairwise axis relationships using a compact number of parallel coordinate plots. This method builds on graph theory, where each axis is represented as a vertex in a complete graph. Using <em>Hamiltonian decomposition</em>, a set of <em>Hamiltonian paths</em> (for even \(N\)) or <em>Hamiltonian cycles</em> (for odd \(N\)) is computed. A Hamiltonian path visits each vertex exactly once; Hamiltonian cycles extend these paths to form loops. In the axis-ordering context, for odd \(N\), one dimension is added to both ends of each Hamiltonian path to complete the cycle. This technique reduces the number of required plots to visualize all axis-pairs to \(\lfloor \frac{N}{2} \rfloor\).</p> <p>We have implemented the <em>PCM</em> approach in <em>R</em> <a class="citation" href="#RPackage">(R Core Team, 2016)</a>, enabling users to compute Hamiltonian paths and cycles and display the corresponding ||-Coordinates graphs in a compact, structured layout. This method will be used extensively in later parts of this analysis.</p> <h2 id="applications-and-experimental-setup">Applications and Experimental Setup</h2> <p>In this section, we introduce several datasets used to explore the capabilities and limitations of ||-Coordinates. The datasets vary in dimensionality, number of observations, and attribute types. Among them, the <em>Out5d</em> and <em>Pollen</em> datasets have the lowest dimensionality (five attributes each), while the <em>MiniBooNe</em> dataset is the most complex with 51 dimensions. These datasets will be employed for various analytical tasks including classification, clustering, outlier detection, and the identification of patterns and correlations.</p> <p>To support the analysis, we developed custom scripts for generating ||-Coordinates plots and ||-Coordinates Matrix plots (based on the <em>Hamiltonian decomposition</em> technique described in <a class="citation" href="#Heinrich2012">(Heinrich et al., 2012)</a>). These visualizations are implemented in <em>R</em> <a class="citation" href="#RPackage">(R Core Team, 2016)</a>, utilizing the <em>ggplot2</em> package. Although some ||-Coordinates functionality is available in <em>R</em> (e.g., via <em>ggpcp</em>), the default capabilities were insufficient for our requirements. Our implementation includes extended features such as:</p> <ul> <li><strong>Brushing</strong> for highlighting subsets of interest (e.g., clusters),</li> <li><strong>Color-coding</strong> of samples based on class or other attributes,</li> <li><strong>Axis inversion</strong> to reduce clutter (especially helpful for negatively correlated dimensions),</li> <li><strong>Data scaling</strong> for consistent comparison,</li> <li>Intensive use of the <strong>||-Coordinates Matrix</strong> for exploring axis-ordering and pairwise relationships.</li> </ul> <h3 id="the-pollen-dataset">The Pollen Dataset</h3> <p>The <em>Pollen</em> dataset captures geometric features of pollen grains <a class="citation" href="#pollenData">(Coleman, 1986)</a>. It was compiled by David Coleman at RCA Labs (Princeton, USA) in 1986 and served as the American Statistical Association (ASA) Exposition dataset for a data visualization competition. The dataset comprises 3,848 observations with five attributes:</p> <ul> <li><strong>ridge</strong>: feature length in the \(x\)-direction,</li> <li><strong>nub</strong>: feature length in the \(y\)-direction,</li> <li><strong>crack</strong>: feature length in the \(z\)-direction,</li> <li><strong>weight</strong>: the weight of the pollen grain,</li> <li><strong>density</strong>: the density of the grain.</li> </ul> <p>Given its modest dimensionality and visually interesting structure, the <em>Pollen</em> dataset is particularly well-suited for illustrating core concepts of ||-Coordinates. We will use it to demonstrate fundamental features and techniques before applying more complex analyses to higher-dimensional datasets.</p> <h3 id="the-out5d-dataset">The Out5D Dataset</h3> <p>The 5-dimensional <em>Out5d</em> dataset comprises 16,384 observations of remotely sensed data collected in a western region of Australia. The dataset was provided by Peter Ketelaar for Worcester Polytechnic Institute in 2005 <a class="citation" href="#out5d_2005">(Ketelaar, 2005)</a>. Unfortunately, only limited background information is available, though the following details are known: The measurements were taken over a \(128 \times 128\) spatial grid, with each grid cell representing one observation. Each observation contains radiometric information across five attributes:</p> <ul> <li><strong>spot</strong></li> <li><strong>magnetics</strong></li> <li><strong>potassium</strong> (radiometric band)</li> <li><strong>thorium</strong> (radiometric band)</li> <li><strong>uranium</strong> (radiometric band)</li> </ul> <p>Despite the lack of metadata, the <em>Out5d</em> dataset has been used extensively in the literature for pattern detection, clustering, and visualization tasks. It is frequently cited as a benchmark dataset for evaluating high-dimensional visualization techniques. Publications such as <a class="citation" href="#Malik2011">(Malik &amp; Ünlü, 2011; Bertini et al., 2005; Makwana et al., 2012; Zhou et al., 2009; Yu et al., 2012; G. Palmas et al., 2014; Johansson &amp; Cooper, 2008; Artero et al., 2004; Bertini et al., 2006)</a> apply various visualization and analysis strategies to this dataset.</p> <p>We will leverage ||-Coordinates to explore structural patterns in the <em>Out5d</em> dataset and compare our findings with selected results from the above works.</p> <h3 id="the-wine-quality-dataset">The Wine Quality Dataset</h3> <p>The Wine Quality dataset contains a total of \(6497\) samples describing red (1599 samples) and white (4898 samples) <em>Vinho Verde</em> wines from the north-western region <em>Minho</em> of <em>Portugal</em>. The data was collected between May 2004 and February 2007 and is publicly available from the UCI Machine Learning Repository <a class="citation" href="#BacheLichman2013">(Bache &amp; Lichman, 2013)</a>.</p> <p>Each sample is characterized by 12 attributes:</p> <ul> <li>Eleven attributes are based on objective physicochemical laboratory tests:<br/> <em>fixed acidity</em>, <em>volatile acidity</em>, <em>citric acidity</em>, <em>residual sugar</em>, <em>chlorides</em>, <em>free sulfur dioxide</em>, <em>total sulfur dioxide</em>, <em>density</em>, <em>pH</em>, <em>sulphates</em>, and <em>alcohol</em>.</li> <li>The twelfth attribute is <em>quality</em>, a subjective score (ranging from 0 to 10) assigned by three certified wine tasters. Further details can be found in <a class="citation" href="#Cortez2009">(Cortez et al., 2009)</a>.</li> </ul> <p>Our analysis follows the general approach by Cortez et al. <a class="citation" href="#Cortez2009">(Cortez et al., 2009)</a>, seeking relationships between the objective physicochemical properties and the subjective quality ratings. Additionally, we will investigate differences between red and white wines. Identifying such relationships may support quality improvement through purposeful manipulation of controllable variables.</p> <p>While Cortez et al. primarily applied machine learning methods such as Support Vector Machines, multiple regression, and neural networks, we will use ||-Coordinates as our main visual analysis tool to identify structural patterns, correlations, and outliers in the data.</p> <p>Besides <a class="citation" href="#Cortez2009">(Cortez et al., 2009)</a>, several other studies have used this dataset, typically in the context of regression or classification tasks <a class="citation" href="#Appalasamy2012">(Appalasamy et al., 2012; Nachev &amp; Stoyanov, 2012; Lambrou et al., 2012; Dasgupta &amp; Kosara, 2010)</a>.</p> <h3 id="miniboone-particle-identification-dataset">MiniBooNe Particle Identification Dataset</h3> <p>The MiniBooNe dataset (retrieved from <a class="citation" href="#BacheLichman2013">(Bache &amp; Lichman, 2013)</a>) was generated for the <em>MiniBooNe</em> experiment at Fermilab in Batavia, Illinois. The goal of this experiment was to investigate neutrino oscillations <a class="citation" href="#Roe2005">(Roe et al., 2005)</a>. The dataset contains 130,065 observations, each described by 50 numeric attributes. Each sample corresponds to either an electron neutrino or a muon neutrino. For the remainder of this post, we refer to electron neutrinos as <em>signal events</em> and muon neutrinos as <em>background events</em>.</p> <p>The MiniBooNe dataset is the largest used in this blog post — both in terms of the number of observations and dimensionality. In one of the subsequent sections, we will apply ||-Coordinates to this dataset and perform a basic visual classification task, attempting to distinguish <em>signal</em> from <em>background</em> events.</p> <p>Unfortunately, detailed information about the meaning of individual attributes is not publicly available, and we are not aware of any prior publications that apply visualization techniques to this dataset. Therefore, for simplicity, we will label the attributes as <em>V1</em> through <em>V51</em>, where <em>V51</em> denotes the class label (i.e., signal or background).</p> <h2 id="analysis">Analysis</h2> <h3 id="introductory-example-the-pollen-dataset">Introductory Example: The Pollen Dataset</h3> <p>To begin our analysis, we explore the <em>Pollen</em> dataset using ||-Coordinates.</p> <p>As a first step, we generate a basic ||-Coordinates plot of all 3,848 observations without applying any adjustments or parameter tuning (see Fig. 3). Due to the large number of data points, the plot exhibits a high level of overplotting — a common issue in ||-Coordinates visualizations with dense datasets.</p> <p>Despite this visual clutter, the plot already reveals some general characteristics and patterns in the data. For instance, we can see clusters of values and a few dominant trends across axes, offering a rough sense of correlation and spread between variables.</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/pollen/pollen1-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/pollen/pollen1-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/pollen/pollen1-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/pollen/pollen1.png" class="img-fluid rounded z-depth-1 imgcenter" width="80%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 3:</b> ||-Coordinates plot of all observations from the <em>Pollen</em> dataset without any adjustments. Note the significant overplotting, which makes some patterns difficult to discern. </figcaption> </figure> <p>To address the issue of overplotting inherent in classical ||-Coordinates plots, we apply <strong>alpha blending</strong> — a density-based rendering technique that uses transparency to emphasize areas of high point concentration. For this visualization, we set the opacity to \(\alpha = 0.05\). The resulting plot is shown in Fig. 4.</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/pollen/pollen2-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/pollen/pollen2-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/pollen/pollen2-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/pollen/pollen2.png" class="img-fluid rounded z-depth-1 imgcenter" width="80%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 4:</b> ||-Coordinates plot of the <em>Pollen</em> dataset with alpha blending (\(\alpha = 0.05\)) to reduce overplotting. The hyperbolic envelopes suggest approximately normal distributions. However, the central cluster appears unusually dense for purely Gaussian data. </figcaption> </figure> <p>At first glance, the data appears to lack significant outliers. Observations across all five dimensions are centered around zero, and the plot shows characteristic <em>hyperbolic envelopes</em>—a visual hallmark of normally distributed data in ||-Coordinates plots.</p> <p>To confirm this, we inspect the marginal distributions using a density plot (Fig. 5). Each attribute is indeed roughly normally distributed, albeit with varying standard deviations. However, the plot also reveals a consistent anomaly: an unexpected spike in density near the mean of each variable. This anomaly corresponds to the unusually dense central cluster visible in the previous ||-Coordinates plot and may hint at latent structure or subgroups within the dataset.</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/pollen/density-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/pollen/density-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/pollen/density-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/pollen/density.png" class="img-fluid rounded z-depth-1 imgcenter" width="80%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 5:</b> Density plot of the <em>Pollen</em> dataset. All five dimensions exhibit approximately normal distributions. However, an anomalous peak near the mean value suggests hidden structure in the data. </figcaption> </figure> <p>Interestingly, the previous ||-Coordinates plot also shows a small, dense region near zero — a concentration that is atypical for purely normally distributed data. This anomalous cluster may explain the central peak seen in the density plot. To better understand its structure, we zoom into this region and attempt to isolate the cluster.</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/pollen/pollenZoom1-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/pollen/pollenZoom1-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/pollen/pollenZoom1-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/pollen/pollenZoom1.png" class="img-fluid rounded z-depth-1 imgcenter" width="80%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 6:</b> Zoomed view of the center region of the <em>Pollen</em> dataset. The previously identified dense cluster reveals visible structure. Notably, <em>ridge</em> and <em>nub</em> appear positively correlated, while <em>weight</em> and <em>density</em> exhibit negative correlation. Right: Further zoom reveals the underlying cause of the anomaly. </figcaption> </figure> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/pollen/pollenZoom2-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/pollen/pollenZoom2-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/pollen/pollenZoom2-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/pollen/pollenZoom2.png" class="img-fluid rounded z-depth-1 imgcenter" width="80%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 7:</b> Deeper zoom into the ||-Coordinates plot showing the observations from the extracted cluster. The visible patterns indicate intentional structure rather than noise. </figcaption> </figure> <p>Figures 6 and 7 clearly reveal that the cluster contains structured, non-random patterns. Linear relationships between attributes become apparent — for example:</p> <ul> <li><em>Ridge</em> and <em>nub</em> are <strong>positively correlated</strong></li> <li><em>Nub</em> and <em>crack</em>, <em>crack</em> and <em>weight</em>, and <em>weight</em> and <em>density</em> show <strong>negative correlations</strong></li> </ul> <p>Reordering the axes using the ||-Coordinates-Matrix confirms that nearly all attribute pairs exhibit linear relationships within this subset.</p> <p>To investigate further, we generate a <strong>scatter plot matrix</strong> of the extracted cluster. The result unveils a surprising twist: the observations are arranged such that the scatter plots of many attribute pairs spell out the word <strong>“EUREKA”</strong> — as shown in Figure 8 for the pair <em>weight</em> vs. <em>density</em>.</p> <p>This planted structure explains the previously observed anomaly and provides an intriguing example of how synthetic or hidden signals can manifest in high-dimensional data visualizations.</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/pollen/pollenSactter-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/pollen/pollenSactter-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/pollen/pollenSactter-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/pollen/pollenSactter.png" class="img-fluid rounded z-depth-1 imgcenter" width="80%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 8:</b> Further analysis of the extracted cluster finally reveals the secret of the <em>Pollen</em> dataset — a hidden message embedded in the data. </figcaption> </figure> <p>This striking discovery confirms that the dataset was <strong>entirely synthetic</strong>. Both the variable names and the dataset’s title — referencing biological terminology like <em>ridge</em>, <em>nub</em>, <em>crack</em>, and <em>pollen</em> — were deliberately chosen to <strong>mislead</strong> participants into believing the data was biologically meaningful.</p> <p>In reality, the dataset was constructed as a puzzle for the ASA Exposition competition, embedding a hidden message within the data structure to challenge data visualization and analysis techniques. This example demonstrates how deceptive a dataset’s surface characteristics can be — and how powerful visualization techniques like ||-Coordinates can uncover underlying truths.</p> <h3 id="the-out5d-dataset-1">The OUT5D Dataset</h3> <p>In this section, we apply ||-Coordinates to the <em>Out5d</em> dataset to explore potential patterns and correlations within the data.</p> <p>We begin by generating a basic ||-Coordinates plot without any parameter adjustments:</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/out5d/out5d_1-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/out5d/out5d_1-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/out5d/out5d_1-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/out5d/out5d_1.png" class="img-fluid rounded z-depth-1 imgcenter" width="80%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 9:</b> A classical ||-Coordinates plot of the <em>Out5d</em> data without any further adjustments or parameter-settings leads to a high degree of over-plotting. </figcaption> </figure> <p>As expected, the plot suffers from heavy overplotting due to the dataset’s size (16,384 observations), making it difficult to extract meaningful insights at first glance. Nevertheless, a few basic characteristics are apparent:</p> <ul> <li>All values are non-negative.</li> <li>The maximum values for the first three axes (<em>spot</em>, <em>magnetics</em>, and <em>potassium</em>) are around 255 — the output of R’s <code class="language-plaintext highlighter-rouge">summary()</code> function confirms this, suggesting that 8-bit (byte) variables were used to store the data.</li> <li>No clear outliers are visible in this initial rendering.</li> <li>There appears to be a region of higher density on the <em>magnetics</em> and <em>potassium</em> axes, potentially indicating negative correlation for some observations. However, due to the visual clutter, this is merely a hypothesis at this stage and requires deeper investigation using enhanced visualization techniques.</li> </ul> <p>To reduce the visual clutter in the previous ||-Coordinates plot, we apply <em>alpha blending</em> with a transparency value of \(\alpha = 0.01\):</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/out5d/out5d_alpha0_01-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/out5d/out5d_alpha0_01-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/out5d/out5d_alpha0_01-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/out5d/out5d_alpha0_01.png" class="img-fluid rounded z-depth-1 imgcenter" width="80%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 10:</b> Applying <em>alpha blending</em> to the plot with \(\alpha=0.01\) reduces the visual clutter and first patterns in the data are visible. </figcaption> </figure> <p>The applied transparency significantly reduces overplotting and makes underlying patterns more discernible. However, a certain amount of clutter still persists.</p> <p>One technique to further declutter ||-Coordinates plots—especially useful when dealing with negative correlations—is axis inversion. This reduces the number of intersecting lines and helps clarify relationships between variables. We apply this technique by inverting the <em>magnetics</em> axis, which already showed signs of potential negative correlation with other attributes.</p> <p>The resulting plot is shown in Figure 11:</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/out5d/out5d_invMag-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/out5d/out5d_invMag-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/out5d/out5d_invMag-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/out5d/out5d_invMag.png" class="img-fluid rounded z-depth-1 imgcenter" width="80%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 11:</b> ||-Coordinates plot of the <em>Out5d</em> dataset with inverted <em>magnetics</em> axis. The plot already reveals some patterns in the data. On the <em>magnetics</em> axis we can see many observations with a value higher than 250 and lower than 100. Also for <em>potassium</em> a large number of records reach the maximum value of 255. Furthermore, a negative correlation between <em>magnetics</em> and <em>potassium</em> is apparent. Other correlations can be spotted easily as well. </figcaption> </figure> <p>After inversion, clearer patterns emerge:</p> <ul> <li>The <em>magnetics</em> axis shows a bimodal distribution, with clusters above 250 and below 100.</li> <li>The <em>potassium</em> axis reveals a notable saturation at its maximum value (255), suggesting potential sensor clipping or quantization.</li> <li>A strong negative correlation between <em>magnetics</em> and <em>potassium</em> becomes visible.</li> <li>Additional inter-attribute correlations begin to emerge, warranting further inspection.</li> </ul> <p>On the <em>magnetics</em> axis, we observe two prominent concentration regions: one above 250 and another below 100. For <em>potassium</em>, many records reach the maximum value of 255, which supports the earlier assumption that the dataset uses byte-encoded variables.</p> <p>As previously suspected, there appears to be a negative correlation between <em>magnetics</em> and <em>potassium</em>—records with high <em>magnetics</em> values tend to correspond to lower <em>potassium</em> values. Interestingly, while high <em>magnetics</em> values seem to align with low <em>spot</em> values, low <em>magnetics</em> values distribute more evenly across the <em>spot</em> axis, suggesting a more complex relationship.</p> <p>More generally, records with extreme <em>magnetics</em> values (both high and low) can be somewhat separated in the other radiometric dimensions (<em>potassium</em>, <em>thorium</em>, and <em>uranium</em>), indicating the presence of potentially meaningful clusters.</p> <p>To further explore these structures, we apply brushing to highlight and isolate three different sample groups in the ||-Coordinates plot with the inverted <em>magnetics</em> axis:</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/out5d/out5d_Cluster1-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/out5d/out5d_Cluster1-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/out5d/out5d_Cluster1-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/out5d/out5d_Cluster1.png" class="img-fluid rounded z-depth-1 imgcenter" width="80%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 12:</b> Brushing three sets of samples in the ||-Coordinates plot for the <em>Out5d</em> dataset with inverted <em>magnetics</em> axis. In the area around 100 (real value: 155) on the <em>magnetics</em> axis, a higher concentration of observations was found and brushed with black. Another cluster is found when brushing high values of <em>potassium</em> (blue). High <em>magnetics</em> values (red brushed samples) generally lead to fairly low values on the <em>potassium</em> axis, however, the relation is not as clear as for the blue samples. </figcaption> </figure> <p>The brushing reveals:</p> <ul> <li><strong>Black group</strong>: Observations centered around a mid-range <em>magnetics</em> value (~155). These appear to form a dense cluster, possibly indicating a dominant geophysical signature.</li> <li><strong>Blue group</strong>: Samples with high <em>potassium</em> values. These also show distinct behavior in other dimensions, forming a relatively consistent cluster.</li> <li><strong>Red group</strong>: Records with high <em>magnetics</em> values, generally showing low <em>potassium</em> levels—though this relation is weaker than in the blue group.</li> </ul> <p>This analysis suggests that <em>Out5d</em> contains internal structure and subgroups, which could reflect different geological zones or material compositions across the scanned area.</p> <p>To be more precise (according to the figure above), a negative correlation between <em>magnetics</em> and <em>potassium</em> is clearly visible, though it exhibits certain nuances. Specifically, high <em>potassium</em> values tend to correspond to low <em>magnetics</em> values, and conversely, high <em>magnetics</em> values generally align with relatively low <em>potassium</em> values. However, this relationship is not symmetric: while high <em>potassium</em> strongly implies low <em>magnetics</em>, low <em>potassium</em> values are more broadly distributed across the <em>magnetics</em> axis and do not necessarily imply high <em>magnetics</em> values.</p> <p>A dense cluster of observations can be found around the value 100 on the (inverted) <em>magnetics</em> axis — which corresponds to an actual value of 155. We count approximately 1300 records in the range \([155, 170]\), in contrast to only around 340 records in the range \([135, 150]\). These mid-range <em>magnetics</em> observations, along with two other subsets, are highlighted in Figure 12 using brushing.</p> <p>Notably, most of the black-brushed samples (centered around <em>magnetics</em> = 155) cluster not only on the <em>magnetics</em> axis but also align closely in the remaining four dimensions — with the exception of <em>spot</em>. Similarly, the blue-brushed samples (with high <em>potassium</em>) form a fairly compact and well-separated cluster. The red samples (high <em>magnetics</em>) are more spread out in their other dimensions, suggesting weaker or more complex dependencies.</p> <p>To gain deeper insight into the inter-variable relationships, we employ the so-called ||-Coordinates-Matrix (<em>PCM</em>). The <em>PCM</em> visualizes all pairwise attribute combinations using multiple ||-Coordinates plots. Since <em>Out5d</em> consists of five attributes, only two such plots are needed to display all pairwise relations.</p> <p>To construct these plots systematically, we compute all <em>Hamiltonian paths</em> on the complete graph with \(N=4\) vertices (ignoring one attribute temporarily). Then, the fifth attribute is appended to both the start and end of each row in the matrix to form a complete <em>Hamiltonian cycle</em>. This ensures all pairwise combinations are displayed at least once. For the <em>Out5d</em> dataset, exactly two such Hamiltonian cycles are possible:</p> \[\begin{equation} H = \begin{pmatrix} d_5 &amp; d_1 &amp; d_2 &amp; d_4 &amp; d_3 &amp; d_5 \\ d_5 &amp; d_2 &amp; d_3 &amp; d_1 &amp; d_4 &amp; d_5 \end{pmatrix} \label{ch5:eq:hamiltonianOUTfD} \end{equation}\] <p>Using this matrix, it is possible to visualize all pairwise relationships among the five attributes of the <em>Out5d</em> dataset with just two ||-Coordinates plots.</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/out5d/out5d_PCM1-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/out5d/out5d_PCM1-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/out5d/out5d_PCM1-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/out5d/out5d_PCM1.png" class="img-fluid rounded z-depth-1 imgcenter" width="80%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/out5d/out5d_PCM2-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/out5d/out5d_PCM2-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/out5d/out5d_PCM2-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/out5d/out5d_PCM2.png" class="img-fluid rounded z-depth-1 imgcenter" width="80%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 13:</b> ||-Coordinates-Matrix of the <em>Out5d</em> dataset. Two ||-Coordinates plots are sufficient to display all pairwise relations between the five dimensions. The attribute <em>uranium</em> appears twice in each plot to complete the <em>Hamiltonian cycles</em>. Note that the <em>magnetics</em> axis is inverted. </figcaption> </figure> <p>The ||-Coordinates-Matrix reveals several additional patterns in the <em>Out5d</em> dataset. For example, the pairwise relationship between <em>uranium</em> and <em>magnetics</em> uncovers structures that were previously less apparent. Similarly, a noteworthy relation between <em>potassium</em> and <em>uranium</em> emerges, which was not observed in earlier visualizations.</p> <p>Many of the clusters previously identified in <a class="citation" href="#palmas14a">(G. Palmas et al., 2014)</a> — though limited to a subset of attribute combinations — are also clearly visible in our ||-Coordinates-Matrix. In <a class="citation" href="#Malik2011">(Malik &amp; Ünlü, 2011)</a>, Malik and Ünlü use Parallel Coordinates to describe a strong negative correlation between <em>magnetics</em> and <em>potassium</em>, a finding that is confirmed in our analysis. Furthermore, <a class="citation" href="#Bertini2005">(Bertini et al., 2005)</a> combine ||-Coordinates with <em>Radviz</em> (Radial Visualization) and identify clusters where low values of <em>thorium</em>, <em>potassium</em>, and <em>uranium</em> correspond to high <em>magnetics</em> values — and vice versa, a cluster with high <em>uranium</em> and <em>potassium</em> but low <em>magnetics</em>. Our plots support these findings as well.</p> <p>Although the <em>Out5d</em> dataset serves primarily to illustrate key features of ||-Coordinates in this example, the structure of the data hints at potentially anomalous records. As also noted by <a class="citation" href="#Malik2011">(Malik &amp; Ünlü, 2011)</a>, both <em>magnetics</em> and <em>potassium</em> contain about 20% of observations at the maximum value of 255. While this is not inherently problematic, the lack of detailed metadata about the dataset warrants caution when interpreting these values.</p> <p>In each row of the ||-Coordinates-Matrix, the attribute <em>uranium</em> appears twice — once at the beginning and again at the end of the sequence. This ensures that all pairwise relationships are properly represented within the constraints of the Hamiltonian cycles used to build the matrix.</p> <p>The <em>Out5d</em> dataset has been analyzed in several previous publications. Here, we briefly compare findings from those studies with the insights presented in this blog post. For a more comprehensive overview, refer to the citations mentioned earlier.</p> <p>Many of the clusters identified in <a class="citation" href="#palmas14a">(G. Palmas et al., 2014)</a> — although limited in scope due to not covering all attribute combinations — are clearly visible in our ||-Coordinates-Matrix. In <a class="citation" href="#Malik2011">(Malik &amp; Ünlü, 2011)</a>, Malik and Ünlü describe a strong negative correlation between <em>magnetics</em> and <em>potassium</em>, which is also evident in our visualizations. They further report the presence of individual outliers across multiple dimensions.</p> <p>In <a class="citation" href="#Bertini2005">(Bertini et al., 2005)</a>, the authors enhance ||-Coordinates with <em>Radviz</em> to aid the clustering process. Their findings show that low values in <em>thorium</em>, <em>potassium</em>, and <em>uranium</em> often correspond to high values in <em>magnetics</em>. Conversely, they observe a cluster characterized by high <em>uranium</em> and <em>potassium</em> values paired with low <em>magnetics</em>. These patterns are consistent with what is observed in our ||-Coordinates-Matrix (see Fig. 13), reinforcing the value of this visualization technique in uncovering meaningful structures in multidimensional data.</p> <h3 id="the-wine-quality-dataset-1">The Wine Quality Dataset</h3> <p>Following the previous methodology, we now explore the <em>Wine Quality</em> dataset using ||-Coordinates plots. The main objective is to detect patterns in the data that relate to wine quality — for both red and white wines — and to uncover the most prominent differences between them.</p> <p>Given the large number of observations, visualizing the entire dataset (even when separated into red and white wine subsets) using standard ||-Coordinates plots is not advisable, as it would result in a high degree of overplotting. As a first countermeasure, alpha-blending is applied to reduce visual clutter and gain a more interpretable overview.</p> <p>However, simply applying alpha-blending is not sufficient. The default column ordering does not optimize readability, so the plot remains somewhat cluttered. By leveraging the ||-Coordinates-Matrix (<em>PCM</em>) to find more effective axis orderings and inverting certain axes, the clutter can be further reduced. In total, six ||-Coordinates plots are required to fully represent all pairwise relationships in the dataset.</p> <p>To improve the distribution and legibility of the lines, we also remove a small number of extreme outliers from the dataset. Specifically, 31 samples are removed from the white wine dataset and 17 from the red wine dataset. These removed samples do not belong to the best- or worst-rated wines and thus do not affect the key quality groups.</p> <p>Figure 14 shows the resulting plot for the white wine dataset. It provides an informative first overview of the data, including the range of values, emerging clusters, and other notable structures. A similar approach is applied to the red wine dataset. However, detailed insights about wine quality are still limited: very few white wines received a quality rating of 9, and no red wines achieved that score. Conversely, poor-quality wines are also rare, with the lowest ratings being 3 for both red and white wines.</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/wine/whiteOrderedInv-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/wine/whiteOrderedInv-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/wine/whiteOrderedInv-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/wine/whiteOrderedInv.png" class="img-fluid rounded z-depth-1 imgcenter" width="80%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 14:</b> ||-Coordinates plot of the white wine dataset with 4,866 samples. A total of 31 extreme outliers were removed to enhance readability. Using the ||-Coordinates-Matrix and manual axis inversion, visual clutter was minimized. Note that some axes are inverted — their maximum values appear at the bottom of the plot. At this stage, it remains difficult to draw clear conclusions about the <em>quality</em> of the wines from the plot alone. </figcaption> </figure> <p>In order to better understand how the objective attributes influence wine <em>quality</em>, we implement a coloring scheme in our <em>R</em>-based ||-Coordinates plot. Each sample is colored according to its assigned <em>quality</em> using a heat-based color model: low-quality wines are shown in yellow, while high-quality wines appear in red. This color gradient helps visualize quality-related patterns across the dataset.</p> <p>As before, we refine the plot by selecting a suitable axis configuration using the ||-Coordinates-Matrix and inverting specific axes to minimize clutter. Additionally, directly comparing the best and worst wines—by brushing the respective subsets—within a ||-Coordinates plot can reveal broader correlations between <em>quality</em> and the chemical properties of the wines.</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/wine/whiteBestWorst-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/wine/whiteBestWorst-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/wine/whiteBestWorst-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/wine/whiteBestWorst.png" class="img-fluid rounded z-depth-1 imgcenter" width="80%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/wine/redBestWorst-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/wine/redBestWorst-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/wine/redBestWorst-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/wine/redBestWorst.png" class="img-fluid rounded z-depth-1 imgcenter" width="80%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 15:</b> <b>Top:</b> ||-Coordinates plot showing the best and worst <em>white wines</em>. Only samples with a quality of \(3,4,8,\) and \(9\) are visualized. <b>Bottom:</b> Analogous plot for <em>red wines</em>, displaying only samples with a quality of \(3,4,7,\) and \(8\). </figcaption> </figure> <p>To better explore how individual attributes influence wine <em>quality</em>, the most relevant variables — such as <em>alcohol</em>, <em>density</em>, and <em>volatile acidity</em> — are positioned closest to the <em>quality</em> axis. The resulting ||-Coordinates plot for the white wine dataset is shown below.</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/wine/plot2_4-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/wine/plot2_4-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/wine/plot2_4-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/wine/plot2_4.png" class="img-fluid rounded z-depth-1 imgcenter" width="80%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 16:</b> Samples from the white wine dataset are color-coded by <em>quality</em> using a heatmap gradient. Attributes believed to have the strongest influence on <em>quality</em> (e.g., <em>alcohol</em>, <em>density</em>, and <em>volatile acidity</em>) are placed closest to the <em>quality</em> axis. Several axes were inverted to reduce clutter and improve readability. </figcaption> </figure> <p>We identified the attributes <em>alcohol</em>, <em>density</em>, and <em>volatile acidity</em> (in descending order) as the most important for predicting <em>quality</em> in the white wine dataset. Generally, white wines with higher <em>alcohol</em> content tend to have higher <em>quality</em> ratings. For instance, the average <em>alcohol</em> concentration among wines rated 7 or higher is approximately <strong>11.5%</strong>, whereas wines rated 5 or lower average around <strong>9.8%</strong> — a notable difference given the full range of <em>alcohol</em> values is $[8\%, 14.2\%]$.</p> <p>The second most influential attribute is <em>density</em>. Wines with lower <em>density</em> — which often correlates with higher <em>alcohol</em> content — are typically rated higher in quality. (Note: the <em>density</em> axis is inverted in Figure 16.) A similar pattern is visible with <em>volatile acidity</em>: lower values generally correspond to higher-quality wines, although the correlation is not as pronounced as with <em>alcohol</em> and <em>density</em>.</p> <p>The ||-Coordinates plot also reveals several additional insights. For example, while <em>sulphates</em> does not appear globally important, wines with high <em>sulphates</em> concentrations (greater than <strong>0.75 g/dm³</strong>) are mostly associated with higher quality. Another clear pattern is the <strong>negative correlation between <em>pH</em> and <em>fixed acidity</em></strong> — higher <em>fixed acidity</em> corresponds to lower <em>pH</em> values, which is chemically plausible. (The <em>fixed acidity</em> axis is also inverted.) A similar, albeit weaker, effect is observed between <em>citric acid</em> and <em>pH</em>.</p> <p>Interestingly, our findings differ somewhat from those of Cortez et al. <a class="citation" href="#Cortez2009">(Cortez et al., 2009)</a>, who identified <em>sulphates</em> as the most important attribute, followed by <em>alcohol</em>, <em>residual sugar</em>, and <em>citric acid</em>. This discrepancy is likely due to their use of <em>Support Vector Machines</em> for regression, which rely on different importance measures than visual analysis. In contrast, Nachev and Stoyanov <a class="citation" href="#Nachev2012">(Nachev &amp; Stoyanov, 2012)</a> — using symmetrical uncertainty — ranked <em>alcohol</em>, <em>density</em>, and <em>chlorides</em> as the top predictors. Our own <em>Random Forest</em> model supports the visual findings and highlights <em>alcohol</em>, <em>density</em>, and <em>volatile acidity</em> as the most relevant attributes.</p> <p>For the red wine dataset (Figure 17), <em>alcohol</em> once again stands out as the most influential factor on wine <em>quality</em> — higher <em>alcohol</em> content clearly correlates with better quality ratings. Unlike the white wines, however, <em>density</em> does not provide meaningful insight into red wine quality. Instead, <em>sulphates</em> emerge as a more informative attribute: higher concentrations are associated with better-rated red wines.</p> <p>Another notable pattern is that poorly rated red wines tend to exhibit <strong>low <em>citric acidity</em></strong> and <strong>high <em>volatile acidity</em></strong>, while higher-quality wines show the opposite trend — higher <em>citric acidity</em> and lower <em>volatile acidity</em>.</p> <p>As with the white wines, a <strong>negative correlation</strong> is observed between <em>pH</em> and <em>fixed acidity</em>, as well as between <em>pH</em> and <em>citric acidity</em>, reinforcing the inverse chemical relationship between acidity and pH levels in the dataset.</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/wine/redColored1-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/wine/redColored1-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/wine/redColored1-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/wine/redColored1.png" class="img-fluid rounded z-depth-1 imgcenter" width="80%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 17:</b> Coloring the samples of the red wine dataset according to their <em>quality</em>. A high <em>alcohol</em> concentration again appears to have the strongest impact on wine <em>quality</em>. In contrast to white wines, <em>density</em> is less informative for red wine quality, while <em>sulphates</em> seem to be more relevant. </figcaption> </figure> <p>Finally — as the last step in this section — we investigate the main differences between red and white wines. The ||-Coordinates plot comparing both wine types is shown in Figure 18. The differences between red and white wines are easily recognizable. For example, the amount of <em>total sulfur dioxide</em> is noticeably lower in red wines compared to white wines. In addition, red wines generally contain less <em>residual sugar</em> and <em>free sulfur dioxide</em>. Differences across most other attributes can also be observed. Based on visual inspection, the attributes <em>total sulfur dioxide</em>, <em>residual sugar</em>, and <em>free sulfur dioxide</em> appear to be the most relevant for distinguishing between red and white wines.</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/wine/compareBoth-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/wine/compareBoth-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/wine/compareBoth-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/wine/compareBoth.png" class="img-fluid rounded z-depth-1 imgcenter" width="80%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 18:</b> Comparison of red and white wines, with blue curves representing samples from the white wine dataset. Several key differences between the two wine types are apparent. For example, <em>total sulfur dioxide</em> levels are significantly lower in red wines compared to white wines. Additionally, most white wines have higher concentrations of <em>residual sugar</em> and <em>free sulfur dioxide</em>. Other differences across various attributes are also clearly visible. Note that a few axes have been inverted to reduce visual clutter and improve readability. </figcaption> </figure> <h3 id="the-miniboone-particle-identification-dataset">The MiniBooNe Particle Identification Dataset</h3> <p>The <em>MiniBooNe</em> dataset is the final dataset we analyze using <em>Parallel Coordinates</em>. It has the highest number of observations (130,065) and dimensions (50, excluding the class label), which makes processing particularly challenging — both for the techniques used and for the available hardware. Our <em>R</em> implementation of ||-Coordinates struggles with this large volume of records; generating a single plot takes an impractically long time.</p> <p>To address this, we randomly sample the dataset to reduce the number of observations. Unless otherwise stated, we use a sample size of 20,000 records.</p> <p>The <em>MiniBooNe</em> dataset includes 36,499 <em>signal events</em> and 93,565 <em>background events</em>, making it highly imbalanced. A random sample would inherit this imbalance unless explicitly corrected. Since we aim to give equal weight to both classes, we randomly select 10,000 instances from each class for further analysis.</p> <div class="row mt-3"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/plot1_1-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/plot1_1-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/plot1_1-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/plot1_1.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="row mt-3"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/plot1_2-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/plot1_2-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/plot1_2-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/plot1_2.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 19:</b> Initial ||-Coordinates plot of the <em>MiniBooNe Particle Identification</em> dataset. Due to the high number of dimensions the plot was split into two rows. The class-information is not shown in this figure. Nevertheless, we can get a first impression of the data. </figcaption> </figure> </div> <p>A first ||-Coordinates plot of the selected 20,000 observations reveals that many attributes contain a minimum value of \(-999\). These likely represent missing or invalid entries. In total, 468 such records are found and removed from the dataset. Additionally, we automatically filter out extreme outliers—amounting to no more than 1% of the data—to improve the readability of the plot.</p> <p>An updated ||-Coordinates plot, now containing all 50 attributes, is shown in Figure 20. Despite the large number of observations and dimensions, many patterns in the data begin to emerge. We gain a first overview of the value ranges across all attributes; many of them appear to follow a roughly normal distribution.</p> <p>Looking more closely at the segment between <em>V38</em> and <em>V39</em>, we observe a typical hyperbolic shape—indicative of two normally distributed variables. Beyond that, other patterns become apparent: attributes such as <em>V1</em> and <em>V17</em> seem to offer good class-separation, whereas attributes like <em>V34</em>, <em>V41</em>, and <em>V50</em> do not appear useful for distinguishing between classes.</p> <p>We also notice varying data densities across different regions of the plot. For instance, <em>signal events</em> are widely dispersed between <em>V15</em> and <em>V17</em>, while <em>background events</em> appear more concentrated. In this region, several correlations among adjacent variables are visible: <em>V16</em> and <em>V17</em> seem positively correlated, while <em>V31</em> and <em>V32</em> exhibit a negative correlation.</p> <div class="row mt-3"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/plot0_1-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/plot0_1-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/plot0_1-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/plot0_1.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="row mt-3"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/plot0_2-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/plot0_2-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/plot0_2-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/plot0_2.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 20:</b> Initial ||-Coordinates plot of the <em>MiniBooNe</em> dataset showing all dimensions with in total 20,000 samples (10,000 <em>signal events</em> (red) and another 10,000 <em>background events</em> (blue)). The plot already reveals a few patterns in the dataset e.g., a few attributes separate both classes quite well, such as <em>V1</em> or <em>V17</em>. Many clusters can be found as well as regions with large spread of the data (for instance <em>signal events</em> are spread widely and <em>background events</em> are clustered between <em>V15</em> and <em>V17</em>). </figcaption> </figure> </div> <p>As mentioned earlier, not all 50 attributes appear suitable for (visual) classification. In the following, we aim to identify the most significant variables and focus our analysis on them. Figure 21 presents a ||-Coordinates plot containing only those attributes which, after extensive experimentation—including axis reordering and inversion—we found most effective for distinguishing between <em>signal events</em> and <em>background events</em>. In total, 13 attributes were selected, and the most informative configuration was determined using the ||-Coordinates-Matrix.</p> <p>A first qualitative assessment suggests that variable <em>V1</em> offers the strongest class-separation, followed by <em>V17</em> and <em>V16</em>. Interestingly, all three are also ranked among the top five most important features according to a <em>Random Forest</em> model. Additionally, <em>V3</em> appears to have useful class-separating properties, although the majority of samples are concentrated in the lower value range on its axis.</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/plot3-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/plot3-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/plot3-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/plot3.png" class="img-fluid rounded z-depth-1 imgcenter" width="80%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 21:</b> ||-Coordinates plot for a selection of attributes of the <em>MiniBooNe</em> dataset. Again, \(20,000\) samples are plotted – <em>signal events</em> in red and <em>background events</em> in blue. The attributes were selected based on their class-separating characteristics and ordering of the chosen variables was done with the help of the ||-Coordinates-Matrix; additionally a few axes were inverted. </figcaption> </figure> <p>Although ||-Coordinates is primarily a visualization technique and not typically used for direct classification, the human ability to detect relationships and patterns in visualized data makes it a valuable tool for evaluating, adjusting, and verifying algorithmic classification approaches. It is even conceivable to incorporate geometric features—such as the slope or proximity of polygonal lines—into the design and support of classification algorithms.</p> <p>By integrating such geometric characteristics as additional decision variables, classification models like decision trees could potentially be enhanced. For example, the slope of a polygonal line across certain segments might serve as a better class-separating feature than the raw attribute values themselves.</p> <p>Based on our visual analysis so far, we propose a simple, intuitive classifier. Its structure and behavior are illustrated in the figures below:</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/classify2-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/classify2-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/classify2-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/classify2.png" class="img-fluid rounded z-depth-1 imgcenter" width="80%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 22:</b> Illustration of a simple visual classifier for the <em>MiniBooNe</em> dataset, visualized with ||-Coordinates using a total of 8 out of the 50 attributes. One observation from the class <em>background events</em> (blue) and one from the class <em>signal events</em> (red) is shown. The classification process can be described as follows: highlight — for example, using class-specific colors — certain value ranges on individual axes that predominantly contain samples of a specific class. A new observation is then classified by counting how many of these highlighted ranges it intersects for each class. The class with the most intersections is assigned to the observation. In this figure, the blue-colored observation crosses one red-highlighted range on the <em>V2</em> axis and six blue-highlighted ranges — making it very likely a <em>background event</em>. </figcaption> </figure> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/classify1-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/classify1-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/classify1-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/classify1.png" class="img-fluid rounded z-depth-1 imgcenter" width="80%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 23:</b> A simple classifier for the <em>MiniBooNe</em> dataset, visualized using ||-Coordinates with 8 out of the 50 attributes. The figure shows a sample of 1,000 observations that were correctly classified using this basic method. <em>Signal events</em> are shown in red, <em>background events</em> in blue. Overall, approximately \(70\%\) of the 130,064 samples could be classified correctly, while about \(8\%\) were misclassified and \(22\%\) remained unclassified. </figcaption> </figure> <h2 id="discussion-and-conclusion">Discussion and Conclusion</h2> <p>In this blog post, we presented ||-Coordinates, a visualization technique developed by Alfred Inselberg for analyzing multidimensional and multivariate data. We discussed the fundamental properties of ||-Coordinates and applied the method to several datasets varying in dimensionality, number of attributes, and attribute characteristics, in order to explore its strengths and limitations.</p> <p>While designing a (visual) classifier using parallel coordinates is not straightforward, future research could explore how geometric features of ||-Coordinates — such as the slope and proximity of the polygonal lines — might be used to support or enhance traditional classification algorithms.</p> <p>As a case study, we analyzed a dataset containing around 6,500 Portuguese red and white wines. Each wine is described by 11 objective attributes (e.g., alcohol content, pH, density), along with a 12th attribute: <em>quality</em>, as assessed by wine tasters.</p> <p>We began our exploration with the <em>Pollen</em> dataset, which served as an introductory example. With standard ||-Coordinates, insights were limited due to heavy overplotting from the high number of observations. However, once alpha blending was introduced, a clear cluster emerged. Visualizing this cluster in a scatter plot ultimately revealed the hidden structure of the data.</p> <p>Overall, ||-Coordinates prove to be a powerful tool for gaining visual intuition about complex datasets, particularly when enhanced with interactive or perceptual techniques such as axis reordering, inversion, or transparency.</p> <p>The second dataset we analyzed was the <em>Out5d</em> dataset. While its number of dimensions is relatively small and easily handled by ||-Coordinates, the large number of observations (16,384 in total) presented a challenge. Once again, alpha blending proved effective in mitigating the overplotting problem and reducing visual clutter. This example also highlighted the usefulness of the ||-Coordinates-Matrix for identifying patterns or clusters within the data, offering more informative and diverse perspectives.</p> <p>The main task for the <em>wine-quality</em> dataset, our third example, was to explore the relationship between 11 objective attributes and the subjective wine quality rating. In addition to alpha blending and axis reordering, we found that axis inversion can be a powerful tool for reducing clutter—especially in the presence of negative correlations. By applying a heat-based color scheme based on wine quality, we were able to visually assess the influence of specific attributes on the overall quality of the wines.</p> <p>The final dataset we explored—the <em>MiniBooNe</em> particle identification dataset—featured the highest dimensionality (51 attributes) and the largest number of observations (over 130,000) of all our examples. Due to computational constraints, we limited our analysis to a random subset of 20,000 samples. Because finding meaningful patterns among all 50+ attributes was difficult, we reduced the attribute space to the 13 most promising features, based on their visual class-separating properties. After reordering and inverting axes as needed, we were able to generate a configuration that provided a clear separation between the two target classes.</p> <p>Overall, we found ||-Coordinates to be a suitable and helpful tool for data-mining tasks—provided it is applied thoughtfully and adapted to the specific dataset. One of the key advantages of this technique is its <strong>interpretability</strong>: although it is based on a complex underlying theory, ||-Coordinates can be easily applied and understood, even by users with limited experience.</p> <p>One recurring issue we faced, particularly with larger datasets, was <strong>overplotting</strong>—where too many overlapping lines obscure important patterns. To mitigate this, we used a density-based technique known as <strong>alpha blending</strong>, which introduces transparency and helps make clusters and other structures visible.</p> <p>In our experience, ||-Coordinates often revealed <strong>relationships</strong>—such as linear correlations or normal distributions (indicated by hyperbolic envelopes)—more clearly than other visualization techniques like heatmaps or dimensional stacking. For example, in the <em>Pollen</em> dataset, which contained mostly random noise, the method still uncovered structured patterns. However, we also occasionally <strong>misinterpreted correlations</strong>, especially negative ones. These false assumptions were often corrected by <strong>inverting</strong> the corresponding axis, which negates the slope of the polygonal lines in that segment and can significantly reduce clutter.</p> <p>As with dimensional stacking, <strong>axis configuration</strong> plays a critical role in revealing patterns. To address this, we introduced the <strong>||-Coordinates-Matrix</strong>, which allows users to examine all pairwise relationships between attributes using a relatively small number of plots.</p> <p>Once a suitable axis configuration was identified, ||-Coordinates proved to be a powerful tool for identifying <strong>clusters across multiple dimensions</strong>, leveraging features such as line proximity, slope, and density. In this regard, it outperformed both heatmaps and dimensional stacking, which were less effective for clustering.</p> <p>Unlike heatmaps—where color is already used to represent values—||-Coordinates offer the flexibility to use color for <strong>additional layers of information</strong>, such as class labels or quality scores.</p> <p>Despite its advantages, our implementation of ||-Coordinates could not handle extremely large datasets efficiently. For instance, we had to <strong>sample</strong> the <em>MiniBooNe</em> dataset, whereas dimensional stacking could display all observations (albeit limited to around 10 dimensions). Nevertheless, when comparing plots generated from different sample sizes, we found that the <strong>main structures were preserved</strong>, suggesting that ||-Coordinates is a <strong>robust</strong> visualization technique.</p> <p>Another challenge we encountered was the <strong>handling of outliers</strong>. While they are easy to detect in ||-Coordinates, they can distort the scale and compress the majority of data into a narrow region, making interpretation difficult. This limitation also applies to heatmaps and dimensional stacking.</p> <p>In summary, when used with appropriate preprocessing and thoughtful configuration, ||-Coordinates can be a highly effective tool for exploring high-dimensional datasets.</p> <p>Even though we encountered several challenges early on—most notably <strong>overplotting</strong>—we were able to uncover many interesting insights from the analyzed datasets using ||-Coordinates. Unfortunately, not all of these findings could be included in this blog post. Still, it was remarkable to observe how a relatively simple technique like ||-Coordinates—<strong>without requiring significant extensions or enhancements</strong>—was capable of revealing patterns, relationships, and other hidden structures in raw data.</p> <h2 id="references">References</h2> <div class="publications"> <ol class="bibliography"><li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="Inselberg85" class="col-sm-8"> <div class="title">The plane with parallel coordinates.</div> <div class="author"> Alfred Inselberg </div> <div class="periodical"> <em>The Visual Computer</em>, 1985 </div> <div class="periodical"> </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="LeBlancWW90" class="col-sm-8"> <div class="title">Exploring N-Dimensional Databases.</div> <div class="author"> J. LeBlanc, Matthew O. Ward, and N. Wittels </div> <div class="periodical"> <em>In Visualization, 1990</em>, 1990 </div> <div class="periodical"> </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="CHERNOFF" class="col-sm-8"> <div class="title">The Use of Faces to Represent Points in K-Dimensional Space Graphically</div> <div class="author"> Herman Chernoff </div> <div class="periodical"> <em>Journal of the American Statistical Association</em>, 1973 </div> <div class="periodical"> </div> <div class="links"> <a class="abstract btn btn-sm z-depth-0" role="button">Abs</a> <a href="https://doi.org/10.2307/2284077" class="btn btn-sm z-depth-0" role="button">DOI</a> </div> <div class="abstract hidden"> <p>A novel method of representing multivariate data is presented. Each point in k-dimensional space, k ≤ 18, is represented by a cartoon of a face whose features, such as length of nose and curvature of mouth, correspond to components of the point. Thus every multivariate observation is visualized as a computer-drawn face. This presentation makes it easy for the human mind to grasp many of the essential regularities and irregularities present in the data. Other graphical representations are described briefly.</p> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="Inselberg12" class="col-sm-8"> <div class="title">Parallel Coordinates: Visual Multidimensional Geometry and Its Applications.</div> <div class="author"> Alfred Inselberg </div> <div class="periodical"> <em>In Knowledge Discovery and Information Retrieval</em>, 2012 </div> <div class="periodical"> </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="Inselberg97" class="col-sm-8"> <div class="title">Multidimensional detective</div> <div class="author"> Alfred Inselberg </div> <div class="periodical"> <em>In IEEE Visualization 1997</em>, 1997 </div> <div class="periodical"> </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="Plemenos2009" class="col-sm-8"> <div class="title">Visual Complexity and Intelligent Computer Graphics Techniques Enhancements</div> <div class="author"> Dimitri Plemenos and Georgios Miaoulis </div> <div class="periodical"> 2009 </div> <div class="periodical"> </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="Heinrich2013" class="col-sm-8"> <div class="title">State of the Art of Parallel Coordinates</div> <div class="author"> Julian Heinrich and Daniel Weiskopf </div> <div class="periodical"> <em>In STAR Proceedings of Eurographics 2013</em>, 2013 </div> <div class="periodical"> </div> <div class="links"> <a href="https://doi.org/10.2312/conf/EG2013/stars/095-116" class="btn btn-sm z-depth-0" role="button">DOI</a> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="Inselberg1990" class="col-sm-8"> <div class="title">Parallel Coordinates: A Tool for Visualizing Multi-dimensional Geometry</div> <div class="author"> Alfred Inselberg and Bernard Dimsdale </div> <div class="periodical"> <em>In IEEE Visualization 1990</em>, San Francisco, California, 1990 </div> <div class="periodical"> </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="Yonghong2007" class="col-sm-8"> <div class="title">Parallel Filter: A Visual Classifier Based on Parallel Coordinates and Multivariate Data Analysis</div> <div class="author"> Yonghong Xu, Wenxue Hong, Na Chen, and <span class="more-authors" title="click to view 3 more authors" onclick=" var element=$(this); element.attr('title', ''); var more_authors_text=element.text() == '3 more authors' ? 'Xin Li, Wenyuan Liu, Tao Zhang' : '3 more authors'; var cursorPosition=0; var textAdder=setInterval(function(){ element.html(more_authors_text.substring(0, cursorPosition + 1)); if (++cursorPosition == more_authors_text.length){ clearInterval(textAdder); } }, '10'); ">3 more authors</span> </div> <div class="periodical"> <em>Advanced Intelligent Computing Theories and Applications. With Aspects of Artificial Intelligence</em>, 2007 </div> <div class="periodical"> </div> <div class="links"> <a href="https://doi.org/10.1007/978-3-540-74205-0_121" class="btn btn-sm z-depth-0" role="button">DOI</a> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="Steed2012" class="col-sm-8"> <div class="title">A Visual Analytics Approach for Correlation, Classification, and Regression Analysis</div> <div class="author"> Chad A. Steed, J. Edward Swan II, Patrick J. Fitzpatrick, and <span class="more-authors" title="click to view 1 more author" onclick=" var element=$(this); element.attr('title', ''); var more_authors_text=element.text() == '1 more author' ? 'T.J. Jankun-Kelly' : '1 more author'; var cursorPosition=0; var textAdder=setInterval(function(){ element.html(more_authors_text.substring(0, cursorPosition + 1)); if (++cursorPosition == more_authors_text.length){ clearInterval(textAdder); } }, '10'); ">1 more author</span> </div> <div class="periodical"> 2012 </div> <div class="periodical"> </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="EllisD06" class="col-sm-8"> <div class="title">Enabling Automatic Clutter Reduction in Parallel Coordinate Plots.</div> <div class="author"> Geoffrey Ellis and Alan J. Dix </div> <div class="periodical"> <em>IEEE Transactions on Visualization and Computer Graphics</em>, 2006 </div> <div class="periodical"> </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="Heinrich2012" class="col-sm-8"> <div class="title">The Parallel Coordinates Matrix</div> <div class="author"> Julian Heinrich, John Stasko, and Daniel Weiskopf </div> <div class="periodical"> <em>In EuroVis</em>, 2012 </div> <div class="periodical"> </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="TatuAESTMK09" class="col-sm-8"> <div class="title">Combining automated analysis and visualization techniques for effective exploration of high-dimensional data.</div> <div class="author"> Andrada Tatu, Georgia Albuquerque, Martin Eisemann, and <span class="more-authors" title="click to view 4 more authors" onclick=" var element=$(this); element.attr('title', ''); var more_authors_text=element.text() == '4 more authors' ? 'Jörn Schneidewind, Holger Theisel, Marcus A. Magnor, Daniel A. Keim' : '4 more authors'; var cursorPosition=0; var textAdder=setInterval(function(){ element.html(more_authors_text.substring(0, cursorPosition + 1)); if (++cursorPosition == more_authors_text.length){ clearInterval(textAdder); } }, '10'); ">4 more authors</span> </div> <div class="periodical"> <em>In IEEE Visual Analytics Science and Technology</em>, 2009 </div> <div class="periodical"> </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="Yuan2009" class="col-sm-8"> <div class="title">Scattering Points in Parallel Coordinates.</div> <div class="author"> Xiaoru Yuan, Peihong Guo, He Xiao, and <span class="more-authors" title="click to view 2 more authors" onclick=" var element=$(this); element.attr('title', ''); var more_authors_text=element.text() == '2 more authors' ? 'Hong Zhou, Huamin Qu' : '2 more authors'; var cursorPosition=0; var textAdder=setInterval(function(){ element.html(more_authors_text.substring(0, cursorPosition + 1)); if (++cursorPosition == more_authors_text.length){ clearInterval(textAdder); } }, '10'); ">2 more authors</span> </div> <div class="periodical"> <em>IEEE Transactions on Visualization and Computer Graphics</em>, 2009 </div> <div class="periodical"> </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="Bertini2005" class="col-sm-8"> <div class="title">SpringView: cooperation of radviz and parallel coordinates for view optimization and clutter reduction</div> <div class="author"> E. Bertini, L. Dell’Aquila, and G. Santucci </div> <div class="periodical"> <em>In Coordinated and Multiple Views in Exploratory Visualization, 2005.</em>, 2005 </div> <div class="periodical"> </div> <div class="links"> <a href="https://doi.org/10.1109/cmv.2005.17" class="btn btn-sm z-depth-0" role="button">DOI</a> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="Rübel2006" class="col-sm-8"> <div class="title">PointCloudXplore: Visual Analysis of 3D Gene Expression Data Using Physical Views and Parallel Coordinates.</div> <div class="author"> Oliver Rübel, Gunther H. Weber, Soile V. E. Keränen, and <span class="more-authors" title="click to view 11 more authors" onclick=" var element=$(this); element.attr('title', ''); var more_authors_text=element.text() == '11 more authors' ? 'Charless C. Fowlkes, Cris L. Luengo Hendriks, L. Simirenko, N. Y. Shah, Michael B. Eisen, Mark D. Biggin, Hans Hagen, Damir Sudar, Jitendra Malik, David W. Knowles, Bernd Hamann' : '11 more authors'; var cursorPosition=0; var textAdder=setInterval(function(){ element.html(more_authors_text.substring(0, cursorPosition + 1)); if (++cursorPosition == more_authors_text.length){ clearInterval(textAdder); } }, '10'); ">11 more authors</span> </div> <div class="periodical"> <em>In EuroVis</em>, 2006 </div> <div class="periodical"> </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="streit2006" class="col-sm-8"> <div class="title">3D parallel coordinate systems - A new data visualization method in the context of microscopy-based multicolor tissue cytometry</div> <div class="author"> M. Streit, R. C. Ecker, K. Österreicher, and <span class="more-authors" title="click to view 5 more authors" onclick=" var element=$(this); element.attr('title', ''); var more_authors_text=element.text() == '5 more authors' ? 'G. E. Steiner, H. Bischof, C. Bangert, T. Kopp, R. Rogojanu' : '5 more authors'; var cursorPosition=0; var textAdder=setInterval(function(){ element.html(more_authors_text.substring(0, cursorPosition + 1)); if (++cursorPosition == more_authors_text.length){ clearInterval(textAdder); } }, '10'); ">5 more authors</span> </div> <div class="periodical"> <em>Cytometry Part A</em>, 2006 </div> <div class="periodical"> </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="Nhon2010" class="col-sm-8"> <div class="title">Stacking Graphic Elements to Avoid Over-Plotting.</div> <div class="author"> Dang Tuan Nhon, Leland Wilkinson, and Anushka Anand </div> <div class="periodical"> <em>IEEE Transactions on Visualization and Computer Graphics</em>, 2010 </div> <div class="periodical"> </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="Heinrich2009" class="col-sm-8"> <div class="title">Continuous Parallel Coordinates</div> <div class="author"> Julian Heinrich and Daniel Weiskopf </div> <div class="periodical"> <em>IEEE Transactions on Visualization and Computer Graphics</em>, 2009 </div> <div class="periodical"> </div> <div class="links"> <a class="abstract btn btn-sm z-depth-0" role="button">Abs</a> <a href="https://doi.org/https://dx.doi.org/10.1109/TVCG.2009.131" class="btn btn-sm z-depth-0" role="button">DOI</a> </div> <div class="abstract hidden"> <p>Typical scientific data is represented on a grid with appropriate interpolation or approximation schemes, defined on a continuous domain. The visualization of such data in parallel coordinates may reveal patterns latently contained in the data and thus can improve the understanding of multidimensional relations. In this paper, we adopt the concept of continuous scatterplots for the visualization of spatially continuous input data to derive a density model for parallel coordinates. Based on the point–line duality between scatterplots and parallel coordinates, we propose a mathematical model that maps density from a continuous scatterplot to parallel coordinates and present different algorithms for both numerical and analytical computation of the resulting density field. In addition, we show how the 2-D model can be used to successively construct continuous parallel coordinates with an arbitrary number of dimensions. Since continuous parallel coordinates interpolate data values within grid cells, a scalable and dense visualization is achieved, which will be demonstrated for typical multi-variate scientific data.</p> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="RPackage" class="col-sm-8"> <div class="title">R: A Language and Environment for Statistical Computing</div> <div class="author"> R Core Team </div> <div class="periodical"> 2016 </div> <div class="periodical"> [Online. Accessed 10-Feb-2017] </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="pollenData" class="col-sm-8"> <div class="title">Pollen Data-Set</div> <div class="author"> David Coleman </div> <div class="periodical"> 1986 </div> <div class="periodical"> [Online. Accessed 02-Feb-2014] </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="out5d_2005" class="col-sm-8"> <div class="title">The OUT5D dataset\\</div> <div class="author"> Peter Ketelaar </div> <div class="periodical"> 2005 </div> <div class="periodical"> [Online. Accessed 14-Feb-2014] </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="Malik2011" class="col-sm-8"> <div class="title">Interactive Graphics: Exemplified with Real Data Applications</div> <div class="author"> Waqas Ahmed Malik and Ali Ünlü </div> <div class="periodical"> <em>Frontiers in Psychology</em>, 2011 </div> <div class="periodical"> </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="Makwana2012" class="col-sm-8"> <div class="title">Article: Axes Re-Ordering in Parallel Coordinate for Pattern Optimization</div> <div class="author"> Hemant Makwana, Sanjay Tanwani, and Suresh Jain </div> <div class="periodical"> <em>International Journal of Computer Applications</em>, 2012 </div> <div class="periodical"> </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="Zhou2009" class="col-sm-8"> <div class="title">Splatting the Lines in Parallel Coordinates.</div> <div class="author"> Hong Zhou, Weiwei Cui, Huamin Qu, and <span class="more-authors" title="click to view 3 more authors" onclick=" var element=$(this); element.attr('title', ''); var more_authors_text=element.text() == '3 more authors' ? 'Yingcai Wu, Xiaoru Yuan, Wei Zhuo' : '3 more authors'; var cursorPosition=0; var textAdder=setInterval(function(){ element.html(more_authors_text.substring(0, cursorPosition + 1)); if (++cursorPosition == more_authors_text.length){ clearInterval(textAdder); } }, '10'); ">3 more authors</span> </div> <div class="periodical"> <em>Computer Graphics Forum</em>, 2009 </div> <div class="periodical"> </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="Yu2012" class="col-sm-8"> <div class="title">Visual Data Mining: An Exploratory Approach to Analyzing Temporal Patterns of Eye Movements</div> <div class="author"> Chen Yu, Daniel Yurovsky, and Tian(Linger) Xu </div> <div class="periodical"> <em>Infancy</em>, 2012 </div> <div class="periodical"> </div> <div class="links"> <a href="https://doi.org/10.1111/j.1532-7078.2011.00095.x" class="btn btn-sm z-depth-0" role="button">DOI</a> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="palmas14a" class="col-sm-8"> <div class="title">An Edge-Bundling Layout for Interactive Parallel Coordinates</div> <div class="author"> G. Palmas, M. Bachynskyi, A. Oulasvirta, and <span class="more-authors" title="click to view 2 more authors" onclick=" var element=$(this); element.attr('title', ''); var more_authors_text=element.text() == '2 more authors' ? 'H.-P. Seidel, T. Weinkauf' : '2 more authors'; var cursorPosition=0; var textAdder=setInterval(function(){ element.html(more_authors_text.substring(0, cursorPosition + 1)); if (++cursorPosition == more_authors_text.length){ clearInterval(textAdder); } }, '10'); ">2 more authors</span> </div> <div class="periodical"> <em>In IEEE PacificVis</em>, 2014 </div> <div class="periodical"> </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="JohanssonC08" class="col-sm-8"> <div class="title">A Screen Space Quality Method for Data Abstraction.</div> <div class="author"> Jimmy Johansson and Matthew D. Cooper </div> <div class="periodical"> <em>Comput. Graph. Forum</em>, 2008 </div> <div class="periodical"> </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="ArteroOL04" class="col-sm-8"> <div class="title">Uncovering Clusters in Crowded Parallel Coordinates Visualizations.</div> <div class="author"> Almir Olivette Artero, Maria Cristina Ferreira Oliveira, and Haim Levkowitz </div> <div class="periodical"> <em>In IEEE Visualization 2004</em>, 2004 </div> <div class="periodical"> </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="Bertini2006" class="col-sm-8"> <div class="title">Reducing cluttering through non uniform sampling, displacement, and user perception</div> <div class="author"> Enrico Bertini, Luigi Dell’Aquila, and Giuseppe Santucci </div> <div class="periodical"> <em>In Visualization and Data Analysis 2006</em>, 2006 </div> <div class="periodical"> </div> <div class="links"> <a href="https://doi.org/10.1117/12.642748" class="btn btn-sm z-depth-0" role="button">DOI</a> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="BacheLichman2013" class="col-sm-8"> <div class="title">UCI Machine Learning Repository</div> <div class="author"> K. Bache and M. Lichman </div> <div class="periodical"> <em></em> 2013 </div> <div class="periodical"> [Online. Accessed 02-Feb-2014] </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="Cortez2009" class="col-sm-8"> <div class="title">Modeling wine preferences by data mining from physicochemical properties </div> <div class="author"> Paulo Cortez, António Cerdeira, Fernando Almeida, and <span class="more-authors" title="click to view 2 more authors" onclick=" var element=$(this); element.attr('title', ''); var more_authors_text=element.text() == '2 more authors' ? 'Telmo Matos, José Reis' : '2 more authors'; var cursorPosition=0; var textAdder=setInterval(function(){ element.html(more_authors_text.substring(0, cursorPosition + 1)); if (++cursorPosition == more_authors_text.length){ clearInterval(textAdder); } }, '10'); ">2 more authors</span> </div> <div class="periodical"> <em>Decision Support Systems </em>, 2009 </div> <div class="periodical"> </div> <div class="links"> <a href="https://doi.org/https://dx.doi.org/10.1016/j.dss.2009.05.016" class="btn btn-sm z-depth-0" role="button">DOI</a> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="Appalasamy2012" class="col-sm-8"> <div class="title">Classification-based Data Mining Approach for Quality Control in Wine Production</div> <div class="author"> P. Appalasamy, A. Mustapha, N. D. Rizal, and <span class="more-authors" title="click to view 2 more authors" onclick=" var element=$(this); element.attr('title', ''); var more_authors_text=element.text() == '2 more authors' ? 'F. Johari, A. F. Mansor' : '2 more authors'; var cursorPosition=0; var textAdder=setInterval(function(){ element.html(more_authors_text.substring(0, cursorPosition + 1)); if (++cursorPosition == more_authors_text.length){ clearInterval(textAdder); } }, '10'); ">2 more authors</span> </div> <div class="periodical"> <em>Journal of Applied Sciences</em>, 2012 </div> <div class="periodical"> </div> <div class="links"> <a href="https://doi.org/10.3923/jas.2012.598.601" class="btn btn-sm z-depth-0" role="button">DOI</a> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="Nachev2012" class="col-sm-8"> <div class="title">Product Quality Analysis using Support Vector Machnines</div> <div class="author"> Alexander Nachev and Boris Stoyanov </div> <div class="periodical"> <em>Information Models and Analyses</em>, 2012 </div> <div class="periodical"> </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="Lambrou2012" class="col-sm-8"> <div class="title">Reliable Probability Estimates Based on Support Vector Machines for Large Multiclass Datasets</div> <div class="author"> Antonis Lambrou, Harris Papadopoulos, Ilia Nouretdinov, and <span class="more-authors" title="click to view 1 more author" onclick=" var element=$(this); element.attr('title', ''); var more_authors_text=element.text() == '1 more author' ? 'Alexander Gammerman' : '1 more author'; var cursorPosition=0; var textAdder=setInterval(function(){ element.html(more_authors_text.substring(0, cursorPosition + 1)); if (++cursorPosition == more_authors_text.length){ clearInterval(textAdder); } }, '10'); ">1 more author</span> </div> <div class="periodical"> <em>In Artificial Intelligence Applications and Innovations</em>, 2012 </div> <div class="periodical"> </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="DasguptaK10" class="col-sm-8"> <div class="title">Pargnostics: Screen-Space Metrics for Parallel Coordinates</div> <div class="author"> Aritra Dasgupta and Robert Kosara </div> <div class="periodical"> <em>IEEE Transactions on Visualization and Computer Graphics</em>, 2010 </div> <div class="periodical"> </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="Roe2005" class="col-sm-8"> <div class="title">Boosted decision trees as an alternative to artificial neural networks for particle identification</div> <div class="author"> B. P. Roe, H.-J. Yang, J. Zhu, and <span class="more-authors" title="click to view 3 more authors" onclick=" var element=$(this); element.attr('title', ''); var more_authors_text=element.text() == '3 more authors' ? 'Y. Liu, I. Stancu, G. McGregor' : '3 more authors'; var cursorPosition=0; var textAdder=setInterval(function(){ element.html(more_authors_text.substring(0, cursorPosition + 1)); if (++cursorPosition == more_authors_text.length){ clearInterval(textAdder); } }, '10'); ">3 more authors</span> </div> <div class="periodical"> <em>Nuclear Instruments and Methods in Physics Research</em>, 2005 </div> <div class="periodical"> </div> <div class="links"> <a href="https://doi.org/10.1016/j.nima.2004.12.018" class="btn btn-sm z-depth-0" role="button">DOI</a> </div> </div> </div> </li></ol> </div> <h2 id="appendix">Appendix</h2> <h3 id="the-wine-quality-dataset-2">The Wine-Quality dataset</h3> <p>The attributes are summarized in the following table:</p> <table id="TBL-4" class="tabular" cellspacing="0" cellpadding="0"><colgroup id="TBL-4-1g"><col id="TBL-4-1"/><col id="TBL-4-2"/><col id="TBL-4-3"/><col id="TBL-4-4"/></colgroup><tr class="hline"><td><hr/></td><td><hr/></td><td><hr/></td><td><hr/></td></tr><tr style="vertical-align:baseline;" id="TBL-4-1-"><td style="white-space:nowrap; text-align:left;" id="TBL-4-1-1" class="td10"><div class="multicolumn" style="white-space:nowrap; text-align:left;"> Attribute</div> </td><td style="white-space:nowrap; text-align:right;" id="TBL-4-1-2" class="td01"> Unit</td><td style="white-space:nowrap; text-align:right;" id="TBL-4-1-3" class="td11"> Shortcut</td> </tr><tr class="hline"><td><hr/></td><td><hr/></td><td><hr/></td><td><hr/></td></tr><tr class="vspace" style="font-size:2.0pt"><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr style="vertical-align:baseline;" id="TBL-4-2-"><td style="white-space:nowrap; text-align:right;" id="TBL-4-2-1" class="td10"> Fixed acidity </td><td style="white-space:nowrap; text-align:right;" id="TBL-4-2-2" class="td01"> <span class="cmmi-10">g</span>(<span class="cmmi-10">tartaric</span><span class="cmmi-10">&#x00A0;acid</span>)<span class="cmmi-10">&#x2215;dm</span><sup><span class="cmr-7">3</span></sup> </td><td style="white-space:nowrap; text-align:right;" id="TBL-4-2-3" class="td11"> <span class="cmti-10">f</span><span class="cmti-10">_acid </span></td><td style="white-space:nowrap; text-align:right;" id="TBL-4-2-4" class="td11"> </td> </tr><tr style="vertical-align:baseline;" id="TBL-4-3-"><td style="white-space:nowrap; text-align:right;" id="TBL-4-3-1" class="td10"> Volatile acidity </td><td style="white-space:nowrap; text-align:right;" id="TBL-4-3-2" class="td01"> <span class="cmmi-10">g</span>(<span class="cmmi-10">acetic</span><span class="cmmi-10">&#x00A0;acid</span>)<span class="cmmi-10">&#x2215;dm</span><sup><span class="cmr-7">3</span></sup> </td><td style="white-space:nowrap; text-align:right;" id="TBL-4-3-3" class="td11"> <span class="cmti-10">v</span><span class="cmti-10">_acid </span></td><td style="white-space:nowrap; text-align:right;" id="TBL-4-3-4" class="td11"> </td> </tr><tr style="vertical-align:baseline;" id="TBL-4-4-"><td style="white-space:nowrap; text-align:right;" id="TBL-4-4-1" class="td10"> Citric acid </td><td style="white-space:nowrap; text-align:right;" id="TBL-4-4-2" class="td01"> <span class="cmmi-10">g&#x2215;dm</span>3</td><td style="white-space:nowrap; text-align:right;" id="TBL-4-4-3" class="td11"> <span class="cmti-10">c</span><span class="cmti-10">_acid </span></td><td style="white-space:nowrap; text-align:right;" id="TBL-4-4-4" class="td11"> </td> </tr><tr style="vertical-align:baseline;" id="TBL-4-5-"><td style="white-space:nowrap; text-align:right;" id="TBL-4-5-1" class="td10"> Residual sugar </td><td style="white-space:nowrap; text-align:right;" id="TBL-4-5-2" class="td01"> <span class="cmmi-10">g&#x2215;dm</span>3</td><td style="white-space:nowrap; text-align:right;" id="TBL-4-5-3" class="td11"> <span class="cmti-10">sugar </span></td><td style="white-space:nowrap; text-align:right;" id="TBL-4-5-4" class="td11"> </td> </tr><tr style="vertical-align:baseline;" id="TBL-4-6-"><td style="white-space:nowrap; text-align:right;" id="TBL-4-6-1" class="td10"> Chlorides </td><td style="white-space:nowrap; text-align:right;" id="TBL-4-6-2" class="td01"> <span class="cmmi-10">g</span>(<span class="cmmi-10">sodium</span><span class="cmmi-10">&#x00A0;chloride</span>)<span class="cmmi-10">&#x2215;dm</span><sup><span class="cmr-7">3</span></sup> </td><td style="white-space:nowrap; text-align:right;" id="TBL-4-6-3" class="td11"> <span class="cmti-10">chlorides </span></td><td style="white-space:nowrap; text-align:right;" id="TBL-4-6-4" class="td11"> </td> </tr><tr style="vertical-align:baseline;" id="TBL-4-7-"><td style="white-space:nowrap; text-align:right;" id="TBL-4-7-1" class="td10"> Free sulfur dioxide </td><td style="white-space:nowrap; text-align:right;" id="TBL-4-7-2" class="td01"> <span class="cmmi-10">mg&#x2215;dm</span><sup><span class="cmr-7">3</span></sup> </td><td style="white-space:nowrap; text-align:right;" id="TBL-4-7-3" class="td11"> <span class="cmti-10">f</span><span class="cmti-10">_sulfur </span></td><td style="white-space:nowrap; text-align:right;" id="TBL-4-7-4" class="td11"> </td> </tr><tr style="vertical-align:baseline;" id="TBL-4-8-"><td style="white-space:nowrap; text-align:right;" id="TBL-4-8-1" class="td10">Total sulfur dioxide </td><td style="white-space:nowrap; text-align:right;" id="TBL-4-8-2" class="td01"> <span class="cmmi-10">mg&#x2215;dm</span><sup><span class="cmr-7">3</span></sup> </td><td style="white-space:nowrap; text-align:right;" id="TBL-4-8-3" class="td11"> <span class="cmti-10">t</span><span class="cmti-10">_sulfur </span></td><td style="white-space:nowrap; text-align:right;" id="TBL-4-8-4" class="td11"> </td> </tr><tr style="vertical-align:baseline;" id="TBL-4-9-"><td style="white-space:nowrap; text-align:right;" id="TBL-4-9-1" class="td10"> Density </td><td style="white-space:nowrap; text-align:right;" id="TBL-4-9-2" class="td01"> <span class="cmmi-10">g&#x2215;cm</span><sup><span class="cmr-7">3</span></sup> </td><td style="white-space:nowrap; text-align:right;" id="TBL-4-9-3" class="td11"> <span class="cmti-10">density </span></td><td style="white-space:nowrap; text-align:right;" id="TBL-4-9-4" class="td11"> </td> </tr><tr style="vertical-align:baseline;" id="TBL-4-10-"><td style="white-space:nowrap; text-align:right;" id="TBL-4-10-1" class="td10"> pH </td><td style="white-space:nowrap; text-align:right;" id="TBL-4-10-2" class="td01"> <span class="cmsy-10">--</span></td><td style="white-space:nowrap; text-align:right;" id="TBL-4-10-3" class="td11"> <span class="cmti-10">pH </span></td><td style="white-space:nowrap; text-align:right;" id="TBL-4-10-4" class="td11"> </td> </tr><tr style="vertical-align:baseline;" id="TBL-4-11-"><td style="white-space:nowrap; text-align:right;" id="TBL-4-11-1" class="td10"> Sulphates </td><td style="white-space:nowrap; text-align:right;" id="TBL-4-11-2" class="td01"><span class="cmmi-10">g</span>(<span class="cmmi-10">potassium</span><span class="cmmi-10">&#x00A0;sulphate</span>)<span class="cmmi-10">&#x2215;dm</span><sup><span class="cmr-7">3</span></sup> </td><td style="white-space:nowrap; text-align:right;" id="TBL-4-11-3" class="td11"> sulphates</td><td style="white-space:nowrap; text-align:right;" id="TBL-4-11-4" class="td11"> </td> </tr><tr style="vertical-align:baseline;" id="TBL-4-12-"><td style="white-space:nowrap; text-align:right;" id="TBL-4-12-1" class="td10"> Alcohol </td><td style="white-space:nowrap; text-align:right;" id="TBL-4-12-2" class="td01"> <span class="cmmi-10">vol.</span><span class="cmmi-10">&#x00A0;</span>%</td><td style="white-space:nowrap; text-align:right;" id="TBL-4-12-3" class="td11"> <span class="cmti-10">alcohol </span></td><td style="white-space:nowrap; text-align:right;" id="TBL-4-12-4" class="td11"> </td> </tr><tr class="hline"><td><hr/></td><td><hr/></td><td><hr/></td><td><hr/></td></tr><tr style="vertical-align:baseline;" id="TBL-4-13-"><td style="white-space:nowrap; text-align:right;" id="TBL-4-13-1" class="td10"> </td></tr></table> ]]></content><author><name></name></author><category term="Programming"/><category term="parallel coordinates"/><category term="data visualization"/><category term="high-dimensional data"/><category term="alpha blending"/><category term="axis reordering"/><category term="outlier detection"/><category term="clustering"/><summary type="html"><![CDATA[A deep dive into the visualization technique of Parallel Coordinates (||-Coordinates), exploring its strengths, challenges, and practical applications in data mining. Through detailed case studies—including wine quality analysis and the MiniBooNe particle dataset—we demonstrate how this powerful tool can reveal hidden structures, correlations, and clusters in high-dimensional data. With insights into alpha blending, axis reordering, outlier handling, and visual classification, this post offers both theoretical background and hands-on use cases for using Parallel Coordinates effectively.]]></summary></entry></feed>