<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://markusthill.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://markusthill.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-09-09T20:49:16+00:00</updated><id>https://markusthill.github.io/feed.xml</id><title type="html">blank</title><subtitle>Personal notes and code snippets on math, ML &amp; programming. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">Seychelles from Above: A Drone Journey Across Its Most Beautiful Beaches</title><link href="https://markusthill.github.io/blog/2025/seychelles-images/" rel="alternate" type="text/html" title="Seychelles from Above: A Drone Journey Across Its Most Beautiful Beaches"/><published>2025-09-09T01:59:00+00:00</published><updated>2025-09-09T01:59:00+00:00</updated><id>https://markusthill.github.io/blog/2025/seychelles-images</id><content type="html" xml:base="https://markusthill.github.io/blog/2025/seychelles-images/"><![CDATA[<p>The Seychelles are famous for their powdery white sand, turquoise waters, and dramatic granite boulders that make its beaches some of the most photographed in the world. From the wild, untouched beauty of Anse Marron and Anse Caiman on La Digue, to the sweeping stretches of Anse Intendance on Mahé, every beach feels like a hidden paradise. Praslin’s Anse Lazio and Anse Volbert offer some of the best spots for swimming and snorkeling, while La Digue’s iconic Anse Source d’Argent continues to amaze with its surreal landscapes.</p> <p>With my drone, I had the chance to capture these breathtaking places from above, showing a new perspective of their beauty. Below you’ll find image galleries from beaches such as Grand Anse, Anse Cocos, Anse Pierrot, and more. Each one is unique, yet all share that unmistakable Seychelles magic.</p> <h2 id="anse-caiman-la-digue"><a href="https://www.google.com/maps/place/Anse+Caiman/@-4.3488765,55.8458481,14z/data=!4m6!3m5!1s0x231f92d6cb4682b7:0xa0949d275136fa8a!8m2!3d-4.3602468!4d55.8530639!16s%2Fg%2F1tnl3p7k?entry=ttu&amp;g_ep=EgoyMDI1MDkwMy4wIKXMDSoASAFQAw%3D%3D">Anse Caiman (La Digue)</a></h2> <p><a href="/assets/img/2025-09-09-seychelles-images/anse_caiman/DJI_0895.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_caiman/DJI_0895-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_caiman/DJI_0943.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_caiman/DJI_0943-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_caiman/DJI_0950.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_caiman/DJI_0950-480.webp" width="33%"/></a></p> <p><a href="/assets/img/2025-09-09-seychelles-images/anse_caiman/DJI_0953.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_caiman/DJI_0953-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_caiman/DJI_0959.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_caiman/DJI_0959-480.webp" width="33%"/></a></p> <hr/> <h2 id="anse-cocos-la-digue"><a href="https://www.google.com/maps/place/Anse+Cocos/@-4.3677962,55.8489772,17z/data=!3m1!4b1!4m6!3m5!1s0x231f9329314bd0cb:0xf2a567ca900dd4e1!8m2!3d-4.3673267!4d55.8537594!16s%2Fg%2F1vwgybzt?entry=ttu&amp;g_ep=EgoyMDI1MDkwMy4wIKXMDSoASAFQAw%3D%3D">Anse Cocos (La Digue)</a></h2> <p><a href="/assets/img/2025-09-09-seychelles-images/anse_cocos/DJI_0358.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_cocos/DJI_0358-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_cocos/DJI_0479.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_cocos/DJI_0479-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_cocos/DJI_0482.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_cocos/DJI_0482-480.webp" width="33%"/></a></p> <p><a href="/assets/img/2025-09-09-seychelles-images/anse_cocos/DJI_0486.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_cocos/DJI_0486-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_cocos/DJI_0505.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_cocos/DJI_0505-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_cocos/DJI_0520.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_cocos/DJI_0520-480.webp" width="33%"/></a></p> <p><a href="/assets/img/2025-09-09-seychelles-images/anse_cocos/DJI_0531.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_cocos/DJI_0531-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_cocos/DJI_0536.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_cocos/DJI_0536-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_cocos/DJI_0540.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_cocos/DJI_0540-480.webp" width="33%"/></a></p> <p><a href="/assets/img/2025-09-09-seychelles-images/anse_cocos/DJI_0551.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_cocos/DJI_0551-480.webp" width="33%"/></a></p> <hr/> <h2 id="anse-grosse-roche-la-digue"><a href="https://www.google.com/maps/place/Anse+Grosse+Roche/@14.4877431,-60.8175049,17z/data=!4m6!3m5!1s0x8c40274854e66da3:0xd7fe29d74febff5e!8m2!3d14.4877379!4d-60.81493!16s%2Fg%2F11sml8t4w0?entry=ttu&amp;g_ep=EgoyMDI1MDkwMy4wIKXMDSoASAFQAw%3D%3D">Anse Grosse Roche (La Digue)</a></h2> <p><a href="/assets/img/2025-09-09-seychelles-images/anse_grosse_roche/DJI_0026.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_grosse_roche/DJI_0026-480.webp" width="33%"/></a></p> <hr/> <h2 id="anse-intendance-mahé"><a href="https://www.google.com/maps/place/Anse+Intendance/@-4.7851745,55.4939281,17z/data=!3m1!4b1!4m6!3m5!1s0x231e2a0eec1b68ff:0x346ef7970acba9f0!8m2!3d-4.7840006!4d55.4992692!16s%2Fg%2F11c55jtttj?entry=ttu&amp;g_ep=EgoyMDI1MDkwMy4wIKXMDSoASAFQAw%3D%3D">Anse Intendance (Mahé)</a></h2> <p><a href="/assets/img/2025-09-09-seychelles-images/anse_intendance/DJI_0140.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_intendance/DJI_0140-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_intendance/DJI_0143.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_intendance/DJI_0143-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_intendance/DJI_0167.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_intendance/DJI_0167-480.webp" width="33%"/></a></p> <hr/> <h2 id="anse-lazio-praslin"><a href="https://www.google.com/maps/place/Anse+Lazio/@-4.2936471,55.6912067,15z/data=!3m1!4b1!4m6!3m5!1s0x231ff05ad4683b45:0xb86dca89962a5d20!8m2!3d-4.2936687!4d55.7015064!16zL20vMGJ5Yzhj?entry=ttu&amp;g_ep=EgoyMDI1MDkwMy4wIKXMDSoASAFQAw%3D%3D">Anse Lazio (Praslin)</a></h2> <p><a href="/assets/img/2025-09-09-seychelles-images/anse_lazio/DJI_0129.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_lazio/DJI_0129-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_lazio/DJI_0149-ed.png" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_lazio/DJI_0149-ed-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_lazio/DJI_0151.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_lazio/DJI_0151-480.webp" width="33%"/></a></p> <p><a href="/assets/img/2025-09-09-seychelles-images/anse_lazio/DJI_0152.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_lazio/DJI_0152-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_lazio/DJI_0156.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_lazio/DJI_0156-480.webp" width="33%"/></a></p> <hr/> <h2 id="anse-marron-la-digue"><a href="https://www.google.com/maps/place/Anse+Marron/@-4.3839609,55.8392401,17z/data=!3m1!4b1!4m6!3m5!1s0x231fecb40d67dfbb:0x6004329062cf92e2!8m2!3d-4.3840956!4d55.8426331!16s%2Fg%2F1vy5dj7x?entry=ttu&amp;g_ep=EgoyMDI1MDkwMy4wIKXMDSoASAFQAw%3D%3D">Anse Marron (La Digue)</a></h2> <p><a href="/assets/img/2025-09-09-seychelles-images/anse_marron/DJI_0661.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_marron/DJI_0661-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_marron/DJI_0671.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_marron/DJI_0671-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_marron/DJI_0708.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_marron/DJI_0708-480.webp" width="33%"/></a></p> <hr/> <h2 id="anse-pierrot-la-digue"><a href="https://www.google.com/maps/place/Anse+Pierrot/@-4.3802703,55.8274859,17z/data=!3m1!4b1!4m6!3m5!1s0x231fecbf5bbc9e7b:0x8a3f269b53cb648!8m2!3d-4.3812085!4d55.8287272!16s%2Fg%2F1thqd4lx?entry=ttu&amp;g_ep=EgoyMDI1MDkwMy4wIKXMDSoASAFQAw%3D%3D">Anse Pierrot (La Digue)</a></h2> <p><a href="/assets/img/2025-09-09-seychelles-images/anse_pierrot/DJI_0799.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_pierrot/DJI_0799-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_pierrot/DJI_0803.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_pierrot/DJI_0803-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_pierrot/DJI_0819.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_pierrot/DJI_0819-480.webp" width="33%"/></a></p> <p><a href="/assets/img/2025-09-09-seychelles-images/anse_pierrot/DJI_0842.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_pierrot/DJI_0842-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_pierrot/DJI_0855.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_pierrot/DJI_0855-480.webp" width="33%"/></a></p> <hr/> <h2 id="anse-source-dargent-la-digue"><a href="https://www.google.com/maps/place/Anse+Source+d'Argent/@-4.3754502,55.8252084,17z/data=!3m1!4b1!4m6!3m5!1s0x231fecc3f887ed23:0x938a5b07587e9fbd!8m2!3d-4.3754556!4d55.8300793!16s%2Fg%2F11c6s4j80k?entry=ttu&amp;g_ep=EgoyMDI1MDkwMy4wIKXMDSoASAFQAw%3D%3D">Anse Source d’Argent (La Digue)</a></h2> <p><a href="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0280.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0280-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0285.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0285-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0291.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0291-480.webp" width="33%"/></a></p> <p><a href="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0293.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0293-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0321.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0321-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0360.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0360-480.webp" width="33%"/></a></p> <p><a href="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0367.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0367-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0427.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0427-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0448.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0448-480.webp" width="33%"/></a></p> <p><a href="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0537.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0537-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0546.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0546-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0559.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0559-480.webp" width="33%"/></a></p> <p><a href="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0560.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0560-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0618.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0618-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0625.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0625-480.webp" width="33%"/></a></p> <p><a href="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0633.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0633-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0634.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0634-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0727.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0727-480.webp" width="33%"/></a></p> <p><a href="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0738.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0738-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0739.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0739-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0751.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0751-480.webp" width="33%"/></a></p> <p><a href="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0781.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_source_dargent/DJI_0781-480.webp" width="33%"/></a></p> <hr/> <h2 id="anse-volbert-praslin"><a href="https://www.google.com/maps/place/Anse+Volbert+Village,+Seychelles/@-4.3142086,55.7327507,15z/data=!4m6!3m5!1s0x231ff1dd070f4a6b:0x482ca3162c8e12bc!8m2!3d-4.3169478!4d55.7476916!16s%2Fg%2F12120htz?entry=ttu&amp;g_ep=EgoyMDI1MDkwMy4wIKXMDSoASAFQAw%3D%3D">Anse Volbert (Praslin)</a></h2> <p><a href="/assets/img/2025-09-09-seychelles-images/anse_volbert/DJI_0066.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_volbert/DJI_0066-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_volbert/DJI_0068.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_volbert/DJI_0068-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_volbert/DJI_0079.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_volbert/DJI_0079-480.webp" width="33%"/></a></p> <p><a href="/assets/img/2025-09-09-seychelles-images/anse_volbert/DJI_0102.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_volbert/DJI_0102-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_volbert/DJI_0110.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_volbert/DJI_0110-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/anse_volbert/DJI_0320.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/anse_volbert/DJI_0320-480.webp" width="33%"/></a></p> <hr/> <h2 id="grand-anse-la-digue"><a href="https://www.google.com/maps/place/Grand+Anse+Beach/@-4.3742335,55.8428889,18z/data=!3m1!4b1!4m6!3m5!1s0x231feccd00e3f669:0x5512671ef2054b11!8m2!3d-4.3739963!4d55.84385!16s%2Fg%2F1td3tsgj?entry=ttu&amp;g_ep=EgoyMDI1MDkwMy4wIKXMDSoASAFQAw%3D%3D">Grand Anse (La Digue)</a></h2> <p><a href="/assets/img/2025-09-09-seychelles-images/grand_anse_la_digue/DJI_0617.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/grand_anse_la_digue/DJI_0617-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/grand_anse_la_digue/DJI_0626.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/grand_anse_la_digue/DJI_0626-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/grand_anse_la_digue/DJI_0627.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/grand_anse_la_digue/DJI_0627-480.webp" width="33%"/></a></p> <p><a href="/assets/img/2025-09-09-seychelles-images/grand_anse_la_digue/DJI_0280.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/grand_anse_la_digue/DJI_0280-480.webp" width="33%"/></a></p> <hr/> <h2 id="st-pierre-islet-praslin"><a href="https://www.google.com/maps/place/St.+Pierre+Island/@-4.3025895,55.7397003,15z/data=!3m1!4b1!4m14!1m7!3m6!1s0x231ff18c29a9ec39:0x3d6273d200ab4290!2sSt.+Pierre+Island!8m2!3d-4.302611!4d55.75!16s%2Fg%2F119x71wbn!3m5!1s0x231ff18c29a9ec39:0x3d6273d200ab4290!8m2!3d-4.302611!4d55.75!16s%2Fg%2F119x71wbn?entry=ttu&amp;g_ep=EgoyMDI1MDkwMy4wIKXMDSoASAFQAw%3D%3D">St. Pierre Islet (Praslin)</a></h2> <p><a href="/assets/img/2025-09-09-seychelles-images/st_pier/DJI_0279.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/st_pier/DJI_0279-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/st_pier/DJI_0294.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/st_pier/DJI_0294-480.webp" width="33%"/></a> <a href="/assets/img/2025-09-09-seychelles-images/st_pier/DJI_0300.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/st_pier/DJI_0300-480.webp" width="33%"/></a></p> <hr/> <h2 id="sunset-beach-mahé"><a href="https://www.google.com/maps/place/Sunset+Beach/@-4.5847981,55.4296932,17z/data=!3m1!4b1!4m6!3m5!1s0x22e0289d8f82778d:0xa99ff852a5248366!8m2!3d-4.5848855!4d55.432452!16s%2Fg%2F1thv27_q?entry=ttu&amp;g_ep=EgoyMDI1MDkwMy4wIKXMDSoASAFQAw%3D%3D">Sunset Beach (Mahé)</a></h2> <p><a href="/assets/img/2025-09-09-seychelles-images/sunset_beach/DJI_0093.JPG" data-lightbox="roadtrip"><img src="/assets/img/2025-09-09-seychelles-images/sunset_beach/DJI_0093-480.webp" width="33%"/></a></p>]]></content><author><name></name></author><category term="traveling"/><category term="seychelles"/><category term="drone"/><summary type="html"><![CDATA[Discover the Seychelles’ most stunning beaches from a new perspective. From the iconic Anse Source d’Argent on La Digue to the sweeping Anse Intendance on Mahé, these drone shots capture some of the islands’ breathtaking beauty.]]></summary></entry><entry><title type="html">Short Notes: Understanding Euclid’s GCD Algorithm</title><link href="https://markusthill.github.io/blog/2025/euclids-algorithm/" rel="alternate" type="text/html" title="Short Notes: Understanding Euclid’s GCD Algorithm"/><published>2025-08-02T23:00:51+00:00</published><updated>2025-08-02T23:00:51+00:00</updated><id>https://markusthill.github.io/blog/2025/euclids-algorithm</id><content type="html" xml:base="https://markusthill.github.io/blog/2025/euclids-algorithm/"><![CDATA[<h1 id="introduction">Introduction</h1> <p>Euclid’s Algorithm is one of the oldest and most elegant procedures in mathematics. Dating back over two millennia, it provides an efficient method to compute the greatest common divisor (GCD) of two integers — the largest number that divides both without a remainder.</p> <p>But why does this algorithm work? What makes repeatedly replacing a pair $(a, b)$ with $(b, a \bmod b)$, eventually lead us to the GCD?</p> <p>In this short note, we take a closer look at the mathematical foundation behind Euclid’s Algorithm. Through a simple but rigorous argument, we’ll see how divisibility and the properties of remainders come together to justify the algorithm’s correctness.</p> <p><br/></p> <h1 id="a-fairly-informal-proof">A (fairly) Informal Proof</h1> <p>We aim to show that for integers $a, b \in \mathbb{Z}$ with $b \ne 0$, the greatest common divisor satisfies:</p> \[\gcd(a, b) = \gcd(b, a \bmod b).\] <p>Let $d = \gcd(a, b)$. By definition:</p> <ul> <li>$d \mid a$</li> <li>$d \mid b$</li> </ul> <p>Since $d \mid a$ and $d \mid b$, it also divides any linear combination of $a$ and $b$, in particular:</p> \[\begin{align} a &amp;= qb + r \quad \text{for some } q \in \mathbb{Z}, \, 0 \le r &lt; |b| \\ r &amp;= a - qb = a \bmod b. \end{align}\] <p>So $d \mid r$, and of course $d \mid b$ by assumption.</p> <p>Now let:</p> \[\begin{align} d' = \gcd(b,r). \end{align}\] <p>Since $d’$ divides both $b$ and $r$, it must also divide any linear combination of them, and in particular, it divides $a = qb + r$:</p> \[\begin{align} d' \mid r+qb = a. \end{align}\] <p>And since $d’ \mid a$ and $d’ \mid b$, meaning $d’$ is a common divisor of $a$ and $b$, it follows that</p> \[\begin{align} d' \le d, \end{align}\] <p>since $d$ is the greatest common divisor of $a$ and $b$, so $d’$ has to be less or equal. Conversely, we already showed that $d \mid b$ and $d \mid r$, so $d$ is a common divisor of $b$ and $r$, implying:</p> \[\begin{align} d \le d', \end{align}\] <p>which leads us to the conclusion:</p> \[\begin{align} d &amp;= d' \\ \gcd(a,b) &amp;= \gcd(b,r) \\ \gcd(a,b) &amp;= \gcd(b, a \bmod b). \end{align}\] <p>(In other words: we know that $d’ = \gcd(b, r) \le d$ and we know that $d \mid b$ and also $d \mid r$. But $d$ cannot be larger than the already defined GCD of $b$ and $r$, $d’ = \gcd(b, r)$, hence $\Rightarrow d’=d$).</p> <p>This identity is the key to <strong>Euclid’s Algorithm</strong>, which recursively applies:</p> \[\begin{align} \gcd(a, b) = \gcd(b, a \bmod b), \end{align}\] <p>until the second argument becomes zero, at which point $\gcd(a, 0) = | a |$ (by definition).</p> <p><br/></p> <h1 id="implementation-in-python">Implementation in Python</h1> <p>To translate the mathematical idea into code, we can use a simple recursive function that mirrors the structure of the proof:</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">gcd</span><span class="p">(</span><span class="n">a</span><span class="p">:</span> <span class="nb">int</span><span class="p">,</span> <span class="n">b</span><span class="p">:</span> <span class="nb">int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nb">int</span><span class="p">:</span>
    <span class="sh">"""</span><span class="s">
    Computes the greatest common divisor (GCD) of a and b using Euclid</span><span class="sh">'</span><span class="s">s Algorithm.
    </span><span class="sh">"""</span>
    <span class="k">if</span> <span class="n">b</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
        <span class="k">return</span> <span class="nf">abs</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>  <span class="c1"># GCD is always non-negative
</span>    <span class="k">return</span> <span class="nf">gcd</span><span class="p">(</span><span class="n">b</span><span class="p">,</span> <span class="n">a</span> <span class="o">%</span> <span class="n">b</span><span class="p">)</span>
</code></pre></div></div> <p>Alternatively, an iterative version avoids recursion and may be more efficient in practice:</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">gcd_iterative</span><span class="p">(</span><span class="n">a</span><span class="p">:</span> <span class="nb">int</span><span class="p">,</span> <span class="n">b</span><span class="p">:</span> <span class="nb">int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nb">int</span><span class="p">:</span>
    <span class="sh">"""</span><span class="s">
    Iterative version of Euclid</span><span class="sh">'</span><span class="s">s Algorithm.
    </span><span class="sh">"""</span>
    <span class="k">while</span> <span class="n">b</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">:</span>
        <span class="n">a</span><span class="p">,</span> <span class="n">b</span> <span class="o">=</span> <span class="n">b</span><span class="p">,</span> <span class="n">a</span> <span class="o">%</span> <span class="n">b</span>
    <span class="k">return</span> <span class="nf">abs</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
</code></pre></div></div> <p>Both versions rely on the identity $\gcd(a, b) = \gcd(b, a \bmod b)$.</p> <p><br/></p> <h1 id="worked-example-gcd-of-252-and-105">Worked Example: GCD of 252 and 105</h1> <p>To illustrate how Euclid’s Algorithm works in practice, let’s compute:</p> \[\gcd(252, 105)\] <p>We apply the rule $\gcd(a, b) = \gcd(b, a \bmod b)$ repeatedly:</p> <ol> <li> <p>$\gcd(252, 105)$<br/> $252 \bmod 105 = 42$<br/> So, $\gcd(252, 105) = \gcd(105, 42)$</p> </li> <li> <p>$\gcd(105, 42)$<br/> $105 \bmod 42 = 21$<br/> So, $\gcd(105, 42) = \gcd(42, 21)$</p> </li> <li> <p>$\gcd(42, 21)$<br/> $42 \bmod 21 = 0$<br/> So, $\gcd(42, 21) = 21$</p> </li> </ol> <p>We stop here since the remainder is 0, and the last non-zero value is the GCD. Therefore:</p> \[\gcd(252, 105) = 21\] <p>This example illustrates how the algorithm quickly reduces the problem to a simpler one through successive remainders. You can cross-check the result by running one of the GCD functions above in your Python IDE.</p>]]></content><author><name></name></author><category term="Math"/><category term="Algorithms"/><category term="Programming"/><category term="gcd"/><category term="euclids-algorithm"/><category term="number-theory"/><category term="mathematics"/><category term="proofs"/><summary type="html"><![CDATA[A concise walkthrough of why Euclid’s Algorithm correctly computes the greatest common divisor (GCD), using basic properties of divisibility and remainders.]]></summary></entry><entry><title type="html">Conway’s Game of Life</title><link href="https://markusthill.github.io/blog/2025/conways-game-of-life/" rel="alternate" type="text/html" title="Conway’s Game of Life"/><published>2025-08-01T21:50:48+00:00</published><updated>2025-08-01T21:50:48+00:00</updated><id>https://markusthill.github.io/blog/2025/conways-game-of-life</id><content type="html" xml:base="https://markusthill.github.io/blog/2025/conways-game-of-life/"><![CDATA[<h1 id="introduction">Introduction</h1> <p>Conway’s Game of Life is a so-called <em>zero-player game</em>, developed by British mathematician John Horton Conway in 1970. It begins with an initial configuration set by the player, and from that point on, it evolves automatically without any further interaction.</p> <p>The rules are quite simple. Here is an excerpt from <a href="https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life">wikipedia.org</a>:</p> <blockquote> <p><em>The universe of the Game of Life is an infinite, two-dimensional orthogonal grid of square cells, each of which is in one of two possible states: alive or dead (or populated and unpopulated, respectively). Every cell interacts with its eight neighbors, which are the cells that are horizontally, vertically, or diagonally adjacent. At each step in time, the following transitions occur:</em></p> </blockquote> <ol> <li><em>Any live cell with fewer than two live neighbors dies, as if by underpopulation.</em></li> <li><em>Any live cell with two or three live neighbors lives on to the next generation.</em></li> <li><em>Any live cell with more than three live neighbors dies, as if by overpopulation.</em></li> <li><em>Any dead cell with exactly three live neighbors becomes a live cell, as if by reproduction.</em></li> </ol> <blockquote> <p><em>The initial pattern constitutes the seed of the system. The first generation is created by applying the above rules simultaneously to every cell in the seed; births and deaths occur simultaneously, and the discrete moment at which this happens is sometimes called a tick. Each generation is a pure function of the preceding one. The rules continue to be applied repeatedly to create further generations.</em></p> </blockquote> <p>In this post, we will implement the Game of Life in \(R\) and explore some of the results it produces.</p> <h1 id="implementation-in-r">Implementation in <em>R</em></h1> <p>In principle, the grid in Conway’s Game of Life is infinite. Due to the limitations of our computers, however, we work with a finite grid. For our experiments, we will use relatively small grid sizes.</p> <p>First, we need a function to initialize the grid. Each cell has a 50% chance of being alive:</p> <figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">randInitWorld</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">dimX</span><span class="p">,</span><span class="w"> </span><span class="n">dimY</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">matrix</span><span class="p">(</span><span class="n">sample</span><span class="p">(</span><span class="nf">c</span><span class="p">(</span><span class="kc">TRUE</span><span class="p">,</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">),</span><span class="w"> </span><span class="n">dimX</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="n">dimY</span><span class="p">,</span><span class="w"> </span><span class="n">replace</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">),</span><span class="w"> </span><span class="n">dimY</span><span class="p">,</span><span class="w"> </span><span class="n">dimX</span><span class="p">)</span><span class="w">
</span><span class="p">}</span></code></pre></figure> <p>Next, we define a function to count the number of live neighbors for each cell in the grid. For each cell, we look at its surrounding 3×3 box (shrinking the box at the edges) and count the number of live cells—excluding the center cell itself:</p> <figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">countAliveNeighbors</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">X</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">d</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">dim</span><span class="p">(</span><span class="n">X</span><span class="p">)</span><span class="w">
  </span><span class="n">C</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">apply</span><span class="p">(</span><span class="n">merge</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="n">d</span><span class="p">[</span><span class="m">1</span><span class="p">],</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="n">d</span><span class="p">[</span><span class="m">2</span><span class="p">]),</span><span class="w"> </span><span class="m">1</span><span class="p">,</span><span class="w">
    </span><span class="k">function</span><span class="p">(</span><span class="n">i</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="nf">sum</span><span class="p">(</span><span class="n">X</span><span class="p">[</span><span class="nf">max</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="n">i</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="m">1</span><span class="p">)</span><span class="o">:</span><span class="nf">min</span><span class="p">(</span><span class="n">d</span><span class="p">[</span><span class="m">1</span><span class="p">],</span><span class="w"> </span><span class="n">i</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="m">1</span><span class="p">),</span><span class="w">
            </span><span class="nf">max</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="n">i</span><span class="p">[</span><span class="m">2</span><span class="p">]</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="m">1</span><span class="p">)</span><span class="o">:</span><span class="nf">min</span><span class="p">(</span><span class="n">d</span><span class="p">[</span><span class="m">2</span><span class="p">],</span><span class="w"> </span><span class="n">i</span><span class="p">[</span><span class="m">2</span><span class="p">]</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="m">1</span><span class="p">)])</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="n">X</span><span class="p">[</span><span class="n">i</span><span class="p">[</span><span class="m">1</span><span class="p">],</span><span class="w"> </span><span class="n">i</span><span class="p">[</span><span class="m">2</span><span class="p">]]</span><span class="w">
    </span><span class="p">}</span><span class="w">
  </span><span class="p">)</span><span class="w">
  </span><span class="n">matrix</span><span class="p">(</span><span class="n">C</span><span class="p">,</span><span class="w"> </span><span class="n">d</span><span class="p">[</span><span class="m">1</span><span class="p">],</span><span class="w"> </span><span class="n">d</span><span class="p">[</span><span class="m">2</span><span class="p">])</span><span class="w">
</span><span class="p">}</span></code></pre></figure> <p>Now we’re ready to write a function that performs the transition to the next generation. According to the rules, a cell will be alive in the next generation if:</p> <ol> <li>It has exactly three live neighbors, <strong>or</strong></li> <li>It is currently alive <strong>and</strong> has exactly two live neighbors.</li> </ol> <p>All other cells will be dead in the next generation. These two simple conditions make it easy to implement the evolution step:</p> <figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">evolveNextGeneration</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">XWorld</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">XWorldCount</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">countAliveNeighbors</span><span class="p">(</span><span class="n">XWorld</span><span class="p">)</span><span class="w">
  </span><span class="p">(</span><span class="n">XWorldCount</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="m">3</span><span class="p">)</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">XWorld</span><span class="w"> </span><span class="o">&amp;</span><span class="w"> </span><span class="p">(</span><span class="n">XWorldCount</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="m">2</span><span class="p">)</span><span class="w">
</span><span class="p">}</span></code></pre></figure> <p>And that’s essentially it. We only need a few utility functions to evolve the grid world over multiple time steps and to visualize the grid after each transition. The complete code is available on <a href="https://github.com/MarkusThill/Game-Of-Life">GitHub</a> and is also included in the appendix.</p> <h1 id="example">Example</h1> <p>Let’s take a look at how a randomly initialized 100×100 grid evolves over time:</p> <figure> <picture> <source class="responsive-img-srcset" srcset="https://github.com/MarkusThill/Game-Of-Life/blob/master/img/animation.gif?raw=true" sizes="95vw"/> <img src="https://github.com/MarkusThill/Game-Of-Life/blob/master/img/animation.gif?raw=true" class="img-fluid rounded z-depth-1 imgcenter" width="80%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 1:</b> Evolution of a 100×100 grid-world over time. After some time, characteristic (often periodic) patterns emerge, which are typical in Conway’s Game of Life. </figcaption> </figure> <p>Depending on the initial configuration, many interesting and diverse patterns can emerge. A wide variety of known patterns are documented on <a href="https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life">wikipedia.org</a>.</p> <p>In many cases, the population of live cells never completely dies out but instead stabilizes around a certain number. The following image illustrates how the population evolves over time on a 100×100 grid, based on 20 different random initializations. Initially, about 50% of all cells are alive, but this proportion quickly drops across all runs. After approximately 1,000 iterations, the number of live cells stabilizes at around 350.</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2019-04-13-conways-game-of-life/evolve-480.webp 480w,/assets/img/2019-04-13-conways-game-of-life/evolve-800.webp 800w,/assets/img/2019-04-13-conways-game-of-life/evolve-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2019-04-13-conways-game-of-life/evolve.png" class="img-fluid rounded z-depth-1 imgcenter" width="80%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 2:</b> Number of live cells on a 100×100 grid-world. The black line shows the mean across 20 runs, while the red ribbon indicates the 95% confidence interval for the mean. </figcaption> </figure> <h1 id="appendix">Appendix</h1> <h2 id="a1-code">A1: Code</h2> <p>The <a href="https://github.com/MarkusThill/Game-Of-Life">GitHub Code</a> is available <a href="https://github.com/MarkusThill/Game-Of-Life">here</a>!</p> <h2 id="a2-further-examples">A2: Further Examples</h2> <h3 id="example-1">Example 1</h3> <figure> <picture> <source class="responsive-img-srcset" srcset="https://github.com/MarkusThill/Game-Of-Life/blob/master/img/animation10.gif?raw=true" sizes="95vw"/> <img src="https://github.com/MarkusThill/Game-Of-Life/blob/master/img/animation10.gif?raw=true" class="img-fluid rounded z-depth-1 imgcenter" width="70%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h3 id="example-2">Example 2</h3> <figure> <picture> <source class="responsive-img-srcset" srcset="https://github.com/MarkusThill/Game-Of-Life/blob/master/img/animation12.gif?raw=true" sizes="95vw"/> <img src="https://github.com/MarkusThill/Game-Of-Life/blob/master/img/animation12.gif?raw=true" class="img-fluid rounded z-depth-1 imgcenter" width="70%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h3 id="example-3">Example 3</h3> <figure> <picture> <source class="responsive-img-srcset" srcset="https://github.com/MarkusThill/Game-Of-Life/blob/master/img/animation4.gif?raw=true" sizes="95vw"/> <img src="https://github.com/MarkusThill/Game-Of-Life/blob/master/img/animation4.gif?raw=true" class="img-fluid rounded z-depth-1 imgcenter" width="70%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h3 id="example-4">Example 4</h3> <figure> <picture> <source class="responsive-img-srcset" srcset="https://github.com/MarkusThill/Game-Of-Life/blob/master/img/animation6.gif?raw=true" sizes="95vw"/> <img src="https://github.com/MarkusThill/Game-Of-Life/blob/master/img/animation6.gif?raw=true" class="img-fluid rounded z-depth-1 imgcenter" width="70%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure>]]></content><author><name></name></author><category term="Programming"/><category term="Conway&apos;s Game of Life"/><category term="cellular automata"/><category term="R programming"/><category term="simulation"/><category term="computer science"/><category term="mathematical modeling"/><category term="zero-player games"/><category term="game theory"/><category term="dynamic systems"/><category term="grid-based models"/><summary type="html"><![CDATA[An introduction to Conway’s Game of Life with an implementation in R. We explore the simple rules behind this zero-player cellular automaton, simulate its evolution on a 100×100 grid, and visualize emerging patterns and population dynamics over time.]]></summary></entry><entry><title type="html">Visualizing High-Dimensional Data Using Parallel Coordinates</title><link href="https://markusthill.github.io/blog/2025/visualizing-high-dimensional-data-with-parallel-coordinates/" rel="alternate" type="text/html" title="Visualizing High-Dimensional Data Using Parallel Coordinates"/><published>2025-07-31T08:00:51+00:00</published><updated>2025-07-31T08:00:51+00:00</updated><id>https://markusthill.github.io/blog/2025/visualizing-high-dimensional-data-with-parallel-coordinates</id><content type="html" xml:base="https://markusthill.github.io/blog/2025/visualizing-high-dimensional-data-with-parallel-coordinates/"><![CDATA[<p>The human brain has a remarkable ability to recognize patterns in graphical representations of data, which is why visual methods continue to play a crucial role in data-mining tasks. When data is visualized effectively, humans can detect both relevant and irrelevant structures and draw meaningful conclusions. However, designing appropriate visualization tools—especially for high-dimensional data—remains a significant challenge. This is due to our spatial perception being limited to three dimensions, which means high-dimensional data must be mapped to lower dimensions.</p> <p>Parallel Coordinates (commonly ||-Coordinates), introduced by <em>Alfred Inselberg</em> <a class="citation" href="#Inselberg85">(Inselberg, 1985)</a>, follow such an approach by mapping high-dimensional data to 2D using a systematic and interpretable method.</p> <p>In this blog post, we will briefly introduce ||-Coordinates, explore their properties, and apply them to various datasets. We will also compare the results to several other visualization techniques.</p> <p><em>R</em> scripts and additional resources used in this blog post are available on <a href="https://github.com/MarkusThill/MultiDiminsionalViz">GitHub</a> at<br/> <a href="https://github.com/MarkusThill/MultiDiminsionalViz">https://github.com/MarkusThill/MultiDiminsionalViz</a>.</p> <h2 id="introduction">Introduction</h2> <p>In many application areas today, large and high-dimensional datasets with unknown content are frequently generated. To gain insights and uncover essential information hidden within such data, these datasets must be explored systematically and carefully. Often, it is unclear at the outset how to approach unfamiliar and complex data or which tools are best suited for the task. Typically, raw data is presented in textual or tabular form, which can be difficult for most people to interpret and makes it nearly impossible to detect hidden structures.</p> <p>To develop an initial understanding of the data, visual representations can support users in identifying meaningful patterns. However, human perception is limited to a maximum of three spatial dimensions. As a result, data with more than three dimensions must be mapped to lower-dimensional spaces—typically two dimensions—for effective graphical presentation. The challenge lies in preserving as much of the relevant structure as possible during this dimensionality reduction. Choosing a suitable visualization method is therefore a non-trivial task. Users are often faced with a wide range of options, each offering a different perspective on the data and each with its own advantages and disadvantages.</p> <p>Visualization techniques include geometric methods like the well-known <em>scatter plots</em>, pixel-oriented techniques such as <em>dimensional stacking</em> <a class="citation" href="#LeBlancWW90">(LeBlanc et al., 1990)</a>, and icon-based methods like <em>Chernoff-faces</em> <a class="citation" href="#CHERNOFF">(Chernoff, 1973)</a>.</p> <p>In this blog post, we present a geometric-based visualization technique called Parallel Coordinates (hereafter referred to as ||-Coordinates), which was specifically designed to visualize multidimensional and multivariate data <a class="citation" href="#Inselberg85">(Inselberg, 1985)</a>. ||-Coordinates for two dimensions were first described in 1885 by <em>Maurice d’Ocagne</em>, and later rediscovered independently in 1959 by <em>Alfred Inselberg</em>, who was unaware of d’Ocagne’s earlier work (<a class="citation" href="#Inselberg12">(Inselberg, 2012)</a>, p. 16).</p> <p>The core idea of ||-Coordinates is to project high-dimensional datasets into two dimensions \((\mathbb{R}^N \rightarrow \mathbb{R}^2)\) by placing each dimension’s axis in parallel and representing individual samples as polygonal lines. This 2D representation is well suited for visual exploration and pattern recognition, making it easier to identify relationships within the data <a class="citation" href="#Inselberg97">(Inselberg, 1997)</a>.</p> <p>In practice, ||-Coordinates have been successfully used in a variety of fields—for instance, in automatic collision detection and avoidance systems in air traffic control (covered by three U.S. patents), as well as in data mining and optimization tasks <a class="citation" href="#Plemenos2009">(Plemenos &amp; Miaoulis, 2009)</a>.</p> <p>We will make extensive use of ||-Coordinates throughout this blog post, applying the technique to diverse datasets and exploring its specific characteristics.</p> <h2 id="fundamentals-of-parallel-coordinates">Fundamentals of Parallel Coordinates</h2> <h3 id="construction-and-properties">Construction and Properties</h3> <p>Consider an \(N\)-dimensional dataset containing \(k\) observations. The construction of a ||-Coordinates graph for visualizing this data proceeds as follows:</p> <p>Analogous to the <em>Cartesian coordinate system</em>, one individual axis is required for each dimension. Thus, a total of \(N\) axes is created. These axes are arranged in parallel to each other on the plane—typically equally spaced and oriented vertically.</p> <p>More precisely, a ||-Coordinates graph can be interpreted as a collection of parallel \(Y\)-axes embedded within an \(XY\)-Cartesian coordinate system. For the \(i\)-th dimension (out of \(N\) total), the corresponding Y-axis is duplicated and positioned at \(d_i\)—the distance from the origin—along the \(X\)-axis. Typically, the axes are spaced uniformly: \(d_1 = d_2 = \ldots = d\). Each axis in ||-Coordinates is labeled \(\overline{X}_i\).</p> <p>There are \(N - 1\) <em>segments</em> (i.e., regions between adjacent axes). Given \(N\) axes, there are \(\frac{N(N - 1)}{2}\) possible pairs of axes and \(N!\) permutations for the arrangement of all \(N\) axes.</p> <p>A point \(P = (x_1, x_2, \cdots, x_N)\) in \(\mathbb{R}^N\) can be mapped to a polygonal line in ||-Coordinates by connecting the values \(x_i\) on their respective axes \(\overline{X}_i\) using straight lines. A set of \(k\) points will therefore produce \(k\) polygonal lines in the ||-Coordinates graph <a class="citation" href="#Inselberg85">(Inselberg, 1985; Heinrich &amp; Weiskopf, 2013; Inselberg &amp; Dimsdale, 1990)</a>.</p> <p>Inselberg notes that the representational complexity of ||-Coordinates is \(O(N)\), as each additional dimension merely adds one more axis <a class="citation" href="#Inselberg97">(Inselberg, 1997)</a>. While this is true in a structural sense, the ordering of axes plays a crucial role in visual interpretation. Consequently, in many cases, multiple ||-Coordinates plots with different axis orderings must be generated and compared—effectively increasing the cognitive and computational complexity.</p> <p>There are no inherent restrictions on the dimensionality of the data for <em>Parallel Coordinates</em>. In theory, ||-Coordinates can represent data with an infinite number of dimensions. In practice, however, the usable number of dimensions depends on factors such as dataset size, screen resolution, and human perceptual limits. We did not find a clearly defined upper bound in the literature.</p> <h3 id="examples">Examples</h3> <p>The following examples nicely illustrate several important properties of ||-Coordinates. For instance, negatively correlated variables—represented in Cartesian space by a straight line with negative slope—appear as intersecting lines in the ||-Coordinates graph.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/lineMxb_xy-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/lineMxb_xy-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/lineMxb_xy-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/lineMxb_xy.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/lineMxb_pc-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/lineMxb_pc-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/lineMxb_pc-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/lineMxb_pc.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/lineNegMxb_xy-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/lineNegMxb_xy-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/lineNegMxb_xy-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/lineNegMxb_xy.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/lineNegMxb_pc-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/lineNegMxb_pc-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/lineNegMxb_pc-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/lineNegMxb_pc.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <figure> <picture> <source class="responsive-img-srcset" srcset="" sizes="95vw"/> <img src="" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 1:</b> A few examples illustrating the relationship between the <i>Cartesian coordinate system</i> and ||-Coordinates, realized with an <i>R</i>-script (Part 1). <b>Top:</b> A sampled line (a set of points) with a <i>positive</i> slope in the <i>Cartesian coordinate system</i> results in a set of lines in the ||-Coordinates graph that do not intersect in the segment between the two axes. <b>Bottom:</b> A sampled line (a set of points) with a <i>negative</i> slope in the <i>Cartesian coordinate system</i> results in a set of lines in the ||-Coordinates graph that do intersect in the segment between the two axes. Finding a pattern like this in a ||-Coordinates plot is always an indication of negative correlation. </figcaption> </figure> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/cluster_xy-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/cluster_xy-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/cluster_xy-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/cluster_xy.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/cluster_pc-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/cluster_pc-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/cluster_pc-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/cluster_pc.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/rnorm_xy-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/rnorm_xy-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/rnorm_xy-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/rnorm_xy.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/rnorm_pc-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/rnorm_pc-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/rnorm_pc-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/rnorm_pc.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/circle_xy-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/circle_xy-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/circle_xy-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/circle_xy.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/circle_pc-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/circle_pc-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/circle_pc-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/structures/circle_pc.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <figure> <picture> <source class="responsive-img-srcset" srcset="" sizes="95vw"/> <img src="" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 2:</b> A few examples illustrating the relationship between the <i>Cartesian coordinate system</i> and ||-Coordinates, realized with an <i>R</i>-script (Part 2). <b>Top:</b> Clusters in the <i>Cartesian coordinate system</i> can often also be identified in a ||-Coordinates graph. <b>Middle:</b> Normally distributed data produces a characteristic structure in the ||-Coordinates plot, typically forming hyperbolic envelopes. <b>Bottom:</b> Mapping a circle from the <i>XY</i>-plane to a ||-Coordinates graph. In this case, the hyperbolic envelopes in the ||-Coordinates plot are even more pronounced than in the figure above. </figcaption> </figure> <h3 id="point-line-duality">Point-Line Duality</h3> <p>Extensive theoretical work on ||-Coordinates has been conducted by Inselberg <a class="citation" href="#Inselberg85">(Inselberg, 1985; Inselberg &amp; Dimsdale, 1990)</a>, including the concept of <em>point-line duality</em>. At this point, we offer a brief overview: Point-line duality describes the fundamental relationship between points and lines — specifically, that points in the Cartesian coordinate system can be mapped to lines in the parallel-coordinates domain, and vice versa.</p> <p>As mentioned earlier, a set of points in the Cartesian coordinate system is transformed into a set of polygonal lines in ||-Coordinates. For instance, a point \(P = (p_1, p_2)\) in 2D Cartesian space is mapped to a line that connects the point \(y = p_1\) on the \(\overline{X}_1\)-axis with the point \(y = p_2\) on the \(\overline{X}_2\)-axis. Assuming that \(\overline{X}_2\) is placed at \(d_2 = (0, d)\), the resulting line can be described by:</p> \[\begin{equation} y = \frac{p_2 - p_1}{d} x + p_1 , \quad d &gt; 0. \label{ch3:eq:pointToLine} \end{equation}\] <p>It can be shown that a set of points lying on a linear function in Cartesian space (e.g., \(P_\text{we} = (p_1, m \cdot p_1 + b)\)) will result in a family of lines in ||-Coordinates that all intersect at a common point \(\overline{P_s}\):</p> \[\begin{equation} \overline{P_s} = \left( \frac{d}{1 - m}, \frac{b}{1 - m} \right), \quad m \neq 1. \label{ch3:eq:pointToLineIntersec} \end{equation}\] <p>This intersection point corresponds to exactly one line in the \(XY\)-domain, thereby completing the point-line duality theorem. As seen in equation \eqref{ch3:eq:pointToLineIntersec}, if the slope of the sampled linear curve \(\ell\) is \(m &lt; 0\), then the lines \(\overline{\ell_i}\) in the ||-Coordinates system will intersect between the axes \(\overline{X}_1\) and \(\overline{X}_2\). For \(m &gt; 1\), the virtual extensions of all \(\overline{\ell_i}\) intersect to the right of \(\overline{X}_2\), and analogously, for \(0 &lt; m &lt; 1\), to the left of \(\overline{X}_1\). In the special case where \(m = 1\), the resulting set of lines \(\overline{\ell_i}\) will not intersect within the ||-Coordinates plot.</p> <p>Inselberg provides a more detailed treatment of the underlying theory in <a class="citation" href="#Inselberg12">(Inselberg, 2012)</a> (Chapter 3).</p> <h3 id="tasks">Tasks</h3> <p>In general, ||-Coordinates can be applied to a wide range of high-dimensional visualization problems across various application areas. Perhaps the most important purpose of ||-Coordinates is simply to provide a general overview of the visualized data. At a glance, ||-Coordinates can reveal a wealth of information: outliers and other anomalies or patterns can be identified quickly. This initial summary can help guide the user’s data-mining process and suggest directions for further exploration.</p> <p><em>Cluster analysis</em> — the task of finding sets of samples with similar structure — can also be supported by ||-Coordinates. Obvious clusters can often be identified by inspecting individual axes, while clusters in higher dimensions may emerge from line characteristics such as density, proximity, slope, and intersection patterns.</p> <p>Frequently, visual clustering in ||-Coordinates is combined with the search for <em>correlations</em> within the data. ||-Coordinates can reveal many types of correlation; for instance, a strong negative linear correlation typically results in a set of lines intersecting at a single point between two adjacent axes.</p> <p>Moreover, ||-Coordinates can aid in <em>classification</em> tasks, and to some extent in <em>regression</em> tasks as well <a class="citation" href="#Heinrich2013">(Heinrich &amp; Weiskopf, 2013)</a>. One common approach is to color samples from different classes to visually compare their characteristics. This can help identify which attributes best separate the classes — a task not limited to classification, but relevant for general feature selection too. ||-Coordinates can also assist in evaluating or developing classifiers, especially when used interactively in combination with algorithmic classifiers, as proposed in <a class="citation" href="#Yonghong2007">(Xu et al., 2007; Steed et al., 2012)</a>.</p> <p>Finally, ||-Coordinates may be used for <em>verification</em> purposes — potentially in combination with the tasks above — or simply as a reporting tool, even without a specific intention of <em>knowledge discovery</em>.</p> <h3 id="common-issues">Common Issues</h3> <p>Although ||-Coordinates are often a powerful tool for visualizing high-dimensional data, several common issues should be considered. One major challenge is <em>overplotting</em> (often referred to as <em>visual clutter</em>). When visualizing large datasets, the multitude of overlapping lines can obscure important patterns in the plot <a class="citation" href="#Heinrich2013">(Heinrich &amp; Weiskopf, 2013)</a>.</p> <p>Various techniques have been proposed to mitigate visual clutter in ||-Coordinates. One straightforward approach is to (randomly) sample the dataset, which can preserve the most prominent patterns while reducing clutter. However, this method inevitably entails information loss and may lead to data misinterpretation. A number of sampling strategies are discussed in <a class="citation" href="#EllisD06">(Ellis &amp; Dix, 2007)</a>.</p> <p>Other clutter-reduction techniques include:</p> <ul> <li><strong>Brushing</strong>, which allows users to interactively highlight selected observations while dimming or hiding others.</li> <li><strong>Density-based methods</strong>, such as alpha blending, where overlapping lines are rendered with transparency so dense areas appear darker.</li> <li><strong>Aggregation</strong>, e.g., by clustering, to reduce the number of individual lines displayed.</li> <li><strong>Axis-reconfiguration</strong>, which includes reordering or inverting axes to expose structure more clearly.</li> </ul> <p>A comprehensive overview of clutter-reduction methods is available in <a class="citation" href="#Heinrich2013">(Heinrich &amp; Weiskopf, 2013)</a>.</p> <p>Another critical issue is <em>axis ordering</em>. The arrangement of axes in ||-Coordinates has a significant impact on which patterns can be visually perceived. Typically, relationships can only be observed between adjacent axes, so the choice of axis sequence can either reveal or obscure meaningful patterns. For small numbers of dimensions, it may be feasible to try all \(N!\) permutations of the axis order (for \(N\) variables), but this quickly becomes impractical as dimensionality grows. Fortunately, analyzing only pairwise relationships reduces the complexity substantially.</p> <p>The <em>Parallel Coordinates Matrix (PCM)</em> <a class="citation" href="#Heinrich2012">(Heinrich et al., 2012)</a> is one solution that visualizes all pairwise relationships using a compact set of ||-Coordinates plots. Another approach is to use <em>automated axis-ordering algorithms</em> that rank different axis configurations according to correlation or pattern strength, and present the most promising ones to the user <a class="citation" href="#TatuAESTMK09">(Tatu et al., 2009)</a>.</p> <p>A further challenge arises when multiple lines intersect at the exact same point on an axis — a situation that commonly occurs when axes represent discrete variables. In such cases, it becomes ambiguous how to trace individual lines, as multiple continuations are possible. While using distinct colors can help, this approach is only practical for small datasets. More advanced solutions include using curves instead of straight lines, or interactive techniques to isolate and highlight specific samples <a class="citation" href="#Heinrich2013">(Heinrich &amp; Weiskopf, 2013)</a>.</p> <h3 id="related-work-variations-and-extensions-of-parallel-coordinates">Related Work, Variations, and Extensions of Parallel Coordinates</h3> <p>Since the introduction of ||-Coordinates by Inselberg, extensive research has expanded and adapted the technique to address specific challenges, enhance usability, and support diverse application areas such as clustering, classification, and exploratory data analysis.</p> <p>One key direction of this research involves <em>hybrid visualization techniques</em>, which combine parallel coordinates with other methods to leverage their respective strengths and compensate for weaknesses. For instance, in <a class="citation" href="#Yuan2009">(Yuan et al., 2009)</a>, <em>scatter plots</em> and <em>multidimensional scaling</em> are integrated into the parallel coordinates framework. Similarly, Fanea et al. enhance clutter reduction by combining ||-Coordinates with <em>star glyphs</em>. In <a class="citation" href="#Bertini2005">(Bertini et al., 2005)</a>, <em>RadViz</em> is coupled with ||-Coordinates: RadViz is used for brushing, clustering, and coloring, while parallel coordinates visualize the quantitative dimensions of the data.</p> <p>Several efforts extend the original concept to support <em>three-dimensional visualizations</em>. Rübel et al. <a class="citation" href="#Rübel2006">(Rübel et al., 2009)</a> replace traditional axes with scatter plot planes and connect corresponding data points across planes using polygonal lines. In <a class="citation" href="#streit2006">(Streit et al., 2006)</a>, <em>isosurfaces</em> are generated based on data density, providing a volumetric representation that emphasizes high-density regions. Dang et al. <a class="citation" href="#Nhon2010">(Nhon et al., 2010)</a> follow a similar strategy by stacking overlapping graphical elements to alleviate overplotting.</p> <p>While classic ||-Coordinates focus on discrete samples, extensions have also been proposed for continuous data. For example, <a class="citation" href="#Heinrich2009">(Heinrich &amp; Weiskopf, 2009)</a> introduce a density-based model to represent continuous domains in parallel coordinates.</p> <p>As discussed earlier, the <em>Parallel Coordinates Matrix (PCM)</em> <a class="citation" href="#Heinrich2012">(Heinrich et al., 2012)</a> is an important innovation designed to address the axis-ordering challenge. It enables visualization of all pairwise axis relationships using a compact number of parallel coordinate plots. This method builds on graph theory, where each axis is represented as a vertex in a complete graph. Using <em>Hamiltonian decomposition</em>, a set of <em>Hamiltonian paths</em> (for even \(N\)) or <em>Hamiltonian cycles</em> (for odd \(N\)) is computed. A Hamiltonian path visits each vertex exactly once; Hamiltonian cycles extend these paths to form loops. In the axis-ordering context, for odd \(N\), one dimension is added to both ends of each Hamiltonian path to complete the cycle. This technique reduces the number of required plots to visualize all axis-pairs to \(\lfloor \frac{N}{2} \rfloor\).</p> <p>We have implemented the <em>PCM</em> approach in <em>R</em> <a class="citation" href="#RPackage">(R Core Team, 2016)</a>, enabling users to compute Hamiltonian paths and cycles and display the corresponding ||-Coordinates graphs in a compact, structured layout. This method will be used extensively in later parts of this analysis.</p> <h2 id="applications-and-experimental-setup">Applications and Experimental Setup</h2> <p>In this section, we introduce several datasets used to explore the capabilities and limitations of ||-Coordinates. The datasets vary in dimensionality, number of observations, and attribute types. Among them, the <em>Out5d</em> and <em>Pollen</em> datasets have the lowest dimensionality (five attributes each), while the <em>MiniBooNe</em> dataset is the most complex with 51 dimensions. These datasets will be employed for various analytical tasks including classification, clustering, outlier detection, and the identification of patterns and correlations.</p> <p>To support the analysis, we developed custom scripts for generating ||-Coordinates plots and ||-Coordinates Matrix plots (based on the <em>Hamiltonian decomposition</em> technique described in <a class="citation" href="#Heinrich2012">(Heinrich et al., 2012)</a>). These visualizations are implemented in <em>R</em> <a class="citation" href="#RPackage">(R Core Team, 2016)</a>, utilizing the <em>ggplot2</em> package. Although some ||-Coordinates functionality is available in <em>R</em> (e.g., via <em>ggpcp</em>), the default capabilities were insufficient for our requirements. Our implementation includes extended features such as:</p> <ul> <li><strong>Brushing</strong> for highlighting subsets of interest (e.g., clusters),</li> <li><strong>Color-coding</strong> of samples based on class or other attributes,</li> <li><strong>Axis inversion</strong> to reduce clutter (especially helpful for negatively correlated dimensions),</li> <li><strong>Data scaling</strong> for consistent comparison,</li> <li>Intensive use of the <strong>||-Coordinates Matrix</strong> for exploring axis-ordering and pairwise relationships.</li> </ul> <h3 id="the-pollen-dataset">The Pollen Dataset</h3> <p>The <em>Pollen</em> dataset captures geometric features of pollen grains <a class="citation" href="#pollenData">(Coleman, 1986)</a>. It was compiled by David Coleman at RCA Labs (Princeton, USA) in 1986 and served as the American Statistical Association (ASA) Exposition dataset for a data visualization competition. The dataset comprises 3,848 observations with five attributes:</p> <ul> <li><strong>ridge</strong>: feature length in the \(x\)-direction,</li> <li><strong>nub</strong>: feature length in the \(y\)-direction,</li> <li><strong>crack</strong>: feature length in the \(z\)-direction,</li> <li><strong>weight</strong>: the weight of the pollen grain,</li> <li><strong>density</strong>: the density of the grain.</li> </ul> <p>Given its modest dimensionality and visually interesting structure, the <em>Pollen</em> dataset is particularly well-suited for illustrating core concepts of ||-Coordinates. We will use it to demonstrate fundamental features and techniques before applying more complex analyses to higher-dimensional datasets.</p> <h3 id="the-out5d-dataset">The Out5D Dataset</h3> <p>The 5-dimensional <em>Out5d</em> dataset comprises 16,384 observations of remotely sensed data collected in a western region of Australia. The dataset was provided by Peter Ketelaar for Worcester Polytechnic Institute in 2005 <a class="citation" href="#out5d_2005">(Ketelaar, 2005)</a>. Unfortunately, only limited background information is available, though the following details are known: The measurements were taken over a \(128 \times 128\) spatial grid, with each grid cell representing one observation. Each observation contains radiometric information across five attributes:</p> <ul> <li><strong>spot</strong></li> <li><strong>magnetics</strong></li> <li><strong>potassium</strong> (radiometric band)</li> <li><strong>thorium</strong> (radiometric band)</li> <li><strong>uranium</strong> (radiometric band)</li> </ul> <p>Despite the lack of metadata, the <em>Out5d</em> dataset has been used extensively in the literature for pattern detection, clustering, and visualization tasks. It is frequently cited as a benchmark dataset for evaluating high-dimensional visualization techniques. Publications such as <a class="citation" href="#Malik2011">(Malik &amp; Ünlü, 2011; Bertini et al., 2005; Makwana et al., 2012; Zhou et al., 2009; Yu et al., 2012; G. Palmas et al., 2014; Johansson &amp; Cooper, 2008; Artero et al., 2004; Bertini et al., 2006)</a> apply various visualization and analysis strategies to this dataset.</p> <p>We will leverage ||-Coordinates to explore structural patterns in the <em>Out5d</em> dataset and compare our findings with selected results from the above works.</p> <h3 id="the-wine-quality-dataset">The Wine Quality Dataset</h3> <p>The Wine Quality dataset contains a total of \(6497\) samples describing red (1599 samples) and white (4898 samples) <em>Vinho Verde</em> wines from the north-western region <em>Minho</em> of <em>Portugal</em>. The data was collected between May 2004 and February 2007 and is publicly available from the UCI Machine Learning Repository <a class="citation" href="#BacheLichman2013">(Bache &amp; Lichman, 2013)</a>.</p> <p>Each sample is characterized by 12 attributes:</p> <ul> <li>Eleven attributes are based on objective physicochemical laboratory tests:<br/> <em>fixed acidity</em>, <em>volatile acidity</em>, <em>citric acidity</em>, <em>residual sugar</em>, <em>chlorides</em>, <em>free sulfur dioxide</em>, <em>total sulfur dioxide</em>, <em>density</em>, <em>pH</em>, <em>sulphates</em>, and <em>alcohol</em>.</li> <li>The twelfth attribute is <em>quality</em>, a subjective score (ranging from 0 to 10) assigned by three certified wine tasters. Further details can be found in <a class="citation" href="#Cortez2009">(Cortez et al., 2009)</a>.</li> </ul> <p>Our analysis follows the general approach by Cortez et al. <a class="citation" href="#Cortez2009">(Cortez et al., 2009)</a>, seeking relationships between the objective physicochemical properties and the subjective quality ratings. Additionally, we will investigate differences between red and white wines. Identifying such relationships may support quality improvement through purposeful manipulation of controllable variables.</p> <p>While Cortez et al. primarily applied machine learning methods such as Support Vector Machines, multiple regression, and neural networks, we will use ||-Coordinates as our main visual analysis tool to identify structural patterns, correlations, and outliers in the data.</p> <p>Besides <a class="citation" href="#Cortez2009">(Cortez et al., 2009)</a>, several other studies have used this dataset, typically in the context of regression or classification tasks <a class="citation" href="#Appalasamy2012">(Appalasamy et al., 2012; Nachev &amp; Stoyanov, 2012; Lambrou et al., 2012; Dasgupta &amp; Kosara, 2010)</a>.</p> <h3 id="miniboone-particle-identification-dataset">MiniBooNe Particle Identification Dataset</h3> <p>The MiniBooNe dataset (retrieved from <a class="citation" href="#BacheLichman2013">(Bache &amp; Lichman, 2013)</a>) was generated for the <em>MiniBooNe</em> experiment at Fermilab in Batavia, Illinois. The goal of this experiment was to investigate neutrino oscillations <a class="citation" href="#Roe2005">(Roe et al., 2005)</a>. The dataset contains 130,065 observations, each described by 50 numeric attributes. Each sample corresponds to either an electron neutrino or a muon neutrino. For the remainder of this post, we refer to electron neutrinos as <em>signal events</em> and muon neutrinos as <em>background events</em>.</p> <p>The MiniBooNe dataset is the largest used in this blog post — both in terms of the number of observations and dimensionality. In one of the subsequent sections, we will apply ||-Coordinates to this dataset and perform a basic visual classification task, attempting to distinguish <em>signal</em> from <em>background</em> events.</p> <p>Unfortunately, detailed information about the meaning of individual attributes is not publicly available, and we are not aware of any prior publications that apply visualization techniques to this dataset. Therefore, for simplicity, we will label the attributes as <em>V1</em> through <em>V51</em>, where <em>V51</em> denotes the class label (i.e., signal or background).</p> <h2 id="analysis">Analysis</h2> <h3 id="introductory-example-the-pollen-dataset">Introductory Example: The Pollen Dataset</h3> <p>To begin our analysis, we explore the <em>Pollen</em> dataset using ||-Coordinates.</p> <p>As a first step, we generate a basic ||-Coordinates plot of all 3,848 observations without applying any adjustments or parameter tuning (see Fig. 3). Due to the large number of data points, the plot exhibits a high level of overplotting — a common issue in ||-Coordinates visualizations with dense datasets.</p> <p>Despite this visual clutter, the plot already reveals some general characteristics and patterns in the data. For instance, we can see clusters of values and a few dominant trends across axes, offering a rough sense of correlation and spread between variables.</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/pollen/pollen1-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/pollen/pollen1-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/pollen/pollen1-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/pollen/pollen1.png" class="img-fluid rounded z-depth-1 imgcenter" width="80%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 3:</b> ||-Coordinates plot of all observations from the <em>Pollen</em> dataset without any adjustments. Note the significant overplotting, which makes some patterns difficult to discern. </figcaption> </figure> <p>To address the issue of overplotting inherent in classical ||-Coordinates plots, we apply <strong>alpha blending</strong> — a density-based rendering technique that uses transparency to emphasize areas of high point concentration. For this visualization, we set the opacity to \(\alpha = 0.05\). The resulting plot is shown in Fig. 4.</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/pollen/pollen2-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/pollen/pollen2-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/pollen/pollen2-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/pollen/pollen2.png" class="img-fluid rounded z-depth-1 imgcenter" width="80%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 4:</b> ||-Coordinates plot of the <em>Pollen</em> dataset with alpha blending (\(\alpha = 0.05\)) to reduce overplotting. The hyperbolic envelopes suggest approximately normal distributions. However, the central cluster appears unusually dense for purely Gaussian data. </figcaption> </figure> <p>At first glance, the data appears to lack significant outliers. Observations across all five dimensions are centered around zero, and the plot shows characteristic <em>hyperbolic envelopes</em>—a visual hallmark of normally distributed data in ||-Coordinates plots.</p> <p>To confirm this, we inspect the marginal distributions using a density plot (Fig. 5). Each attribute is indeed roughly normally distributed, albeit with varying standard deviations. However, the plot also reveals a consistent anomaly: an unexpected spike in density near the mean of each variable. This anomaly corresponds to the unusually dense central cluster visible in the previous ||-Coordinates plot and may hint at latent structure or subgroups within the dataset.</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/pollen/density-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/pollen/density-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/pollen/density-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/pollen/density.png" class="img-fluid rounded z-depth-1 imgcenter" width="80%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 5:</b> Density plot of the <em>Pollen</em> dataset. All five dimensions exhibit approximately normal distributions. However, an anomalous peak near the mean value suggests hidden structure in the data. </figcaption> </figure> <p>Interestingly, the previous ||-Coordinates plot also shows a small, dense region near zero — a concentration that is atypical for purely normally distributed data. This anomalous cluster may explain the central peak seen in the density plot. To better understand its structure, we zoom into this region and attempt to isolate the cluster.</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/pollen/pollenZoom1-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/pollen/pollenZoom1-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/pollen/pollenZoom1-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/pollen/pollenZoom1.png" class="img-fluid rounded z-depth-1 imgcenter" width="80%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 6:</b> Zoomed view of the center region of the <em>Pollen</em> dataset. The previously identified dense cluster reveals visible structure. Notably, <em>ridge</em> and <em>nub</em> appear positively correlated, while <em>weight</em> and <em>density</em> exhibit negative correlation. Right: Further zoom reveals the underlying cause of the anomaly. </figcaption> </figure> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/pollen/pollenZoom2-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/pollen/pollenZoom2-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/pollen/pollenZoom2-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/pollen/pollenZoom2.png" class="img-fluid rounded z-depth-1 imgcenter" width="80%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 7:</b> Deeper zoom into the ||-Coordinates plot showing the observations from the extracted cluster. The visible patterns indicate intentional structure rather than noise. </figcaption> </figure> <p>Figures 6 and 7 clearly reveal that the cluster contains structured, non-random patterns. Linear relationships between attributes become apparent — for example:</p> <ul> <li><em>Ridge</em> and <em>nub</em> are <strong>positively correlated</strong></li> <li><em>Nub</em> and <em>crack</em>, <em>crack</em> and <em>weight</em>, and <em>weight</em> and <em>density</em> show <strong>negative correlations</strong></li> </ul> <p>Reordering the axes using the ||-Coordinates-Matrix confirms that nearly all attribute pairs exhibit linear relationships within this subset.</p> <p>To investigate further, we generate a <strong>scatter plot matrix</strong> of the extracted cluster. The result unveils a surprising twist: the observations are arranged such that the scatter plots of many attribute pairs spell out the word <strong>“EUREKA”</strong> — as shown in Figure 8 for the pair <em>weight</em> vs. <em>density</em>.</p> <p>This planted structure explains the previously observed anomaly and provides an intriguing example of how synthetic or hidden signals can manifest in high-dimensional data visualizations.</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/pollen/pollenSactter-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/pollen/pollenSactter-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/pollen/pollenSactter-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/pollen/pollenSactter.png" class="img-fluid rounded z-depth-1 imgcenter" width="80%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 8:</b> Further analysis of the extracted cluster finally reveals the secret of the <em>Pollen</em> dataset — a hidden message embedded in the data. </figcaption> </figure> <p>This striking discovery confirms that the dataset was <strong>entirely synthetic</strong>. Both the variable names and the dataset’s title — referencing biological terminology like <em>ridge</em>, <em>nub</em>, <em>crack</em>, and <em>pollen</em> — were deliberately chosen to <strong>mislead</strong> participants into believing the data was biologically meaningful.</p> <p>In reality, the dataset was constructed as a puzzle for the ASA Exposition competition, embedding a hidden message within the data structure to challenge data visualization and analysis techniques. This example demonstrates how deceptive a dataset’s surface characteristics can be — and how powerful visualization techniques like ||-Coordinates can uncover underlying truths.</p> <h3 id="the-out5d-dataset-1">The OUT5D Dataset</h3> <p>In this section, we apply ||-Coordinates to the <em>Out5d</em> dataset to explore potential patterns and correlations within the data.</p> <p>We begin by generating a basic ||-Coordinates plot without any parameter adjustments:</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/out5d/out5d_1-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/out5d/out5d_1-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/out5d/out5d_1-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/out5d/out5d_1.png" class="img-fluid rounded z-depth-1 imgcenter" width="80%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 9:</b> A classical ||-Coordinates plot of the <em>Out5d</em> data without any further adjustments or parameter-settings leads to a high degree of over-plotting. </figcaption> </figure> <p>As expected, the plot suffers from heavy overplotting due to the dataset’s size (16,384 observations), making it difficult to extract meaningful insights at first glance. Nevertheless, a few basic characteristics are apparent:</p> <ul> <li>All values are non-negative.</li> <li>The maximum values for the first three axes (<em>spot</em>, <em>magnetics</em>, and <em>potassium</em>) are around 255 — the output of R’s <code class="language-plaintext highlighter-rouge">summary()</code> function confirms this, suggesting that 8-bit (byte) variables were used to store the data.</li> <li>No clear outliers are visible in this initial rendering.</li> <li>There appears to be a region of higher density on the <em>magnetics</em> and <em>potassium</em> axes, potentially indicating negative correlation for some observations. However, due to the visual clutter, this is merely a hypothesis at this stage and requires deeper investigation using enhanced visualization techniques.</li> </ul> <p>To reduce the visual clutter in the previous ||-Coordinates plot, we apply <em>alpha blending</em> with a transparency value of \(\alpha = 0.01\):</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/out5d/out5d_alpha0_01-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/out5d/out5d_alpha0_01-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/out5d/out5d_alpha0_01-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/out5d/out5d_alpha0_01.png" class="img-fluid rounded z-depth-1 imgcenter" width="80%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 10:</b> Applying <em>alpha blending</em> to the plot with \(\alpha=0.01\) reduces the visual clutter and first patterns in the data are visible. </figcaption> </figure> <p>The applied transparency significantly reduces overplotting and makes underlying patterns more discernible. However, a certain amount of clutter still persists.</p> <p>One technique to further declutter ||-Coordinates plots—especially useful when dealing with negative correlations—is axis inversion. This reduces the number of intersecting lines and helps clarify relationships between variables. We apply this technique by inverting the <em>magnetics</em> axis, which already showed signs of potential negative correlation with other attributes.</p> <p>The resulting plot is shown in Figure 11:</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/out5d/out5d_invMag-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/out5d/out5d_invMag-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/out5d/out5d_invMag-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/out5d/out5d_invMag.png" class="img-fluid rounded z-depth-1 imgcenter" width="80%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 11:</b> ||-Coordinates plot of the <em>Out5d</em> dataset with inverted <em>magnetics</em> axis. The plot already reveals some patterns in the data. On the <em>magnetics</em> axis we can see many observations with a value higher than 250 and lower than 100. Also for <em>potassium</em> a large number of records reach the maximum value of 255. Furthermore, a negative correlation between <em>magnetics</em> and <em>potassium</em> is apparent. Other correlations can be spotted easily as well. </figcaption> </figure> <p>After inversion, clearer patterns emerge:</p> <ul> <li>The <em>magnetics</em> axis shows a bimodal distribution, with clusters above 250 and below 100.</li> <li>The <em>potassium</em> axis reveals a notable saturation at its maximum value (255), suggesting potential sensor clipping or quantization.</li> <li>A strong negative correlation between <em>magnetics</em> and <em>potassium</em> becomes visible.</li> <li>Additional inter-attribute correlations begin to emerge, warranting further inspection.</li> </ul> <p>On the <em>magnetics</em> axis, we observe two prominent concentration regions: one above 250 and another below 100. For <em>potassium</em>, many records reach the maximum value of 255, which supports the earlier assumption that the dataset uses byte-encoded variables.</p> <p>As previously suspected, there appears to be a negative correlation between <em>magnetics</em> and <em>potassium</em>—records with high <em>magnetics</em> values tend to correspond to lower <em>potassium</em> values. Interestingly, while high <em>magnetics</em> values seem to align with low <em>spot</em> values, low <em>magnetics</em> values distribute more evenly across the <em>spot</em> axis, suggesting a more complex relationship.</p> <p>More generally, records with extreme <em>magnetics</em> values (both high and low) can be somewhat separated in the other radiometric dimensions (<em>potassium</em>, <em>thorium</em>, and <em>uranium</em>), indicating the presence of potentially meaningful clusters.</p> <p>To further explore these structures, we apply brushing to highlight and isolate three different sample groups in the ||-Coordinates plot with the inverted <em>magnetics</em> axis:</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/out5d/out5d_Cluster1-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/out5d/out5d_Cluster1-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/out5d/out5d_Cluster1-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/out5d/out5d_Cluster1.png" class="img-fluid rounded z-depth-1 imgcenter" width="80%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 12:</b> Brushing three sets of samples in the ||-Coordinates plot for the <em>Out5d</em> dataset with inverted <em>magnetics</em> axis. In the area around 100 (real value: 155) on the <em>magnetics</em> axis, a higher concentration of observations was found and brushed with black. Another cluster is found when brushing high values of <em>potassium</em> (blue). High <em>magnetics</em> values (red brushed samples) generally lead to fairly low values on the <em>potassium</em> axis, however, the relation is not as clear as for the blue samples. </figcaption> </figure> <p>The brushing reveals:</p> <ul> <li><strong>Black group</strong>: Observations centered around a mid-range <em>magnetics</em> value (~155). These appear to form a dense cluster, possibly indicating a dominant geophysical signature.</li> <li><strong>Blue group</strong>: Samples with high <em>potassium</em> values. These also show distinct behavior in other dimensions, forming a relatively consistent cluster.</li> <li><strong>Red group</strong>: Records with high <em>magnetics</em> values, generally showing low <em>potassium</em> levels—though this relation is weaker than in the blue group.</li> </ul> <p>This analysis suggests that <em>Out5d</em> contains internal structure and subgroups, which could reflect different geological zones or material compositions across the scanned area.</p> <p>To be more precise (according to the figure above), a negative correlation between <em>magnetics</em> and <em>potassium</em> is clearly visible, though it exhibits certain nuances. Specifically, high <em>potassium</em> values tend to correspond to low <em>magnetics</em> values, and conversely, high <em>magnetics</em> values generally align with relatively low <em>potassium</em> values. However, this relationship is not symmetric: while high <em>potassium</em> strongly implies low <em>magnetics</em>, low <em>potassium</em> values are more broadly distributed across the <em>magnetics</em> axis and do not necessarily imply high <em>magnetics</em> values.</p> <p>A dense cluster of observations can be found around the value 100 on the (inverted) <em>magnetics</em> axis — which corresponds to an actual value of 155. We count approximately 1300 records in the range \([155, 170]\), in contrast to only around 340 records in the range \([135, 150]\). These mid-range <em>magnetics</em> observations, along with two other subsets, are highlighted in Figure 12 using brushing.</p> <p>Notably, most of the black-brushed samples (centered around <em>magnetics</em> = 155) cluster not only on the <em>magnetics</em> axis but also align closely in the remaining four dimensions — with the exception of <em>spot</em>. Similarly, the blue-brushed samples (with high <em>potassium</em>) form a fairly compact and well-separated cluster. The red samples (high <em>magnetics</em>) are more spread out in their other dimensions, suggesting weaker or more complex dependencies.</p> <p>To gain deeper insight into the inter-variable relationships, we employ the so-called ||-Coordinates-Matrix (<em>PCM</em>). The <em>PCM</em> visualizes all pairwise attribute combinations using multiple ||-Coordinates plots. Since <em>Out5d</em> consists of five attributes, only two such plots are needed to display all pairwise relations.</p> <p>To construct these plots systematically, we compute all <em>Hamiltonian paths</em> on the complete graph with \(N=4\) vertices (ignoring one attribute temporarily). Then, the fifth attribute is appended to both the start and end of each row in the matrix to form a complete <em>Hamiltonian cycle</em>. This ensures all pairwise combinations are displayed at least once. For the <em>Out5d</em> dataset, exactly two such Hamiltonian cycles are possible:</p> \[\begin{equation} H = \begin{pmatrix} d_5 &amp; d_1 &amp; d_2 &amp; d_4 &amp; d_3 &amp; d_5 \\ d_5 &amp; d_2 &amp; d_3 &amp; d_1 &amp; d_4 &amp; d_5 \end{pmatrix} \label{ch5:eq:hamiltonianOUTfD} \end{equation}\] <p>Using this matrix, it is possible to visualize all pairwise relationships among the five attributes of the <em>Out5d</em> dataset with just two ||-Coordinates plots.</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/out5d/out5d_PCM1-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/out5d/out5d_PCM1-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/out5d/out5d_PCM1-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/out5d/out5d_PCM1.png" class="img-fluid rounded z-depth-1 imgcenter" width="80%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/out5d/out5d_PCM2-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/out5d/out5d_PCM2-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/out5d/out5d_PCM2-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/out5d/out5d_PCM2.png" class="img-fluid rounded z-depth-1 imgcenter" width="80%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 13:</b> ||-Coordinates-Matrix of the <em>Out5d</em> dataset. Two ||-Coordinates plots are sufficient to display all pairwise relations between the five dimensions. The attribute <em>uranium</em> appears twice in each plot to complete the <em>Hamiltonian cycles</em>. Note that the <em>magnetics</em> axis is inverted. </figcaption> </figure> <p>The ||-Coordinates-Matrix reveals several additional patterns in the <em>Out5d</em> dataset. For example, the pairwise relationship between <em>uranium</em> and <em>magnetics</em> uncovers structures that were previously less apparent. Similarly, a noteworthy relation between <em>potassium</em> and <em>uranium</em> emerges, which was not observed in earlier visualizations.</p> <p>Many of the clusters previously identified in <a class="citation" href="#palmas14a">(G. Palmas et al., 2014)</a> — though limited to a subset of attribute combinations — are also clearly visible in our ||-Coordinates-Matrix. In <a class="citation" href="#Malik2011">(Malik &amp; Ünlü, 2011)</a>, Malik and Ünlü use Parallel Coordinates to describe a strong negative correlation between <em>magnetics</em> and <em>potassium</em>, a finding that is confirmed in our analysis. Furthermore, <a class="citation" href="#Bertini2005">(Bertini et al., 2005)</a> combine ||-Coordinates with <em>Radviz</em> (Radial Visualization) and identify clusters where low values of <em>thorium</em>, <em>potassium</em>, and <em>uranium</em> correspond to high <em>magnetics</em> values — and vice versa, a cluster with high <em>uranium</em> and <em>potassium</em> but low <em>magnetics</em>. Our plots support these findings as well.</p> <p>Although the <em>Out5d</em> dataset serves primarily to illustrate key features of ||-Coordinates in this example, the structure of the data hints at potentially anomalous records. As also noted by <a class="citation" href="#Malik2011">(Malik &amp; Ünlü, 2011)</a>, both <em>magnetics</em> and <em>potassium</em> contain about 20% of observations at the maximum value of 255. While this is not inherently problematic, the lack of detailed metadata about the dataset warrants caution when interpreting these values.</p> <p>In each row of the ||-Coordinates-Matrix, the attribute <em>uranium</em> appears twice — once at the beginning and again at the end of the sequence. This ensures that all pairwise relationships are properly represented within the constraints of the Hamiltonian cycles used to build the matrix.</p> <p>The <em>Out5d</em> dataset has been analyzed in several previous publications. Here, we briefly compare findings from those studies with the insights presented in this blog post. For a more comprehensive overview, refer to the citations mentioned earlier.</p> <p>Many of the clusters identified in <a class="citation" href="#palmas14a">(G. Palmas et al., 2014)</a> — although limited in scope due to not covering all attribute combinations — are clearly visible in our ||-Coordinates-Matrix. In <a class="citation" href="#Malik2011">(Malik &amp; Ünlü, 2011)</a>, Malik and Ünlü describe a strong negative correlation between <em>magnetics</em> and <em>potassium</em>, which is also evident in our visualizations. They further report the presence of individual outliers across multiple dimensions.</p> <p>In <a class="citation" href="#Bertini2005">(Bertini et al., 2005)</a>, the authors enhance ||-Coordinates with <em>Radviz</em> to aid the clustering process. Their findings show that low values in <em>thorium</em>, <em>potassium</em>, and <em>uranium</em> often correspond to high values in <em>magnetics</em>. Conversely, they observe a cluster characterized by high <em>uranium</em> and <em>potassium</em> values paired with low <em>magnetics</em>. These patterns are consistent with what is observed in our ||-Coordinates-Matrix (see Fig. 13), reinforcing the value of this visualization technique in uncovering meaningful structures in multidimensional data.</p> <h3 id="the-wine-quality-dataset-1">The Wine Quality Dataset</h3> <p>Following the previous methodology, we now explore the <em>Wine Quality</em> dataset using ||-Coordinates plots. The main objective is to detect patterns in the data that relate to wine quality — for both red and white wines — and to uncover the most prominent differences between them.</p> <p>Given the large number of observations, visualizing the entire dataset (even when separated into red and white wine subsets) using standard ||-Coordinates plots is not advisable, as it would result in a high degree of overplotting. As a first countermeasure, alpha-blending is applied to reduce visual clutter and gain a more interpretable overview.</p> <p>However, simply applying alpha-blending is not sufficient. The default column ordering does not optimize readability, so the plot remains somewhat cluttered. By leveraging the ||-Coordinates-Matrix (<em>PCM</em>) to find more effective axis orderings and inverting certain axes, the clutter can be further reduced. In total, six ||-Coordinates plots are required to fully represent all pairwise relationships in the dataset.</p> <p>To improve the distribution and legibility of the lines, we also remove a small number of extreme outliers from the dataset. Specifically, 31 samples are removed from the white wine dataset and 17 from the red wine dataset. These removed samples do not belong to the best- or worst-rated wines and thus do not affect the key quality groups.</p> <p>Figure 14 shows the resulting plot for the white wine dataset. It provides an informative first overview of the data, including the range of values, emerging clusters, and other notable structures. A similar approach is applied to the red wine dataset. However, detailed insights about wine quality are still limited: very few white wines received a quality rating of 9, and no red wines achieved that score. Conversely, poor-quality wines are also rare, with the lowest ratings being 3 for both red and white wines.</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/wine/whiteOrderedInv-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/wine/whiteOrderedInv-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/wine/whiteOrderedInv-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/wine/whiteOrderedInv.png" class="img-fluid rounded z-depth-1 imgcenter" width="80%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 14:</b> ||-Coordinates plot of the white wine dataset with 4,866 samples. A total of 31 extreme outliers were removed to enhance readability. Using the ||-Coordinates-Matrix and manual axis inversion, visual clutter was minimized. Note that some axes are inverted — their maximum values appear at the bottom of the plot. At this stage, it remains difficult to draw clear conclusions about the <em>quality</em> of the wines from the plot alone. </figcaption> </figure> <p>In order to better understand how the objective attributes influence wine <em>quality</em>, we implement a coloring scheme in our <em>R</em>-based ||-Coordinates plot. Each sample is colored according to its assigned <em>quality</em> using a heat-based color model: low-quality wines are shown in yellow, while high-quality wines appear in red. This color gradient helps visualize quality-related patterns across the dataset.</p> <p>As before, we refine the plot by selecting a suitable axis configuration using the ||-Coordinates-Matrix and inverting specific axes to minimize clutter. Additionally, directly comparing the best and worst wines—by brushing the respective subsets—within a ||-Coordinates plot can reveal broader correlations between <em>quality</em> and the chemical properties of the wines.</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/wine/whiteBestWorst-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/wine/whiteBestWorst-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/wine/whiteBestWorst-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/wine/whiteBestWorst.png" class="img-fluid rounded z-depth-1 imgcenter" width="80%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/wine/redBestWorst-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/wine/redBestWorst-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/wine/redBestWorst-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/wine/redBestWorst.png" class="img-fluid rounded z-depth-1 imgcenter" width="80%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 15:</b> <b>Top:</b> ||-Coordinates plot showing the best and worst <em>white wines</em>. Only samples with a quality of \(3,4,8,\) and \(9\) are visualized. <b>Bottom:</b> Analogous plot for <em>red wines</em>, displaying only samples with a quality of \(3,4,7,\) and \(8\). </figcaption> </figure> <p>To better explore how individual attributes influence wine <em>quality</em>, the most relevant variables — such as <em>alcohol</em>, <em>density</em>, and <em>volatile acidity</em> — are positioned closest to the <em>quality</em> axis. The resulting ||-Coordinates plot for the white wine dataset is shown below.</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/wine/plot2_4-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/wine/plot2_4-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/wine/plot2_4-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/wine/plot2_4.png" class="img-fluid rounded z-depth-1 imgcenter" width="80%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 16:</b> Samples from the white wine dataset are color-coded by <em>quality</em> using a heatmap gradient. Attributes believed to have the strongest influence on <em>quality</em> (e.g., <em>alcohol</em>, <em>density</em>, and <em>volatile acidity</em>) are placed closest to the <em>quality</em> axis. Several axes were inverted to reduce clutter and improve readability. </figcaption> </figure> <p>We identified the attributes <em>alcohol</em>, <em>density</em>, and <em>volatile acidity</em> (in descending order) as the most important for predicting <em>quality</em> in the white wine dataset. Generally, white wines with higher <em>alcohol</em> content tend to have higher <em>quality</em> ratings. For instance, the average <em>alcohol</em> concentration among wines rated 7 or higher is approximately <strong>11.5%</strong>, whereas wines rated 5 or lower average around <strong>9.8%</strong> — a notable difference given the full range of <em>alcohol</em> values is $[8\%, 14.2\%]$.</p> <p>The second most influential attribute is <em>density</em>. Wines with lower <em>density</em> — which often correlates with higher <em>alcohol</em> content — are typically rated higher in quality. (Note: the <em>density</em> axis is inverted in Figure 16.) A similar pattern is visible with <em>volatile acidity</em>: lower values generally correspond to higher-quality wines, although the correlation is not as pronounced as with <em>alcohol</em> and <em>density</em>.</p> <p>The ||-Coordinates plot also reveals several additional insights. For example, while <em>sulphates</em> does not appear globally important, wines with high <em>sulphates</em> concentrations (greater than <strong>0.75 g/dm³</strong>) are mostly associated with higher quality. Another clear pattern is the <strong>negative correlation between <em>pH</em> and <em>fixed acidity</em></strong> — higher <em>fixed acidity</em> corresponds to lower <em>pH</em> values, which is chemically plausible. (The <em>fixed acidity</em> axis is also inverted.) A similar, albeit weaker, effect is observed between <em>citric acid</em> and <em>pH</em>.</p> <p>Interestingly, our findings differ somewhat from those of Cortez et al. <a class="citation" href="#Cortez2009">(Cortez et al., 2009)</a>, who identified <em>sulphates</em> as the most important attribute, followed by <em>alcohol</em>, <em>residual sugar</em>, and <em>citric acid</em>. This discrepancy is likely due to their use of <em>Support Vector Machines</em> for regression, which rely on different importance measures than visual analysis. In contrast, Nachev and Stoyanov <a class="citation" href="#Nachev2012">(Nachev &amp; Stoyanov, 2012)</a> — using symmetrical uncertainty — ranked <em>alcohol</em>, <em>density</em>, and <em>chlorides</em> as the top predictors. Our own <em>Random Forest</em> model supports the visual findings and highlights <em>alcohol</em>, <em>density</em>, and <em>volatile acidity</em> as the most relevant attributes.</p> <p>For the red wine dataset (Figure 17), <em>alcohol</em> once again stands out as the most influential factor on wine <em>quality</em> — higher <em>alcohol</em> content clearly correlates with better quality ratings. Unlike the white wines, however, <em>density</em> does not provide meaningful insight into red wine quality. Instead, <em>sulphates</em> emerge as a more informative attribute: higher concentrations are associated with better-rated red wines.</p> <p>Another notable pattern is that poorly rated red wines tend to exhibit <strong>low <em>citric acidity</em></strong> and <strong>high <em>volatile acidity</em></strong>, while higher-quality wines show the opposite trend — higher <em>citric acidity</em> and lower <em>volatile acidity</em>.</p> <p>As with the white wines, a <strong>negative correlation</strong> is observed between <em>pH</em> and <em>fixed acidity</em>, as well as between <em>pH</em> and <em>citric acidity</em>, reinforcing the inverse chemical relationship between acidity and pH levels in the dataset.</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/wine/redColored1-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/wine/redColored1-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/wine/redColored1-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/wine/redColored1.png" class="img-fluid rounded z-depth-1 imgcenter" width="80%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 17:</b> Coloring the samples of the red wine dataset according to their <em>quality</em>. A high <em>alcohol</em> concentration again appears to have the strongest impact on wine <em>quality</em>. In contrast to white wines, <em>density</em> is less informative for red wine quality, while <em>sulphates</em> seem to be more relevant. </figcaption> </figure> <p>Finally — as the last step in this section — we investigate the main differences between red and white wines. The ||-Coordinates plot comparing both wine types is shown in Figure 18. The differences between red and white wines are easily recognizable. For example, the amount of <em>total sulfur dioxide</em> is noticeably lower in red wines compared to white wines. In addition, red wines generally contain less <em>residual sugar</em> and <em>free sulfur dioxide</em>. Differences across most other attributes can also be observed. Based on visual inspection, the attributes <em>total sulfur dioxide</em>, <em>residual sugar</em>, and <em>free sulfur dioxide</em> appear to be the most relevant for distinguishing between red and white wines.</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/wine/compareBoth-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/wine/compareBoth-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/wine/compareBoth-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/wine/compareBoth.png" class="img-fluid rounded z-depth-1 imgcenter" width="80%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 18:</b> Comparison of red and white wines, with blue curves representing samples from the white wine dataset. Several key differences between the two wine types are apparent. For example, <em>total sulfur dioxide</em> levels are significantly lower in red wines compared to white wines. Additionally, most white wines have higher concentrations of <em>residual sugar</em> and <em>free sulfur dioxide</em>. Other differences across various attributes are also clearly visible. Note that a few axes have been inverted to reduce visual clutter and improve readability. </figcaption> </figure> <h3 id="the-miniboone-particle-identification-dataset">The MiniBooNe Particle Identification Dataset</h3> <p>The <em>MiniBooNe</em> dataset is the final dataset we analyze using <em>Parallel Coordinates</em>. It has the highest number of observations (130,065) and dimensions (50, excluding the class label), which makes processing particularly challenging — both for the techniques used and for the available hardware. Our <em>R</em> implementation of ||-Coordinates struggles with this large volume of records; generating a single plot takes an impractically long time.</p> <p>To address this, we randomly sample the dataset to reduce the number of observations. Unless otherwise stated, we use a sample size of 20,000 records.</p> <p>The <em>MiniBooNe</em> dataset includes 36,499 <em>signal events</em> and 93,565 <em>background events</em>, making it highly imbalanced. A random sample would inherit this imbalance unless explicitly corrected. Since we aim to give equal weight to both classes, we randomly select 10,000 instances from each class for further analysis.</p> <div class="row mt-3"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/plot1_1-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/plot1_1-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/plot1_1-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/plot1_1.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="row mt-3"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/plot1_2-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/plot1_2-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/plot1_2-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/plot1_2.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 19:</b> Initial ||-Coordinates plot of the <em>MiniBooNe Particle Identification</em> dataset. Due to the high number of dimensions the plot was split into two rows. The class-information is not shown in this figure. Nevertheless, we can get a first impression of the data. </figcaption> </figure> </div> <p>A first ||-Coordinates plot of the selected 20,000 observations reveals that many attributes contain a minimum value of \(-999\). These likely represent missing or invalid entries. In total, 468 such records are found and removed from the dataset. Additionally, we automatically filter out extreme outliers—amounting to no more than 1% of the data—to improve the readability of the plot.</p> <p>An updated ||-Coordinates plot, now containing all 50 attributes, is shown in Figure 20. Despite the large number of observations and dimensions, many patterns in the data begin to emerge. We gain a first overview of the value ranges across all attributes; many of them appear to follow a roughly normal distribution.</p> <p>Looking more closely at the segment between <em>V38</em> and <em>V39</em>, we observe a typical hyperbolic shape—indicative of two normally distributed variables. Beyond that, other patterns become apparent: attributes such as <em>V1</em> and <em>V17</em> seem to offer good class-separation, whereas attributes like <em>V34</em>, <em>V41</em>, and <em>V50</em> do not appear useful for distinguishing between classes.</p> <p>We also notice varying data densities across different regions of the plot. For instance, <em>signal events</em> are widely dispersed between <em>V15</em> and <em>V17</em>, while <em>background events</em> appear more concentrated. In this region, several correlations among adjacent variables are visible: <em>V16</em> and <em>V17</em> seem positively correlated, while <em>V31</em> and <em>V32</em> exhibit a negative correlation.</p> <div class="row mt-3"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/plot0_1-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/plot0_1-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/plot0_1-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/plot0_1.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="row mt-3"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/plot0_2-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/plot0_2-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/plot0_2-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/plot0_2.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 20:</b> Initial ||-Coordinates plot of the <em>MiniBooNe</em> dataset showing all dimensions with in total 20,000 samples (10,000 <em>signal events</em> (red) and another 10,000 <em>background events</em> (blue)). The plot already reveals a few patterns in the dataset e.g., a few attributes separate both classes quite well, such as <em>V1</em> or <em>V17</em>. Many clusters can be found as well as regions with large spread of the data (for instance <em>signal events</em> are spread widely and <em>background events</em> are clustered between <em>V15</em> and <em>V17</em>). </figcaption> </figure> </div> <p>As mentioned earlier, not all 50 attributes appear suitable for (visual) classification. In the following, we aim to identify the most significant variables and focus our analysis on them. Figure 21 presents a ||-Coordinates plot containing only those attributes which, after extensive experimentation—including axis reordering and inversion—we found most effective for distinguishing between <em>signal events</em> and <em>background events</em>. In total, 13 attributes were selected, and the most informative configuration was determined using the ||-Coordinates-Matrix.</p> <p>A first qualitative assessment suggests that variable <em>V1</em> offers the strongest class-separation, followed by <em>V17</em> and <em>V16</em>. Interestingly, all three are also ranked among the top five most important features according to a <em>Random Forest</em> model. Additionally, <em>V3</em> appears to have useful class-separating properties, although the majority of samples are concentrated in the lower value range on its axis.</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/plot3-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/plot3-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/plot3-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/plot3.png" class="img-fluid rounded z-depth-1 imgcenter" width="80%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 21:</b> ||-Coordinates plot for a selection of attributes of the <em>MiniBooNe</em> dataset. Again, \(20,000\) samples are plotted – <em>signal events</em> in red and <em>background events</em> in blue. The attributes were selected based on their class-separating characteristics and ordering of the chosen variables was done with the help of the ||-Coordinates-Matrix; additionally a few axes were inverted. </figcaption> </figure> <p>Although ||-Coordinates is primarily a visualization technique and not typically used for direct classification, the human ability to detect relationships and patterns in visualized data makes it a valuable tool for evaluating, adjusting, and verifying algorithmic classification approaches. It is even conceivable to incorporate geometric features—such as the slope or proximity of polygonal lines—into the design and support of classification algorithms.</p> <p>By integrating such geometric characteristics as additional decision variables, classification models like decision trees could potentially be enhanced. For example, the slope of a polygonal line across certain segments might serve as a better class-separating feature than the raw attribute values themselves.</p> <p>Based on our visual analysis so far, we propose a simple, intuitive classifier. Its structure and behavior are illustrated in the figures below:</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/classify2-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/classify2-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/classify2-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/classify2.png" class="img-fluid rounded z-depth-1 imgcenter" width="80%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 22:</b> Illustration of a simple visual classifier for the <em>MiniBooNe</em> dataset, visualized with ||-Coordinates using a total of 8 out of the 50 attributes. One observation from the class <em>background events</em> (blue) and one from the class <em>signal events</em> (red) is shown. The classification process can be described as follows: highlight — for example, using class-specific colors — certain value ranges on individual axes that predominantly contain samples of a specific class. A new observation is then classified by counting how many of these highlighted ranges it intersects for each class. The class with the most intersections is assigned to the observation. In this figure, the blue-colored observation crosses one red-highlighted range on the <em>V2</em> axis and six blue-highlighted ranges — making it very likely a <em>background event</em>. </figcaption> </figure> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/classify1-480.webp 480w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/classify1-800.webp 800w,/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/classify1-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-31-visualizing-high-dimensional-data-with-parallel-coordinates/MiniBooNe/classify1.png" class="img-fluid rounded z-depth-1 imgcenter" width="80%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 23:</b> A simple classifier for the <em>MiniBooNe</em> dataset, visualized using ||-Coordinates with 8 out of the 50 attributes. The figure shows a sample of 1,000 observations that were correctly classified using this basic method. <em>Signal events</em> are shown in red, <em>background events</em> in blue. Overall, approximately \(70\%\) of the 130,064 samples could be classified correctly, while about \(8\%\) were misclassified and \(22\%\) remained unclassified. </figcaption> </figure> <h2 id="discussion-and-conclusion">Discussion and Conclusion</h2> <p>In this blog post, we presented ||-Coordinates, a visualization technique developed by Alfred Inselberg for analyzing multidimensional and multivariate data. We discussed the fundamental properties of ||-Coordinates and applied the method to several datasets varying in dimensionality, number of attributes, and attribute characteristics, in order to explore its strengths and limitations.</p> <p>While designing a (visual) classifier using parallel coordinates is not straightforward, future research could explore how geometric features of ||-Coordinates — such as the slope and proximity of the polygonal lines — might be used to support or enhance traditional classification algorithms.</p> <p>As a case study, we analyzed a dataset containing around 6,500 Portuguese red and white wines. Each wine is described by 11 objective attributes (e.g., alcohol content, pH, density), along with a 12th attribute: <em>quality</em>, as assessed by wine tasters.</p> <p>We began our exploration with the <em>Pollen</em> dataset, which served as an introductory example. With standard ||-Coordinates, insights were limited due to heavy overplotting from the high number of observations. However, once alpha blending was introduced, a clear cluster emerged. Visualizing this cluster in a scatter plot ultimately revealed the hidden structure of the data.</p> <p>Overall, ||-Coordinates prove to be a powerful tool for gaining visual intuition about complex datasets, particularly when enhanced with interactive or perceptual techniques such as axis reordering, inversion, or transparency.</p> <p>The second dataset we analyzed was the <em>Out5d</em> dataset. While its number of dimensions is relatively small and easily handled by ||-Coordinates, the large number of observations (16,384 in total) presented a challenge. Once again, alpha blending proved effective in mitigating the overplotting problem and reducing visual clutter. This example also highlighted the usefulness of the ||-Coordinates-Matrix for identifying patterns or clusters within the data, offering more informative and diverse perspectives.</p> <p>The main task for the <em>wine-quality</em> dataset, our third example, was to explore the relationship between 11 objective attributes and the subjective wine quality rating. In addition to alpha blending and axis reordering, we found that axis inversion can be a powerful tool for reducing clutter—especially in the presence of negative correlations. By applying a heat-based color scheme based on wine quality, we were able to visually assess the influence of specific attributes on the overall quality of the wines.</p> <p>The final dataset we explored—the <em>MiniBooNe</em> particle identification dataset—featured the highest dimensionality (51 attributes) and the largest number of observations (over 130,000) of all our examples. Due to computational constraints, we limited our analysis to a random subset of 20,000 samples. Because finding meaningful patterns among all 50+ attributes was difficult, we reduced the attribute space to the 13 most promising features, based on their visual class-separating properties. After reordering and inverting axes as needed, we were able to generate a configuration that provided a clear separation between the two target classes.</p> <p>Overall, we found ||-Coordinates to be a suitable and helpful tool for data-mining tasks—provided it is applied thoughtfully and adapted to the specific dataset. One of the key advantages of this technique is its <strong>interpretability</strong>: although it is based on a complex underlying theory, ||-Coordinates can be easily applied and understood, even by users with limited experience.</p> <p>One recurring issue we faced, particularly with larger datasets, was <strong>overplotting</strong>—where too many overlapping lines obscure important patterns. To mitigate this, we used a density-based technique known as <strong>alpha blending</strong>, which introduces transparency and helps make clusters and other structures visible.</p> <p>In our experience, ||-Coordinates often revealed <strong>relationships</strong>—such as linear correlations or normal distributions (indicated by hyperbolic envelopes)—more clearly than other visualization techniques like heatmaps or dimensional stacking. For example, in the <em>Pollen</em> dataset, which contained mostly random noise, the method still uncovered structured patterns. However, we also occasionally <strong>misinterpreted correlations</strong>, especially negative ones. These false assumptions were often corrected by <strong>inverting</strong> the corresponding axis, which negates the slope of the polygonal lines in that segment and can significantly reduce clutter.</p> <p>As with dimensional stacking, <strong>axis configuration</strong> plays a critical role in revealing patterns. To address this, we introduced the <strong>||-Coordinates-Matrix</strong>, which allows users to examine all pairwise relationships between attributes using a relatively small number of plots.</p> <p>Once a suitable axis configuration was identified, ||-Coordinates proved to be a powerful tool for identifying <strong>clusters across multiple dimensions</strong>, leveraging features such as line proximity, slope, and density. In this regard, it outperformed both heatmaps and dimensional stacking, which were less effective for clustering.</p> <p>Unlike heatmaps—where color is already used to represent values—||-Coordinates offer the flexibility to use color for <strong>additional layers of information</strong>, such as class labels or quality scores.</p> <p>Despite its advantages, our implementation of ||-Coordinates could not handle extremely large datasets efficiently. For instance, we had to <strong>sample</strong> the <em>MiniBooNe</em> dataset, whereas dimensional stacking could display all observations (albeit limited to around 10 dimensions). Nevertheless, when comparing plots generated from different sample sizes, we found that the <strong>main structures were preserved</strong>, suggesting that ||-Coordinates is a <strong>robust</strong> visualization technique.</p> <p>Another challenge we encountered was the <strong>handling of outliers</strong>. While they are easy to detect in ||-Coordinates, they can distort the scale and compress the majority of data into a narrow region, making interpretation difficult. This limitation also applies to heatmaps and dimensional stacking.</p> <p>In summary, when used with appropriate preprocessing and thoughtful configuration, ||-Coordinates can be a highly effective tool for exploring high-dimensional datasets.</p> <p>Even though we encountered several challenges early on—most notably <strong>overplotting</strong>—we were able to uncover many interesting insights from the analyzed datasets using ||-Coordinates. Unfortunately, not all of these findings could be included in this blog post. Still, it was remarkable to observe how a relatively simple technique like ||-Coordinates—<strong>without requiring significant extensions or enhancements</strong>—was capable of revealing patterns, relationships, and other hidden structures in raw data.</p> <h2 id="references">References</h2> <div class="publications"> <ol class="bibliography"><li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="Inselberg85" class="col-sm-8"> <div class="title">The plane with parallel coordinates.</div> <div class="author"> Alfred Inselberg </div> <div class="periodical"> <em>The Visual Computer</em>, 1985 </div> <div class="periodical"> </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="LeBlancWW90" class="col-sm-8"> <div class="title">Exploring N-Dimensional Databases.</div> <div class="author"> J. LeBlanc, Matthew O. Ward, and N. Wittels </div> <div class="periodical"> <em>In Visualization, 1990</em>, 1990 </div> <div class="periodical"> </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="CHERNOFF" class="col-sm-8"> <div class="title">The Use of Faces to Represent Points in K-Dimensional Space Graphically</div> <div class="author"> Herman Chernoff </div> <div class="periodical"> <em>Journal of the American Statistical Association</em>, 1973 </div> <div class="periodical"> </div> <div class="links"> <a class="abstract btn btn-sm z-depth-0" role="button">Abs</a> <a href="https://doi.org/10.2307/2284077" class="btn btn-sm z-depth-0" role="button">DOI</a> </div> <div class="abstract hidden"> <p>A novel method of representing multivariate data is presented. Each point in k-dimensional space, k ≤ 18, is represented by a cartoon of a face whose features, such as length of nose and curvature of mouth, correspond to components of the point. Thus every multivariate observation is visualized as a computer-drawn face. This presentation makes it easy for the human mind to grasp many of the essential regularities and irregularities present in the data. Other graphical representations are described briefly.</p> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="Inselberg12" class="col-sm-8"> <div class="title">Parallel Coordinates: Visual Multidimensional Geometry and Its Applications.</div> <div class="author"> Alfred Inselberg </div> <div class="periodical"> <em>In Knowledge Discovery and Information Retrieval</em>, 2012 </div> <div class="periodical"> </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="Inselberg97" class="col-sm-8"> <div class="title">Multidimensional detective</div> <div class="author"> Alfred Inselberg </div> <div class="periodical"> <em>In IEEE Visualization 1997</em>, 1997 </div> <div class="periodical"> </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="Plemenos2009" class="col-sm-8"> <div class="title">Visual Complexity and Intelligent Computer Graphics Techniques Enhancements</div> <div class="author"> Dimitri Plemenos and Georgios Miaoulis </div> <div class="periodical"> 2009 </div> <div class="periodical"> </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="Heinrich2013" class="col-sm-8"> <div class="title">State of the Art of Parallel Coordinates</div> <div class="author"> Julian Heinrich and Daniel Weiskopf </div> <div class="periodical"> <em>In STAR Proceedings of Eurographics 2013</em>, 2013 </div> <div class="periodical"> </div> <div class="links"> <a href="https://doi.org/10.2312/conf/EG2013/stars/095-116" class="btn btn-sm z-depth-0" role="button">DOI</a> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="Inselberg1990" class="col-sm-8"> <div class="title">Parallel Coordinates: A Tool for Visualizing Multi-dimensional Geometry</div> <div class="author"> Alfred Inselberg and Bernard Dimsdale </div> <div class="periodical"> <em>In IEEE Visualization 1990</em>, San Francisco, California, 1990 </div> <div class="periodical"> </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="Yonghong2007" class="col-sm-8"> <div class="title">Parallel Filter: A Visual Classifier Based on Parallel Coordinates and Multivariate Data Analysis</div> <div class="author"> Yonghong Xu, Wenxue Hong, Na Chen, and <span class="more-authors" title="click to view 3 more authors" onclick=" var element=$(this); element.attr('title', ''); var more_authors_text=element.text() == '3 more authors' ? 'Xin Li, Wenyuan Liu, Tao Zhang' : '3 more authors'; var cursorPosition=0; var textAdder=setInterval(function(){ element.html(more_authors_text.substring(0, cursorPosition + 1)); if (++cursorPosition == more_authors_text.length){ clearInterval(textAdder); } }, '10'); ">3 more authors</span> </div> <div class="periodical"> <em>Advanced Intelligent Computing Theories and Applications. With Aspects of Artificial Intelligence</em>, 2007 </div> <div class="periodical"> </div> <div class="links"> <a href="https://doi.org/10.1007/978-3-540-74205-0_121" class="btn btn-sm z-depth-0" role="button">DOI</a> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="Steed2012" class="col-sm-8"> <div class="title">A Visual Analytics Approach for Correlation, Classification, and Regression Analysis</div> <div class="author"> Chad A. Steed, J. Edward Swan II, Patrick J. Fitzpatrick, and <span class="more-authors" title="click to view 1 more author" onclick=" var element=$(this); element.attr('title', ''); var more_authors_text=element.text() == '1 more author' ? 'T.J. Jankun-Kelly' : '1 more author'; var cursorPosition=0; var textAdder=setInterval(function(){ element.html(more_authors_text.substring(0, cursorPosition + 1)); if (++cursorPosition == more_authors_text.length){ clearInterval(textAdder); } }, '10'); ">1 more author</span> </div> <div class="periodical"> 2012 </div> <div class="periodical"> </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="EllisD06" class="col-sm-8"> <div class="title">Enabling Automatic Clutter Reduction in Parallel Coordinate Plots.</div> <div class="author"> Geoffrey Ellis and Alan J. Dix </div> <div class="periodical"> <em>IEEE Transactions on Visualization and Computer Graphics</em>, 2006 </div> <div class="periodical"> </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="Heinrich2012" class="col-sm-8"> <div class="title">The Parallel Coordinates Matrix</div> <div class="author"> Julian Heinrich, John Stasko, and Daniel Weiskopf </div> <div class="periodical"> <em>In EuroVis</em>, 2012 </div> <div class="periodical"> </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="TatuAESTMK09" class="col-sm-8"> <div class="title">Combining automated analysis and visualization techniques for effective exploration of high-dimensional data.</div> <div class="author"> Andrada Tatu, Georgia Albuquerque, Martin Eisemann, and <span class="more-authors" title="click to view 4 more authors" onclick=" var element=$(this); element.attr('title', ''); var more_authors_text=element.text() == '4 more authors' ? 'Jörn Schneidewind, Holger Theisel, Marcus A. Magnor, Daniel A. Keim' : '4 more authors'; var cursorPosition=0; var textAdder=setInterval(function(){ element.html(more_authors_text.substring(0, cursorPosition + 1)); if (++cursorPosition == more_authors_text.length){ clearInterval(textAdder); } }, '10'); ">4 more authors</span> </div> <div class="periodical"> <em>In IEEE Visual Analytics Science and Technology</em>, 2009 </div> <div class="periodical"> </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="Yuan2009" class="col-sm-8"> <div class="title">Scattering Points in Parallel Coordinates.</div> <div class="author"> Xiaoru Yuan, Peihong Guo, He Xiao, and <span class="more-authors" title="click to view 2 more authors" onclick=" var element=$(this); element.attr('title', ''); var more_authors_text=element.text() == '2 more authors' ? 'Hong Zhou, Huamin Qu' : '2 more authors'; var cursorPosition=0; var textAdder=setInterval(function(){ element.html(more_authors_text.substring(0, cursorPosition + 1)); if (++cursorPosition == more_authors_text.length){ clearInterval(textAdder); } }, '10'); ">2 more authors</span> </div> <div class="periodical"> <em>IEEE Transactions on Visualization and Computer Graphics</em>, 2009 </div> <div class="periodical"> </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="Bertini2005" class="col-sm-8"> <div class="title">SpringView: cooperation of radviz and parallel coordinates for view optimization and clutter reduction</div> <div class="author"> E. Bertini, L. Dell’Aquila, and G. Santucci </div> <div class="periodical"> <em>In Coordinated and Multiple Views in Exploratory Visualization, 2005.</em>, 2005 </div> <div class="periodical"> </div> <div class="links"> <a href="https://doi.org/10.1109/cmv.2005.17" class="btn btn-sm z-depth-0" role="button">DOI</a> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="Rübel2006" class="col-sm-8"> <div class="title">PointCloudXplore: Visual Analysis of 3D Gene Expression Data Using Physical Views and Parallel Coordinates.</div> <div class="author"> Oliver Rübel, Gunther H. Weber, Soile V. E. Keränen, and <span class="more-authors" title="click to view 11 more authors" onclick=" var element=$(this); element.attr('title', ''); var more_authors_text=element.text() == '11 more authors' ? 'Charless C. Fowlkes, Cris L. Luengo Hendriks, L. Simirenko, N. Y. Shah, Michael B. Eisen, Mark D. Biggin, Hans Hagen, Damir Sudar, Jitendra Malik, David W. Knowles, Bernd Hamann' : '11 more authors'; var cursorPosition=0; var textAdder=setInterval(function(){ element.html(more_authors_text.substring(0, cursorPosition + 1)); if (++cursorPosition == more_authors_text.length){ clearInterval(textAdder); } }, '10'); ">11 more authors</span> </div> <div class="periodical"> <em>In EuroVis</em>, 2006 </div> <div class="periodical"> </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="streit2006" class="col-sm-8"> <div class="title">3D parallel coordinate systems - A new data visualization method in the context of microscopy-based multicolor tissue cytometry</div> <div class="author"> M. Streit, R. C. Ecker, K. Österreicher, and <span class="more-authors" title="click to view 5 more authors" onclick=" var element=$(this); element.attr('title', ''); var more_authors_text=element.text() == '5 more authors' ? 'G. E. Steiner, H. Bischof, C. Bangert, T. Kopp, R. Rogojanu' : '5 more authors'; var cursorPosition=0; var textAdder=setInterval(function(){ element.html(more_authors_text.substring(0, cursorPosition + 1)); if (++cursorPosition == more_authors_text.length){ clearInterval(textAdder); } }, '10'); ">5 more authors</span> </div> <div class="periodical"> <em>Cytometry Part A</em>, 2006 </div> <div class="periodical"> </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="Nhon2010" class="col-sm-8"> <div class="title">Stacking Graphic Elements to Avoid Over-Plotting.</div> <div class="author"> Dang Tuan Nhon, Leland Wilkinson, and Anushka Anand </div> <div class="periodical"> <em>IEEE Transactions on Visualization and Computer Graphics</em>, 2010 </div> <div class="periodical"> </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="Heinrich2009" class="col-sm-8"> <div class="title">Continuous Parallel Coordinates</div> <div class="author"> Julian Heinrich and Daniel Weiskopf </div> <div class="periodical"> <em>IEEE Transactions on Visualization and Computer Graphics</em>, 2009 </div> <div class="periodical"> </div> <div class="links"> <a class="abstract btn btn-sm z-depth-0" role="button">Abs</a> <a href="https://doi.org/https://dx.doi.org/10.1109/TVCG.2009.131" class="btn btn-sm z-depth-0" role="button">DOI</a> </div> <div class="abstract hidden"> <p>Typical scientific data is represented on a grid with appropriate interpolation or approximation schemes, defined on a continuous domain. The visualization of such data in parallel coordinates may reveal patterns latently contained in the data and thus can improve the understanding of multidimensional relations. In this paper, we adopt the concept of continuous scatterplots for the visualization of spatially continuous input data to derive a density model for parallel coordinates. Based on the point–line duality between scatterplots and parallel coordinates, we propose a mathematical model that maps density from a continuous scatterplot to parallel coordinates and present different algorithms for both numerical and analytical computation of the resulting density field. In addition, we show how the 2-D model can be used to successively construct continuous parallel coordinates with an arbitrary number of dimensions. Since continuous parallel coordinates interpolate data values within grid cells, a scalable and dense visualization is achieved, which will be demonstrated for typical multi-variate scientific data.</p> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="RPackage" class="col-sm-8"> <div class="title">R: A Language and Environment for Statistical Computing</div> <div class="author"> R Core Team </div> <div class="periodical"> 2016 </div> <div class="periodical"> [Online. Accessed 10-Feb-2017] </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="pollenData" class="col-sm-8"> <div class="title">Pollen Data-Set</div> <div class="author"> David Coleman </div> <div class="periodical"> 1986 </div> <div class="periodical"> [Online. Accessed 02-Feb-2014] </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="out5d_2005" class="col-sm-8"> <div class="title">The OUT5D dataset\\</div> <div class="author"> Peter Ketelaar </div> <div class="periodical"> 2005 </div> <div class="periodical"> [Online. Accessed 14-Feb-2014] </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="Malik2011" class="col-sm-8"> <div class="title">Interactive Graphics: Exemplified with Real Data Applications</div> <div class="author"> Waqas Ahmed Malik and Ali Ünlü </div> <div class="periodical"> <em>Frontiers in Psychology</em>, 2011 </div> <div class="periodical"> </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="Makwana2012" class="col-sm-8"> <div class="title">Article: Axes Re-Ordering in Parallel Coordinate for Pattern Optimization</div> <div class="author"> Hemant Makwana, Sanjay Tanwani, and Suresh Jain </div> <div class="periodical"> <em>International Journal of Computer Applications</em>, 2012 </div> <div class="periodical"> </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="Zhou2009" class="col-sm-8"> <div class="title">Splatting the Lines in Parallel Coordinates.</div> <div class="author"> Hong Zhou, Weiwei Cui, Huamin Qu, and <span class="more-authors" title="click to view 3 more authors" onclick=" var element=$(this); element.attr('title', ''); var more_authors_text=element.text() == '3 more authors' ? 'Yingcai Wu, Xiaoru Yuan, Wei Zhuo' : '3 more authors'; var cursorPosition=0; var textAdder=setInterval(function(){ element.html(more_authors_text.substring(0, cursorPosition + 1)); if (++cursorPosition == more_authors_text.length){ clearInterval(textAdder); } }, '10'); ">3 more authors</span> </div> <div class="periodical"> <em>Computer Graphics Forum</em>, 2009 </div> <div class="periodical"> </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="Yu2012" class="col-sm-8"> <div class="title">Visual Data Mining: An Exploratory Approach to Analyzing Temporal Patterns of Eye Movements</div> <div class="author"> Chen Yu, Daniel Yurovsky, and Tian(Linger) Xu </div> <div class="periodical"> <em>Infancy</em>, 2012 </div> <div class="periodical"> </div> <div class="links"> <a href="https://doi.org/10.1111/j.1532-7078.2011.00095.x" class="btn btn-sm z-depth-0" role="button">DOI</a> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="palmas14a" class="col-sm-8"> <div class="title">An Edge-Bundling Layout for Interactive Parallel Coordinates</div> <div class="author"> G. Palmas, M. Bachynskyi, A. Oulasvirta, and <span class="more-authors" title="click to view 2 more authors" onclick=" var element=$(this); element.attr('title', ''); var more_authors_text=element.text() == '2 more authors' ? 'H.-P. Seidel, T. Weinkauf' : '2 more authors'; var cursorPosition=0; var textAdder=setInterval(function(){ element.html(more_authors_text.substring(0, cursorPosition + 1)); if (++cursorPosition == more_authors_text.length){ clearInterval(textAdder); } }, '10'); ">2 more authors</span> </div> <div class="periodical"> <em>In IEEE PacificVis</em>, 2014 </div> <div class="periodical"> </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="JohanssonC08" class="col-sm-8"> <div class="title">A Screen Space Quality Method for Data Abstraction.</div> <div class="author"> Jimmy Johansson and Matthew D. Cooper </div> <div class="periodical"> <em>Comput. Graph. Forum</em>, 2008 </div> <div class="periodical"> </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="ArteroOL04" class="col-sm-8"> <div class="title">Uncovering Clusters in Crowded Parallel Coordinates Visualizations.</div> <div class="author"> Almir Olivette Artero, Maria Cristina Ferreira Oliveira, and Haim Levkowitz </div> <div class="periodical"> <em>In IEEE Visualization 2004</em>, 2004 </div> <div class="periodical"> </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="Bertini2006" class="col-sm-8"> <div class="title">Reducing cluttering through non uniform sampling, displacement, and user perception</div> <div class="author"> Enrico Bertini, Luigi Dell’Aquila, and Giuseppe Santucci </div> <div class="periodical"> <em>In Visualization and Data Analysis 2006</em>, 2006 </div> <div class="periodical"> </div> <div class="links"> <a href="https://doi.org/10.1117/12.642748" class="btn btn-sm z-depth-0" role="button">DOI</a> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="BacheLichman2013" class="col-sm-8"> <div class="title">UCI Machine Learning Repository</div> <div class="author"> K. Bache and M. Lichman </div> <div class="periodical"> <em></em> 2013 </div> <div class="periodical"> [Online. Accessed 02-Feb-2014] </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="Cortez2009" class="col-sm-8"> <div class="title">Modeling wine preferences by data mining from physicochemical properties </div> <div class="author"> Paulo Cortez, António Cerdeira, Fernando Almeida, and <span class="more-authors" title="click to view 2 more authors" onclick=" var element=$(this); element.attr('title', ''); var more_authors_text=element.text() == '2 more authors' ? 'Telmo Matos, José Reis' : '2 more authors'; var cursorPosition=0; var textAdder=setInterval(function(){ element.html(more_authors_text.substring(0, cursorPosition + 1)); if (++cursorPosition == more_authors_text.length){ clearInterval(textAdder); } }, '10'); ">2 more authors</span> </div> <div class="periodical"> <em>Decision Support Systems </em>, 2009 </div> <div class="periodical"> </div> <div class="links"> <a href="https://doi.org/https://dx.doi.org/10.1016/j.dss.2009.05.016" class="btn btn-sm z-depth-0" role="button">DOI</a> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="Appalasamy2012" class="col-sm-8"> <div class="title">Classification-based Data Mining Approach for Quality Control in Wine Production</div> <div class="author"> P. Appalasamy, A. Mustapha, N. D. Rizal, and <span class="more-authors" title="click to view 2 more authors" onclick=" var element=$(this); element.attr('title', ''); var more_authors_text=element.text() == '2 more authors' ? 'F. Johari, A. F. Mansor' : '2 more authors'; var cursorPosition=0; var textAdder=setInterval(function(){ element.html(more_authors_text.substring(0, cursorPosition + 1)); if (++cursorPosition == more_authors_text.length){ clearInterval(textAdder); } }, '10'); ">2 more authors</span> </div> <div class="periodical"> <em>Journal of Applied Sciences</em>, 2012 </div> <div class="periodical"> </div> <div class="links"> <a href="https://doi.org/10.3923/jas.2012.598.601" class="btn btn-sm z-depth-0" role="button">DOI</a> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="Nachev2012" class="col-sm-8"> <div class="title">Product Quality Analysis using Support Vector Machnines</div> <div class="author"> Alexander Nachev and Boris Stoyanov </div> <div class="periodical"> <em>Information Models and Analyses</em>, 2012 </div> <div class="periodical"> </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="Lambrou2012" class="col-sm-8"> <div class="title">Reliable Probability Estimates Based on Support Vector Machines for Large Multiclass Datasets</div> <div class="author"> Antonis Lambrou, Harris Papadopoulos, Ilia Nouretdinov, and <span class="more-authors" title="click to view 1 more author" onclick=" var element=$(this); element.attr('title', ''); var more_authors_text=element.text() == '1 more author' ? 'Alexander Gammerman' : '1 more author'; var cursorPosition=0; var textAdder=setInterval(function(){ element.html(more_authors_text.substring(0, cursorPosition + 1)); if (++cursorPosition == more_authors_text.length){ clearInterval(textAdder); } }, '10'); ">1 more author</span> </div> <div class="periodical"> <em>In Artificial Intelligence Applications and Innovations</em>, 2012 </div> <div class="periodical"> </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="DasguptaK10" class="col-sm-8"> <div class="title">Pargnostics: Screen-Space Metrics for Parallel Coordinates</div> <div class="author"> Aritra Dasgupta and Robert Kosara </div> <div class="periodical"> <em>IEEE Transactions on Visualization and Computer Graphics</em>, 2010 </div> <div class="periodical"> </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="Roe2005" class="col-sm-8"> <div class="title">Boosted decision trees as an alternative to artificial neural networks for particle identification</div> <div class="author"> B. P. Roe, H.-J. Yang, J. Zhu, and <span class="more-authors" title="click to view 3 more authors" onclick=" var element=$(this); element.attr('title', ''); var more_authors_text=element.text() == '3 more authors' ? 'Y. Liu, I. Stancu, G. McGregor' : '3 more authors'; var cursorPosition=0; var textAdder=setInterval(function(){ element.html(more_authors_text.substring(0, cursorPosition + 1)); if (++cursorPosition == more_authors_text.length){ clearInterval(textAdder); } }, '10'); ">3 more authors</span> </div> <div class="periodical"> <em>Nuclear Instruments and Methods in Physics Research</em>, 2005 </div> <div class="periodical"> </div> <div class="links"> <a href="https://doi.org/10.1016/j.nima.2004.12.018" class="btn btn-sm z-depth-0" role="button">DOI</a> </div> </div> </div> </li></ol> </div> <h2 id="appendix">Appendix</h2> <h3 id="the-wine-quality-dataset-2">The Wine-Quality dataset</h3> <p>The attributes are summarized in the following table:</p> <table id="TBL-4" class="tabular" cellspacing="0" cellpadding="0"><colgroup id="TBL-4-1g"><col id="TBL-4-1"/><col id="TBL-4-2"/><col id="TBL-4-3"/><col id="TBL-4-4"/></colgroup><tr class="hline"><td><hr/></td><td><hr/></td><td><hr/></td><td><hr/></td></tr><tr style="vertical-align:baseline;" id="TBL-4-1-"><td style="white-space:nowrap; text-align:left;" id="TBL-4-1-1" class="td10"><div class="multicolumn" style="white-space:nowrap; text-align:left;"> Attribute</div> </td><td style="white-space:nowrap; text-align:right;" id="TBL-4-1-2" class="td01"> Unit</td><td style="white-space:nowrap; text-align:right;" id="TBL-4-1-3" class="td11"> Shortcut</td> </tr><tr class="hline"><td><hr/></td><td><hr/></td><td><hr/></td><td><hr/></td></tr><tr class="vspace" style="font-size:2.0pt"><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr style="vertical-align:baseline;" id="TBL-4-2-"><td style="white-space:nowrap; text-align:right;" id="TBL-4-2-1" class="td10"> Fixed acidity </td><td style="white-space:nowrap; text-align:right;" id="TBL-4-2-2" class="td01"> <span class="cmmi-10">g</span>(<span class="cmmi-10">tartaric</span><span class="cmmi-10">&#x00A0;acid</span>)<span class="cmmi-10">&#x2215;dm</span><sup><span class="cmr-7">3</span></sup> </td><td style="white-space:nowrap; text-align:right;" id="TBL-4-2-3" class="td11"> <span class="cmti-10">f</span><span class="cmti-10">_acid </span></td><td style="white-space:nowrap; text-align:right;" id="TBL-4-2-4" class="td11"> </td> </tr><tr style="vertical-align:baseline;" id="TBL-4-3-"><td style="white-space:nowrap; text-align:right;" id="TBL-4-3-1" class="td10"> Volatile acidity </td><td style="white-space:nowrap; text-align:right;" id="TBL-4-3-2" class="td01"> <span class="cmmi-10">g</span>(<span class="cmmi-10">acetic</span><span class="cmmi-10">&#x00A0;acid</span>)<span class="cmmi-10">&#x2215;dm</span><sup><span class="cmr-7">3</span></sup> </td><td style="white-space:nowrap; text-align:right;" id="TBL-4-3-3" class="td11"> <span class="cmti-10">v</span><span class="cmti-10">_acid </span></td><td style="white-space:nowrap; text-align:right;" id="TBL-4-3-4" class="td11"> </td> </tr><tr style="vertical-align:baseline;" id="TBL-4-4-"><td style="white-space:nowrap; text-align:right;" id="TBL-4-4-1" class="td10"> Citric acid </td><td style="white-space:nowrap; text-align:right;" id="TBL-4-4-2" class="td01"> <span class="cmmi-10">g&#x2215;dm</span>3</td><td style="white-space:nowrap; text-align:right;" id="TBL-4-4-3" class="td11"> <span class="cmti-10">c</span><span class="cmti-10">_acid </span></td><td style="white-space:nowrap; text-align:right;" id="TBL-4-4-4" class="td11"> </td> </tr><tr style="vertical-align:baseline;" id="TBL-4-5-"><td style="white-space:nowrap; text-align:right;" id="TBL-4-5-1" class="td10"> Residual sugar </td><td style="white-space:nowrap; text-align:right;" id="TBL-4-5-2" class="td01"> <span class="cmmi-10">g&#x2215;dm</span>3</td><td style="white-space:nowrap; text-align:right;" id="TBL-4-5-3" class="td11"> <span class="cmti-10">sugar </span></td><td style="white-space:nowrap; text-align:right;" id="TBL-4-5-4" class="td11"> </td> </tr><tr style="vertical-align:baseline;" id="TBL-4-6-"><td style="white-space:nowrap; text-align:right;" id="TBL-4-6-1" class="td10"> Chlorides </td><td style="white-space:nowrap; text-align:right;" id="TBL-4-6-2" class="td01"> <span class="cmmi-10">g</span>(<span class="cmmi-10">sodium</span><span class="cmmi-10">&#x00A0;chloride</span>)<span class="cmmi-10">&#x2215;dm</span><sup><span class="cmr-7">3</span></sup> </td><td style="white-space:nowrap; text-align:right;" id="TBL-4-6-3" class="td11"> <span class="cmti-10">chlorides </span></td><td style="white-space:nowrap; text-align:right;" id="TBL-4-6-4" class="td11"> </td> </tr><tr style="vertical-align:baseline;" id="TBL-4-7-"><td style="white-space:nowrap; text-align:right;" id="TBL-4-7-1" class="td10"> Free sulfur dioxide </td><td style="white-space:nowrap; text-align:right;" id="TBL-4-7-2" class="td01"> <span class="cmmi-10">mg&#x2215;dm</span><sup><span class="cmr-7">3</span></sup> </td><td style="white-space:nowrap; text-align:right;" id="TBL-4-7-3" class="td11"> <span class="cmti-10">f</span><span class="cmti-10">_sulfur </span></td><td style="white-space:nowrap; text-align:right;" id="TBL-4-7-4" class="td11"> </td> </tr><tr style="vertical-align:baseline;" id="TBL-4-8-"><td style="white-space:nowrap; text-align:right;" id="TBL-4-8-1" class="td10">Total sulfur dioxide </td><td style="white-space:nowrap; text-align:right;" id="TBL-4-8-2" class="td01"> <span class="cmmi-10">mg&#x2215;dm</span><sup><span class="cmr-7">3</span></sup> </td><td style="white-space:nowrap; text-align:right;" id="TBL-4-8-3" class="td11"> <span class="cmti-10">t</span><span class="cmti-10">_sulfur </span></td><td style="white-space:nowrap; text-align:right;" id="TBL-4-8-4" class="td11"> </td> </tr><tr style="vertical-align:baseline;" id="TBL-4-9-"><td style="white-space:nowrap; text-align:right;" id="TBL-4-9-1" class="td10"> Density </td><td style="white-space:nowrap; text-align:right;" id="TBL-4-9-2" class="td01"> <span class="cmmi-10">g&#x2215;cm</span><sup><span class="cmr-7">3</span></sup> </td><td style="white-space:nowrap; text-align:right;" id="TBL-4-9-3" class="td11"> <span class="cmti-10">density </span></td><td style="white-space:nowrap; text-align:right;" id="TBL-4-9-4" class="td11"> </td> </tr><tr style="vertical-align:baseline;" id="TBL-4-10-"><td style="white-space:nowrap; text-align:right;" id="TBL-4-10-1" class="td10"> pH </td><td style="white-space:nowrap; text-align:right;" id="TBL-4-10-2" class="td01"> <span class="cmsy-10">--</span></td><td style="white-space:nowrap; text-align:right;" id="TBL-4-10-3" class="td11"> <span class="cmti-10">pH </span></td><td style="white-space:nowrap; text-align:right;" id="TBL-4-10-4" class="td11"> </td> </tr><tr style="vertical-align:baseline;" id="TBL-4-11-"><td style="white-space:nowrap; text-align:right;" id="TBL-4-11-1" class="td10"> Sulphates </td><td style="white-space:nowrap; text-align:right;" id="TBL-4-11-2" class="td01"><span class="cmmi-10">g</span>(<span class="cmmi-10">potassium</span><span class="cmmi-10">&#x00A0;sulphate</span>)<span class="cmmi-10">&#x2215;dm</span><sup><span class="cmr-7">3</span></sup> </td><td style="white-space:nowrap; text-align:right;" id="TBL-4-11-3" class="td11"> sulphates</td><td style="white-space:nowrap; text-align:right;" id="TBL-4-11-4" class="td11"> </td> </tr><tr style="vertical-align:baseline;" id="TBL-4-12-"><td style="white-space:nowrap; text-align:right;" id="TBL-4-12-1" class="td10"> Alcohol </td><td style="white-space:nowrap; text-align:right;" id="TBL-4-12-2" class="td01"> <span class="cmmi-10">vol.</span><span class="cmmi-10">&#x00A0;</span>%</td><td style="white-space:nowrap; text-align:right;" id="TBL-4-12-3" class="td11"> <span class="cmti-10">alcohol </span></td><td style="white-space:nowrap; text-align:right;" id="TBL-4-12-4" class="td11"> </td> </tr><tr class="hline"><td><hr/></td><td><hr/></td><td><hr/></td><td><hr/></td></tr><tr style="vertical-align:baseline;" id="TBL-4-13-"><td style="white-space:nowrap; text-align:right;" id="TBL-4-13-1" class="td10"> </td></tr></table> ]]></content><author><name></name></author><category term="Programming"/><category term="parallel coordinates"/><category term="data visualization"/><category term="high-dimensional data"/><category term="alpha blending"/><category term="axis reordering"/><category term="outlier detection"/><category term="clustering"/><summary type="html"><![CDATA[A deep dive into the visualization technique of Parallel Coordinates (||-Coordinates), exploring its strengths, challenges, and practical applications in data mining. Through detailed case studies—including wine quality analysis and the MiniBooNe particle dataset—we demonstrate how this powerful tool can reveal hidden structures, correlations, and clusters in high-dimensional data. With insights into alpha blending, axis reordering, outlier handling, and visual classification, this post offers both theoretical background and hands-on use cases for using Parallel Coordinates effectively.]]></summary></entry><entry><title type="html">Short Notes: The Multivariate Gaussian Distribution With a Diagonal Covariance Matrix</title><link href="https://markusthill.github.io/blog/2025/gaussian-distribution-with-a-diagonal-covariance-matrix/" rel="alternate" type="text/html" title="Short Notes: The Multivariate Gaussian Distribution With a Diagonal Covariance Matrix"/><published>2025-07-30T19:00:51+00:00</published><updated>2025-07-30T19:00:51+00:00</updated><id>https://markusthill.github.io/blog/2025/gaussian-distribution-with-a-diagonal-covariance-matrix</id><content type="html" xml:base="https://markusthill.github.io/blog/2025/gaussian-distribution-with-a-diagonal-covariance-matrix/"><![CDATA[<p>When the off-diagonal entries of a covariance matrix are negligible, it’s often convenient to use an alternative representation of a multivariate Gaussian distribution. In such cases, we can assume the covariance matrix is diagonal, allowing the mean and variance to be estimated independently for each dimension. This simplification leads to a factorized form of the multivariate density function as a product of univariate Gaussians, as shown below.</p> <p>Assume we are given a diagonal covariance matrix of the form:</p> \[\Sigma = \begin{pmatrix} \sigma_1^2 &amp; 0 &amp; \cdots &amp; 0 \\ 0 &amp; \sigma_2^2 &amp; \cdots &amp; 0 \\ \vdots &amp; \vdots &amp; \ddots &amp; \vdots \\ 0 &amp; 0 &amp; \cdots &amp; \sigma_k^2 \\ \end{pmatrix}.\] <p>The density function of a multivariate Gaussian distribution is given by:</p> \[f_x(x_1, \ldots, x_k) = \frac{\exp\left(-\frac{1}{2} (\vec{x} - \vec{\mu})^T \Sigma^{-1} (\vec{x} - \vec{\mu})\right)}{\sqrt{(2\pi)^k |\Sigma|}}.\] <p>Let us define:</p> \[\vec{y} = \vec{x} - \vec{\mu}.\] <p>Then the expression becomes:</p> \[f_x(x_1, \ldots, x_k) = \frac{\exp\left(-\frac{1}{2} \vec{y}^T \Sigma^{-1} \vec{y}\right)}{\sqrt{(2\pi)^k |\Sigma|}}.\] <p>Recall that the inverse of a diagonal matrix is simply the reciprocal of its diagonal elements:</p> \[\Sigma^{-1} = \begin{pmatrix} \sigma_1^2 &amp; 0 &amp; \cdots &amp; 0 \\ 0 &amp; \sigma_2^2 &amp; \cdots &amp; 0 \\ \vdots &amp; \vdots &amp; \ddots &amp; \vdots \\ 0 &amp; 0 &amp; \cdots &amp; \sigma_k^2 \\ \end{pmatrix}^{-1} = \begin{pmatrix} \frac{1}{\sigma_1^2} &amp; 0 &amp; \cdots &amp; 0 \\ 0 &amp; \frac{1}{\sigma_2^2} &amp; \cdots &amp; 0 \\ \vdots &amp; \vdots &amp; \ddots &amp; \vdots \\ 0 &amp; 0 &amp; \cdots &amp; \frac{1}{\sigma_k^2} \end{pmatrix}.\] <p>Substituting this back into the expression:</p> \[f_x(x_1, \ldots, x_k) = \frac{\exp\left(-\frac{1}{2} \left( \frac{y_1^2}{\sigma_1^2} + \frac{y_2^2}{\sigma_2^2} + \cdots + \frac{y_k^2}{\sigma_k^2} \right) \right)}{\sqrt{(2\pi)^k |\Sigma|}}.\] <p>The determinant of a diagonal matrix is the product of its diagonal entries:</p> \[|\Sigma| = \begin{vmatrix} \sigma_1^2 &amp; 0 &amp; \cdots &amp; 0 \\ 0 &amp; \sigma_2^2 &amp; \cdots &amp; 0 \\ \vdots &amp; \vdots &amp; \ddots &amp; \vdots \\ 0 &amp; 0 &amp; \cdots &amp; \sigma_k^2 \\ \end{vmatrix} = \sigma_1^2 \cdot \sigma_2^2 \cdots \sigma_k^2.\] <p>Putting it all together:</p> \[\begin{align} f_x(x_1, \ldots, x_k) &amp;= \frac{\exp\left(-\frac{1}{2} \left( \sum_{i=1}^k \frac{y_i^2}{\sigma_i^2} \right) \right)}{\sqrt{(2\pi)^k \prod_{i=1}^k \sigma_i^2}} \\ &amp;= \prod_{i=1}^k \frac{\exp\left( -\frac{y_i^2}{2\sigma_i^2} \right)}{\sqrt{2\pi \sigma_i^2}} \\ &amp;= \prod_{i=1}^k \frac{\exp\left( -\frac{(x_i - \mu_i)^2}{2\sigma_i^2} \right)}{\sqrt{2\pi \sigma_i^2}} \\ &amp;= f_1(x_1) \cdot f_2(x_2) \cdots f_k(x_k). \end{align}\] <p>This shows that under the assumption of a diagonal covariance matrix, the multivariate Gaussian density factorizes into a product of independent univariate Gaussian densities.</p>]]></content><author><name></name></author><category term="math"/><category term="statistics"/><category term="multivariate-gaussian"/><category term="diagonal-covariance"/><category term="probability-distribution"/><summary type="html"><![CDATA[This post explores how a multivariate Gaussian distribution simplifies when the covariance matrix is diagonal. By breaking down the math, we show how the density function factorizes into a product of independent univariate Gaussians—making both interpretation and computation more tractable.]]></summary></entry><entry><title type="html">Building Intelligent Agents for Connect-4: First Steps</title><link href="https://markusthill.github.io/blog/2025/connect-4-introduction-and-tree-search-algorithms/" rel="alternate" type="text/html" title="Building Intelligent Agents for Connect-4: First Steps"/><published>2025-07-04T08:00:51+00:00</published><updated>2025-07-04T08:00:51+00:00</updated><id>https://markusthill.github.io/blog/2025/connect-4-introduction-and-tree-search-algorithms</id><content type="html" xml:base="https://markusthill.github.io/blog/2025/connect-4-introduction-and-tree-search-algorithms/"><![CDATA[<p>This post is the 1st part of a series of 7 articles:</p> <ol> <li><strong><a href="/blog/2025/connect-4-introduction-and-tree-search-algorithms/">Building Intelligent Agents for Connect-4: First Steps</a></strong></li> <li><a href="#">Building Intelligent Agents for Connect-4: Tree Search Algorithms</a></li> <li><a href="#">Building Intelligent Agents for Connect-4: Board Representations</a></li> <li><a href="#">Building Intelligent Agents for Connect-4: Move Ordering</a></li> <li><a href="#">Building Intelligent Agents for Connect-4: Transposition Tables</a></li> <li><a href="#">Building Intelligent Agents for Connect-4: Opening Databases</a></li> <li><a href="#">Building Intelligent Agents for Connect-4: Final Considerations</a></li> </ol> <p>The study of strategic board games is a long-standing and foundational area of research in artificial intelligence (AI). Over the years, countless approaches have been explored—often with very different goals and methodologies. Complex games such as chess, Go, and checkers have traditionally attracted significant attention due to their strategic depth and computational challenges.</p> <p>In this blog post—and in future entries—we’ll turn our attention to <em>Connect-4</em>. While simpler than the aforementioned classics, Connect-4 still offers interesting AI challenges. We’ll explore various techniques for building strong-playing agents, ranging from handcrafted heuristics to learning-based and search-based methods.</p> <p>More recently, I developed a high-performance C++ and Python version of a Connect-4 solver called <strong>BitBully</strong>, available <a href="https://github.com/MarkusThill/BitBully">here</a> and <a href="https://pypi.org/project/bitbully/">here</a>. Also, check out the related <a href="https://markusthill.github.io/projects/0_bitbully/">project page</a>.</p> <p>For those interested in a more educational or research-oriented setup, an earlier Java-based framework for <em>Connect-4</em> is also available on GitHub: <a href="http://github.com/MarkusThill/Connect-Four">http://github.com/MarkusThill/Connect-Four</a>.</p> <p><br/></p> <h2 id="introduction">Introduction</h2> <p>For decades, researchers have been fascinated by the question of whether machines can one day achieve a level of intelligence comparable to that of humans. This pursuit spans many fields, but one of the most established areas in artificial intelligence (AI) has been the development of intelligent programs capable of solving well-defined problems—strategic board games being a prime example.</p> <p>The term <em>artificial intelligence</em> itself is difficult to pin down precisely, since even “intelligence” remains a debated and multifaceted concept. One influential definition comes from computer scientist John McCarthy, who described AI as:</p> <blockquote> <p><em>“The science and engineering of making intelligent machines, especially intelligent computer programs. It is related to the similar task of using computers to understand human intelligence, but AI does not have to confine itself to methods that are biologically observable.”</em></p> </blockquote> <p>Strategic board games have long played a central role in AI research. Over the past 70 years, a vast body of work has investigated the development of machine players, each with different objectives and methods. Early efforts focused particularly on chess, where programs evolved from simple evaluation functions to systems capable of defeating world champions.</p> <p>A historical curiosity is the so-called <em>Mechanical Turk</em>, built in 1769 by Austrian-Hungarian inventor Wolfgang von Kempelen. Claimed to be an automated chess-playing machine, it captivated audiences across Europe—until it was later revealed that a human operator was hidden inside. Much later, during World War II, Konrad Zuse designed the first known chess program using his own programming language <em>Plankalkül</em>.</p> <p>Milestones like IBM’s <em>Deep Blue</em> defeating world champion Garry Kasparov in 1997 showcased the potential of brute-force search, leveraging custom hardware to evaluate over 2 million positions per second. Since then, AI research has moved toward even more sophisticated approaches, incorporating learning and generalization.</p> <p>So why have board games become such a fertile ground for AI research?</p> <p>Several properties make them especially appealing:</p> <ul> <li><strong>Well-defined rules and goals</strong>: Most games have a fixed structure and a clearly defined win/loss condition. Unlike many real-world problems, the rules do not change mid-game.</li> <li><strong>Discrete and fully observable environments</strong>: The current state of the game is fully known at all times, and transitions between states are (usually) deterministic.</li> <li><strong>Manageable complexity with scalable difficulty</strong>: Despite their simplicity in terms of rules, many games have enormous state and action spaces, which demand clever search or learning strategies.</li> <li><strong>Relevance to broader AI problems</strong>: Concepts such as planning, decision-making, adversarial search, and pattern recognition all play a role.</li> </ul> <p>Humans excel at recognizing patterns, drawing analogies, and applying prior knowledge to new situations. For example, identifying familiar faces in photos or spotting tactical motifs in a chess position comes naturally to us. For machines, these tasks are far more difficult. Early AI systems in board games mostly relied on brute-force tree search and clever pruning. While effective, these systems lacked the ability to learn from experience in the human sense.</p> <p>Machine learning methods, particularly <em>Reinforcement Learning (RL)</em> and <em>Temporal Difference Learning (TDL)</em>, offer a different paradigm. In RL, an agent learns through interaction with its environment, receiving rewards based on outcomes. Over time, the agent develops a value function that helps evaluate positions and guide future decisions. Crucially, this process can allow the agent to improve its play autonomously—without relying on handcrafted rules or features.</p> <p>However, even modern learning systems often depend on carefully chosen features to represent game states. Selecting and engineering these features is itself a creative challenge and can significantly impact performance.</p> <p>In this blog series, we’ll begin by exploring classical tree search algorithms and heuristics before diving into more advanced, learning-based approaches to mastering board games—starting with <em>Connect-4</em>, a seemingly simple yet deeply strategic game.</p> <h2 id="connect-4">Connect-4</h2> <p><em>Connect-4</em> is a widely known two-player board game, typically played with the colors <em>Yellow</em> and <em>Red</em>, on a vertical grid consisting of seven columns and six rows. At the start of the game, the board is completely empty, offering 42 available positions.</p> <p>One of the defining characteristics of <em>Connect-4</em> is its vertical layout: players can only <strong>drop</strong> their discs into the top of a column. Due to gravity, a token always occupies the <strong>lowest unfilled row</strong> of the selected column. If a column is already filled with six tokens, no further moves can be made in that column, reducing the number of available options for both players.</p> <p>Players alternate turns, starting with Yellow, aiming to create a line of four connected tokens of their own color. These four aligned discs may appear:</p> <ul> <li><strong>Horizontally</strong></li> <li><strong>Vertically</strong></li> <li><strong>Diagonally</strong> (in either direction)</li> </ul> <p>The first player to align four of their tokens in a row wins the game. If neither player manages to achieve this by the time all 42 cells are filled, the game ends in a draw.</p> <p>Below is an example board position illustrating the game’s mechanics and strategic possibilities:</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-07-04-connect-4-introduction-and-tree-search-algorithms/C4-example-position-480.webp 480w,/assets/img/2025-07-04-connect-4-introduction-and-tree-search-algorithms/C4-example-position-800.webp 800w,/assets/img/2025-07-04-connect-4-introduction-and-tree-search-algorithms/C4-example-position-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-07-04-connect-4-introduction-and-tree-search-algorithms/C4-example-position.png" class="img-fluid rounded z-depth-1 imgcenter" width="50%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 1:</b> Typical <em>Connect-4</em> position, created during a match of a temporal difference learning agent (Yellow) against a perfect playing Minimax agent (Red), with Minimax as the next player to move. Both types of agents will be described in later posts. For the given position, Minimax is under zugzwang and will eventually loose the game, however, the defeat could be delayed as far as possible. </figcaption> </figure> <p>Although <em>Connect-4</em> has a <strong>moderate state-space complexity</strong> of approximately<br/> \(4.5 \cdot 10^{12}\) distinct positions <a class="citation" href="#Edelkamp08">(Edelkamp &amp; Kissmann, 2008)</a>, and a <strong>game-tree complexity</strong> around<br/> \(10^{21}\) <a class="citation" href="#Allis94">(Allis, 1994)</a>, solving the game remains a non-trivial challenge even today.</p> <p>The first known solution was independently discovered by Allen <a class="citation" href="#Allen89">(Allen, 1989)</a> and Allis <a class="citation" href="#Allis88">(Allis, 1988)</a> in 1988. They <em>weakly solved</em> the game, demonstrating that—assuming perfect play from both players—<strong>Yellow can always force a win</strong> if she starts by placing her first token in the <strong>center column</strong>. While Red cannot win under optimal play, she can <strong>delay defeat</strong> and force Yellow to use all available moves.</p> <p>In 1994, Tromp <a class="citation" href="#Tromp94">(Bache &amp; Lichman, 2013)</a> went further and <em>strongly solved</em> the game for all positions with <strong>exactly 8 tokens</strong>, building a comprehensive endgame database that contains the game-theoretic values (win/loss/draw) of all <strong>non-trivial</strong> configurations.</p> <blockquote> <p><strong>Note:</strong> Tromp considered a position <em>trivial</em> if it contained an immediate win. While this is reasonable when Yellow has a direct winning move, it is debatable for Red: Red’s threats can often be neutralized by Yellow, allowing the game to proceed. Hence, the definition of triviality in this context is not entirely accurate.</p> </blockquote> <p>Tromp’s computation evaluated all <strong>67,557</strong> relevant positions and took approximately <strong>40,000 CPU hours</strong>—equivalent to about <strong>4.5 years</strong> of computation time.</p> <p>The table below shows the <strong>state-space complexity</strong> and <strong>leaf node counts</strong> for different numbers of plies. For instance, even with just <strong>12 tokens placed</strong> (i.e., after 12 plies), the state-space complexity is still about<br/> \(2.5 \cdot 10^5\) times smaller than that of the complete 42-token game<br/> (final value from <a class="citation" href="#Edelkamp08">(Edelkamp &amp; Kissmann, 2008)</a>).</p> <p>The source code used to generate the table is available in the appendix and on GitHub (<a href="https://github.com/MarkusThill/BitBully?tab=readme-ov-file#further-usage-examples-for-bitbully-core">Python</a> or <a href="https://github.com/MarkusThill/Connect-Four/blob/master/CFour/src/miscellaneous/CountPositionsC4.java">Java</a>).</p> <table> <tbody> <tr> <td>Plies</td> <td>Leaf Nodes</td> <td>State-Space Complexity</td> </tr> <tr> <td>0</td> <td>1</td> <td>1</td> </tr> <tr> <td>1</td> <td>7</td> <td>8</td> </tr> <tr> <td>2</td> <td>49</td> <td>57</td> </tr> <tr> <td>3</td> <td>238</td> <td>295</td> </tr> <tr> <td>4</td> <td>1,120</td> <td>1,415</td> </tr> <tr> <td>5</td> <td>4,263</td> <td>5,678</td> </tr> <tr> <td>6</td> <td>16,422</td> <td>22,100</td> </tr> <tr> <td>7</td> <td>53,955</td> <td>76,055</td> </tr> <tr> <td>8</td> <td>181,597</td> <td>257,652</td> </tr> <tr> <td>9</td> <td>534,085</td> <td>791,737</td> </tr> <tr> <td>10</td> <td>1,602,480</td> <td>2,394,217</td> </tr> <tr> <td>11</td> <td>4,231,877</td> <td>6,626,094</td> </tr> <tr> <td>12</td> <td>11,477,673</td> <td>18,102,767</td> </tr> <tr> <td>\(\vdots\)</td> <td>\(\vdots\)</td> <td>\(\vdots\)</td> </tr> <tr> <td>42</td> <td>?</td> <td>\(4,531,985,219,092 \approx 4.5 \times 10^{12}\)</td> </tr> </tbody> </table> <p>You can also find the list with up to 26 plies on <a href="https://oeis.org/A212693">OEIS</a>.</p> <p><br/></p> <h2 id="a-connect-4-agent-based-on-tree-search-techniques">A Connect-4 Agent Based on Tree-Search Techniques</h2> <h3 id="summary-of-the-upcoming-blog-posts">Summary of the Upcoming Blog Posts</h3> <p>Some time ago, I developed a <em>perfect-playing</em> Connect-4 agent. The project began with a simple <strong>Minimax</strong> agent—a classic tree-search algorithm—and was gradually refined with a series of optimizations. The final version integrates advanced search techniques and is supported by comprehensive databases to master the game’s opening phase.</p> <p>For <em>Connect-4</em>, we benefit from <strong>Tromp’s 8-ply opening database</strong>, which I further extended to include all 8-ply positions with <em>immediate threats for Yellow</em>, as these were originally omitted. Additionally, I generated a <strong>Huffman-encoded endgame database</strong> covering all positions with <strong>exactly 12 tokens</strong>, storing both the expected outcome and the precise number of moves remaining until the end of the game (under perfect play).</p> <p>The core <strong>Minimax search</strong> is enhanced with several techniques:</p> <ul> <li><strong>Alpha-Beta Pruning</strong></li> <li><strong>Move Ordering</strong></li> <li><strong>Symmetry Exploitation</strong></li> <li><strong>Zobrist Hashing</strong></li> <li><strong>Two-Stage Transposition Tables</strong> to detect repeated positions from different move orders</li> <li><strong>Enhanced Transposition Cutoffs (ETC)</strong></li> </ul> <h3 id="bitboards-for-fast-and-efficient-board-representation">Bitboards for Fast and Efficient Board Representation</h3> <p>The agent uses <strong>bitboards</strong> as the main data structure for board representation. In this scheme, each <em>Connect-4</em> cell is encoded using <strong>two bitfields</strong>, one per player, requiring a total of<br/> \(2 \times 42 = 84\) bits to represent a position. With a well-chosen layout of cells in memory, common operations become extremely efficient thanks to native CPU support for bitwise instructions (e.g., AND, OR, XOR, bit shifts).</p> <p>Typical board operations—such as placing/removing tokens, mirroring, rotation, copying, and detecting terminal states—can be performed significantly faster with bitboards than with traditional structures like 2D arrays.</p> <p>In particular, <strong>terminal state detection</strong> (i.e., checking for 4-in-a-row) is a time-critical task in Connect-4. With bitboards, a highly optimized solution exists that vastly outperforms conventional implementations. Moreover, bitboards are memory-efficient, which is crucial when storing millions of positions in transposition tables.</p> <h3 id="performance-highlights">Performance Highlights</h3> <p>Thanks to all these optimizations, the agent ranks among the <strong>fastest perfect-playing Connect-4 solvers</strong>:</p> <ul> <li>On a vintage <strong>Pentium-4</strong> machine, it can solve the empty board in under <strong>4 minutes</strong>, <em>without</em> using any opening database and with just <strong>24 MB of transposition table memory</strong>.</li> <li>In the typical configuration—using a <strong>12-ply opening database</strong> and the same <strong>24 MB transposition table</strong>—most positions can be solved in a <strong>fraction of a second</strong>.</li> </ul> <hr/> <p>These techniques will be explored in greater detail in the upcoming blog posts.</p> <p><br/></p> <ul id="log" class="tab" data-tab="069735f7-7ff4-4903-9b1d-45b206865ceb" data-name="log"> <li class="active" id="log-python-c--"> <a href="#">Python/C++ </a> </li> <li id="log-java"> <a href="#">Java </a> </li> </ul> <ul class="tab-content" id="069735f7-7ff4-4903-9b1d-45b206865ceb" data-name="log"> <li class="active"> <h2 id="bitbully-a-high-speed-connect-4-solver">BitBully: A High-Speed Connect-4 Solver</h2> <p><strong>BitBully</strong> is a blazing-fast, perfect-playing <em>Connect-4</em> solver written in <strong>C++</strong> with seamless <strong>Python bindings</strong>. Designed for both developers and researchers, it offers a powerful toolkit for analyzing game-theoretic strategies and solving arbitrary board positions with high efficiency.</p> <p>Key features include:</p> <ul> <li><strong>Bitboard Engine</strong> using low-level bitwise operations</li> <li><strong>MTD(f)</strong> and <strong>null-window search</strong> for fast perfect-play solving</li> <li><strong>Opening database</strong> covering all positions up to 12 discs</li> <li><strong>Advanced heuristics</strong>: threat detection, transposition tables, move ordering</li> <li><strong>Cross-platform</strong> (Linux, Windows, macOS) with zero-setup Python wheels</li> <li><strong>Open Source</strong> under the AGPL-3.0 license</li> </ul> <p>Available here:<br/> 👉 <a href="https://github.com/MarkusThill/BitBully">GitHub</a> · <a href="https://pypi.org/project/bitbully">PyPI</a> · <a href="https://markusthill.github.io/BitBully">Docs</a></p> <p>Also, check out the related <a href="https://markusthill.github.io/projects/0_bitbully/">project page</a>.</p> </li> <li> <h2 id="connect-4-java-framework">Connect-4 Java Framework</h2> <p>A comprehensive software framework for <em>Connect-4</em> implemented in <strong>Java</strong> is available on GitHub. It provides a flexible environment for conducting learning experiments and evaluating different AI strategies.</p> <p>The framework includes a <strong>graphical user interface (GUI)</strong> that offers:</p> <ul> <li>Visual inspection of the game state and progress</li> <li>Tools for performance evaluation and analysis</li> <li>Import/export functionalities for game positions and statistics</li> <li>Interactive play between the user and various agents, including: <ul> <li>Random agents</li> <li>Temporal-Difference Learning (TDL) agents</li> <li>Minimax search agents</li> <li>Monte Carlo Tree Search (MCTS) agents</li> <li>And more</li> </ul> </li> </ul> <p>The framework is <strong>open-source</strong> and can be downloaded from:<br/> 👉 <a href="http://github.com/MarkusThill/Connect-Four">github.com/MarkusThill/Connect-Four</a></p> </li> </ul> <p><br/></p> <h2 id="references">References</h2> <div class="publications"> <ol class="bibliography"><li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="Edelkamp08" class="col-sm-8"> <div class="title">Symbolic classification of general two-player games</div> <div class="author"> Stefan Edelkamp and Peter Kissmann </div> <div class="periodical"> <em>In KI 2008: Advances in Artificial Intelligence</em>, 2008 </div> <div class="periodical"> </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="Allis94" class="col-sm-8"> <div class="title">Searching for Solutions in Games and Artificial Intelligence</div> <div class="author"> Victor L. Allis </div> <div class="periodical"> <em>University of Limburg</em>, 1994 </div> <div class="periodical"> </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="Allen89" class="col-sm-8"> <div class="title">A Note on the Computer Solution of Connect-4</div> <div class="author"> James D. Allen </div> <div class="periodical"> <em>In Heuristic Programming in AI 1: The First Computer Olympiad</em>, 1989 </div> <div class="periodical"> </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="Allis88" class="col-sm-8"> <div class="title">A knowledge-based approach of Connect-4. The game is solved: White wins</div> <div class="author"> Victor L. Allis </div> <div class="periodical"> <em>Department of Mathematics and Computer Science, Vrije Universiteit, Amsterdam, The Netherlands</em>, 1988 </div> <div class="periodical"> </div> <div class="links"> </div> </div> </div> </li> <li><div class="row"> <div class="col col-sm-2 abbr"> </div> <div id="Tromp94" class="col-sm-8"> <div class="title">UCI Machine Learning Repository. Tromp’s 8-ply database</div> <div class="author"> K. Bache and M. Lichman </div> <div class="periodical"> 2013 </div> <div class="periodical"> </div> <div class="links"> </div> </div> </div> </li></ol> </div> <h2 id="counting-positions-on-the-connect-4-board-with-12-and-less-plies">Counting Positions on the Connect-4 Board with 12 and less Plies</h2> <ul id="count" class="tab" data-tab="1755ee4a-b3ca-4848-aff2-0068fad7888a" data-name="count"> <li class="active" id="count-python"> <a href="#">Python </a> </li> <li id="count-java"> <a href="#">Java </a> </li> </ul> <ul class="tab-content" id="1755ee4a-b3ca-4848-aff2-0068fad7888a" data-name="count"> <li class="active"> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">bitbully</span> <span class="kn">import</span> <span class="n">bitbully_core</span> <span class="k">as</span> <span class="n">bbc</span>

<span class="n">b</span> <span class="o">=</span> <span class="n">bbc</span><span class="p">.</span><span class="nc">Board</span><span class="p">()</span>  <span class="c1"># empty board
</span><span class="n">board_list_3ply</span> <span class="o">=</span> <span class="n">b</span><span class="p">.</span><span class="nf">allPositions</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="bp">True</span><span class="p">)</span>  <span class="c1"># All positions with exactly 3 tokens
</span><span class="nf">len</span><span class="p">(</span><span class="n">board_list_3ply</span><span class="p">)</span>  <span class="c1"># should be 238 according to https://oeis.org/A212693
</span></code></pre></div></div> </li> <li> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kn">package</span> <span class="nn">miscellaneous</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.HashSet</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">c4.ConnectFour</span><span class="o">;</span>

<span class="cm">/**
 * * Always do 3 runs for counting the positions. First, count all positions
 * with a yellow stone in the left-bottom-corner, then with a red stone, and
 * last run when left-bottom-corner is empty. This is done, because the Hashset
 * can be reset after each run, and doesn't need that much memory.
 * 
 * @author Markus Thill
 * 
 */</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">CountPositionsC4</span> <span class="kd">extends</span> <span class="nc">ConnectFour</span> <span class="o">{</span>
	<span class="kd">private</span> <span class="kt">int</span> <span class="n">maxDepth</span> <span class="o">=</span> <span class="mi">6</span><span class="o">;</span>
	<span class="kd">private</span> <span class="kt">boolean</span> <span class="n">countAll</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
	<span class="kd">private</span> <span class="kt">long</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
	<span class="nc">HashSet</span><span class="o">&lt;</span><span class="nc">LongArr</span><span class="o">&gt;</span> <span class="n">hs</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashSet</span><span class="o">&lt;</span><span class="nc">LongArr</span><span class="o">&gt;(</span><span class="mi">16777216</span><span class="o">);</span>

	<span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">long</span> <span class="no">MASK</span> <span class="o">=</span> <span class="mh">0x20000000000</span><span class="no">L</span><span class="o">;</span>
	<span class="kt">int</span> <span class="n">run</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>

	<span class="kd">private</span> <span class="kt">void</span> <span class="nf">tree</span><span class="o">(</span><span class="kt">int</span> <span class="n">depth</span><span class="o">,</span> <span class="kt">int</span> <span class="n">player</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">if</span> <span class="o">(</span><span class="n">depth</span> <span class="o">==</span> <span class="n">maxDepth</span> <span class="o">||</span> <span class="n">countAll</span><span class="o">)</span> <span class="o">{</span>

			<span class="kt">boolean</span> <span class="n">putElement</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
			<span class="k">switch</span> <span class="o">(</span><span class="n">run</span><span class="o">)</span> <span class="o">{</span>
			<span class="k">case</span> <span class="mi">0</span><span class="o">:</span> <span class="c1">// yellow stone in bottom-left corner</span>
				<span class="n">putElement</span> <span class="o">=</span> <span class="o">(</span><span class="n">fieldP1</span> <span class="o">&amp;</span> <span class="no">MASK</span><span class="o">)</span> <span class="o">==</span> <span class="no">MASK</span><span class="o">;</span>
				<span class="k">break</span><span class="o">;</span>
			<span class="k">case</span> <span class="mi">1</span><span class="o">:</span> <span class="c1">// red stone in bottom-left corner</span>
				<span class="n">putElement</span> <span class="o">=</span> <span class="o">(</span><span class="n">fieldP2</span> <span class="o">&amp;</span> <span class="no">MASK</span><span class="o">)</span> <span class="o">==</span> <span class="no">MASK</span><span class="o">;</span>
				<span class="k">break</span><span class="o">;</span>
			<span class="k">case</span> <span class="mi">2</span><span class="o">:</span> <span class="c1">// no stone in bottom-left corner</span>
				<span class="n">putElement</span> <span class="o">=</span> <span class="o">((</span><span class="n">fieldP1</span> <span class="o">|</span> <span class="n">fieldP2</span><span class="o">)</span> <span class="o">&amp;</span> <span class="no">MASK</span><span class="o">)</span> <span class="o">==</span> <span class="mh">0x0</span><span class="no">L</span><span class="o">;</span>
				<span class="k">break</span><span class="o">;</span>

			<span class="o">}</span>

			<span class="k">if</span> <span class="o">(</span><span class="n">putElement</span><span class="o">)</span> <span class="o">{</span>
				<span class="nc">LongArr</span> <span class="n">key</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">LongArr</span><span class="o">(</span><span class="n">fieldP1</span><span class="o">,</span> <span class="n">fieldP2</span><span class="o">);</span>
				<span class="k">if</span> <span class="o">(</span><span class="n">hs</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">key</span><span class="o">))</span> <span class="o">{</span>
					<span class="n">count</span><span class="o">++;</span>
					<span class="k">if</span> <span class="o">((</span><span class="n">count</span> <span class="o">&amp;</span> <span class="mh">0xFFFF</span><span class="no">L</span><span class="o">)</span> <span class="o">==</span> <span class="mh">0xFFFF</span><span class="no">L</span><span class="o">)</span> <span class="o">{</span>
						<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Count until now: "</span> <span class="o">+</span> <span class="n">count</span><span class="o">);</span>
						<span class="nc">System</span><span class="o">.</span><span class="na">gc</span><span class="o">();</span>
					<span class="o">}</span>
				<span class="o">}</span>
			<span class="o">}</span>
			<span class="k">if</span> <span class="o">(</span><span class="n">depth</span> <span class="o">==</span> <span class="n">maxDepth</span><span class="o">)</span>
				<span class="k">return</span><span class="o">;</span>
		<span class="o">}</span>

		<span class="kt">int</span> <span class="n">moves</span><span class="o">[]</span> <span class="o">=</span> <span class="n">generateMoves</span><span class="o">(</span><span class="n">player</span><span class="o">,</span> <span class="kc">true</span><span class="o">);</span>
		<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">moves</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			<span class="k">if</span> <span class="o">(</span><span class="n">canWin</span><span class="o">(</span><span class="n">moves</span><span class="o">[</span><span class="n">i</span><span class="o">]))</span>
				<span class="k">return</span><span class="o">;</span>
			<span class="n">putPiece</span><span class="o">(</span><span class="n">player</span><span class="o">,</span> <span class="n">moves</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
			<span class="n">tree</span><span class="o">(</span><span class="n">depth</span> <span class="o">+</span> <span class="mi">1</span><span class="o">,</span> <span class="n">player</span> <span class="o">==</span> <span class="no">PLAYER1</span> <span class="o">?</span> <span class="no">PLAYER2</span> <span class="o">:</span> <span class="no">PLAYER1</span><span class="o">);</span>
			<span class="n">removePiece</span><span class="o">(</span><span class="n">player</span><span class="o">,</span> <span class="n">moves</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
		<span class="o">}</span>
	<span class="o">}</span>

	<span class="cm">/**
	 * @param toPly
	 *            number of plys, for which number positions are calculated
	 * @param countAll
	 *            count all positions, not only leaf-nodes
	 */</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">countPositions</span><span class="o">(</span><span class="kt">int</span> <span class="n">toPly</span><span class="o">,</span> <span class="kt">boolean</span> <span class="n">countAll</span><span class="o">)</span> <span class="o">{</span>
		<span class="n">resetBoard</span><span class="o">();</span>
		<span class="n">hs</span><span class="o">.</span><span class="na">clear</span><span class="o">();</span>
		<span class="n">maxDepth</span> <span class="o">=</span> <span class="n">toPly</span><span class="o">;</span>
		<span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
		<span class="k">this</span><span class="o">.</span><span class="na">countAll</span> <span class="o">=</span> <span class="n">countAll</span><span class="o">;</span>

		<span class="k">for</span> <span class="o">(</span><span class="n">run</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">run</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="o">;</span> <span class="n">run</span><span class="o">++)</span> <span class="o">{</span>
			<span class="n">resetBoard</span><span class="o">();</span>
			<span class="n">hs</span><span class="o">.</span><span class="na">clear</span><span class="o">();</span>
			<span class="n">maxDepth</span> <span class="o">=</span> <span class="n">toPly</span><span class="o">;</span>
			<span class="n">tree</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="no">PLAYER1</span><span class="o">);</span>
		<span class="o">}</span>

		<span class="k">if</span> <span class="o">(!</span><span class="n">countAll</span><span class="o">)</span>
			<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Number of different positions for exactly "</span>
					<span class="o">+</span> <span class="n">maxDepth</span> <span class="o">+</span> <span class="s">" stones: "</span> <span class="o">+</span> <span class="n">count</span> <span class="o">+</span> <span class="s">""</span><span class="o">);</span>

		<span class="k">else</span>
			<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Number of different positions with 0 to "</span>
					<span class="o">+</span> <span class="n">maxDepth</span> <span class="o">+</span> <span class="s">" stones: "</span> <span class="o">+</span> <span class="n">count</span> <span class="o">+</span> <span class="s">""</span><span class="o">);</span>
	<span class="o">}</span>

	<span class="cm">/**
	 * @param plyRange
	 *            number of plys (range), for which number positions are
	 *            calculated
	 * @param countAll
	 *            count all positions, not only leaf-nodes
	 */</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">countPositions</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">plyRange</span><span class="o">,</span> <span class="kt">boolean</span> <span class="n">countAll</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">plyRange</span><span class="o">[</span><span class="mi">0</span><span class="o">];</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">plyRange</span><span class="o">[</span><span class="mi">1</span><span class="o">];</span> <span class="n">i</span><span class="o">++)</span>
			<span class="n">countPositions</span><span class="o">(</span><span class="n">i</span><span class="o">,</span> <span class="n">countAll</span><span class="o">);</span>
	<span class="o">}</span>

	<span class="kd">private</span> <span class="kd">class</span> <span class="nc">LongArr</span> <span class="o">{</span>
		<span class="kd">private</span> <span class="kt">long</span> <span class="n">arr</span><span class="o">[];</span>

		<span class="nc">LongArr</span><span class="o">(</span><span class="kt">long</span> <span class="n">val1</span><span class="o">,</span> <span class="kt">long</span> <span class="n">val2</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">arr</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">long</span><span class="o">[]</span> <span class="o">{</span> <span class="n">val1</span><span class="o">,</span> <span class="n">val2</span> <span class="o">};</span>
		<span class="o">}</span>

		<span class="kd">public</span> <span class="kt">int</span> <span class="nf">hashCode</span><span class="o">()</span> <span class="o">{</span>
			<span class="k">return</span> <span class="nc">Arrays</span><span class="o">.</span><span class="na">hashCode</span><span class="o">(</span><span class="n">arr</span><span class="o">);</span>
		<span class="o">}</span>

		<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">equals</span><span class="o">(</span><span class="nc">Object</span> <span class="n">obj</span><span class="o">)</span> <span class="o">{</span>
			<span class="nc">LongArr</span> <span class="n">o</span> <span class="o">=</span> <span class="o">(</span><span class="nc">LongArr</span><span class="o">)</span> <span class="n">obj</span><span class="o">;</span>
			<span class="k">return</span> <span class="nc">Arrays</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">arr</span><span class="o">,</span> <span class="n">o</span><span class="o">.</span><span class="na">arr</span><span class="o">);</span>
		<span class="o">}</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="nc">CountPositionsC4</span> <span class="n">cp</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">CountPositionsC4</span><span class="o">();</span>
		<span class="n">cp</span><span class="o">.</span><span class="na">countPositions</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="kc">false</span><span class="o">);</span>
		<span class="c1">// cp.countPositions(new int[]{0,9},false);</span>
	<span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div> </li> </ul>]]></content><author><name></name></author><category term="Programming"/><category term="Connect-4"/><category term="AI"/><category term="tree-search"/><category term="alpha-beta"/><category term="minimax"/><category term="transposition tables"/><category term="opening databases"/><category term="move ordering"/><category term="bitboards"/><summary type="html"><![CDATA[A deep dive into the construction of intelligent agents for Connect-4. This introductory post covers the historical context, motivation, complexity of the game, and foundational concepts behind AI-based approaches—particularly tree search and reinforcement learning methods. Includes a preview of the full 7-part series and links to an open-source Python3/C++ framework.]]></summary></entry><entry><title type="html">Understanding Bootstrap Sampling: Where Euler’s Number Meets Random Forests</title><link href="https://markusthill.github.io/blog/2025/sampling-with-replacement-random-forest/" rel="alternate" type="text/html" title="Understanding Bootstrap Sampling: Where Euler’s Number Meets Random Forests"/><published>2025-06-28T11:37:32+00:00</published><updated>2025-06-28T11:37:32+00:00</updated><id>https://markusthill.github.io/blog/2025/sampling-with-replacement-random-forest</id><content type="html" xml:base="https://markusthill.github.io/blog/2025/sampling-with-replacement-random-forest/"><![CDATA[<p>Consider the following classical problem in combinatorics: We have a bowl containing \(n\) distinct balls, each labeled with a unique number. We randomly draw a ball from the bowl, record its number, and then return it to the bowl before the next draw. The order of selection is not relevant, and this process is repeated \(k\) times. This setup is known as <strong>sampling with replacement</strong> or <strong>combinations with repetition</strong>.</p> <p>The number of distinct samples that can be drawn in this way is given by:</p> \[\binom{n+k-1}{k}\] <p>A particularly interesting case arises when \(k = n\), i.e., we draw \(n\) samples from a set of \(n\) unique elements, always replacing the drawn element. The image below illustrates this scenario: on the left is a set of four distinct elements; on the right are several possible samples obtained by sampling \(k = n = 4\) times with replacement. In total, 35 such combinations exist, as determined by the formula above.</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-06-28-sampling-with-replacement-random-forest/sample_replace-480.webp 480w,/assets/img/2025-06-28-sampling-with-replacement-random-forest/sample_replace-800.webp 800w,/assets/img/2025-06-28-sampling-with-replacement-random-forest/sample_replace-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-06-28-sampling-with-replacement-random-forest/sample_replace.jpg" class="img-fluid rounded z-depth-1 imgcenter" width="90%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 1:</b> Example of drawing \(n\) samples with replacement from a set of \(n\) unique elements. </figcaption> </figure> <p>But where is Euler’s number in this problem, and what does this have to do with Random Forests, as suggested by the title of this blog post?</p> <p>I came across this problem while examining the training process of Random Forests (RF) some time ago. Most implementations of Random Forests generate a bootstrap sample for each decision tree by drawing \(n\) times <em>with replacement</em> from the training data, which contains \(n\) examples. This naturally leads to a simple but interesting question: <strong>How many unique training examples can we expect in such a sample?</strong></p> <p>Because the sampling is done with replacement, some examples are likely to appear more than once. Consequently, the probability of obtaining a sample that contains all \(n\) unique elements is relatively low—assuming the training set is sufficiently large. In fact, this probability is precisely:</p> \[\frac{n!}{n^n}\] <p>On the other hand, the probability of drawing a sample containing only a <strong>single unique element</strong> is even smaller:</p> \[n \left(\frac{1}{n}\right)^n = n^{-(n-1)}\] <p>Intuitively, one might guess that about 50% of the training examples appear in a typical bootstrap sample. As we’ll see shortly, the actual expected proportion is slightly higher.</p> <p>To get an initial intuition, we can run a simple simulation in R.</p> <figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="c1"># How often do we want to repeat the simulation?</span><span class="w">
</span><span class="n">nSimulations</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">10000</span><span class="w">

</span><span class="n">runSimulation</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">n</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="c1"># Function that draws a sample of size n from a set of n values</span><span class="w">
  </span><span class="c1"># and returns the fraction of unique values within the sample</span><span class="w">
  </span><span class="n">sampleWithRep</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">n</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="c1"># sample the set n times with replacement</span><span class="w">
    </span><span class="n">p</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sample</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="n">n</span><span class="p">,</span><span class="w"> </span><span class="n">n</span><span class="p">,</span><span class="w"> </span><span class="n">replace</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">T</span><span class="p">)</span><span class="w">

    </span><span class="c1"># compute the fraction of unique values in this sample</span><span class="w">
    </span><span class="nf">length</span><span class="p">(</span><span class="n">unique</span><span class="p">(</span><span class="n">p</span><span class="p">))</span><span class="w"> </span><span class="o">/</span><span class="w"> </span><span class="n">n</span><span class="w">
  </span><span class="p">}</span><span class="w">

  </span><span class="c1"># Run simulation many times and print the mean value for the</span><span class="w">
  </span><span class="c1"># fraction of unique values within all simulated samples</span><span class="w">
  </span><span class="n">mean</span><span class="p">(</span><span class="n">sapply</span><span class="p">(</span><span class="nf">rep</span><span class="p">(</span><span class="n">n</span><span class="p">,</span><span class="n">nSimulations</span><span class="p">),</span><span class="w"> </span><span class="n">sampleWithRep</span><span class="p">))</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="c1"># Sufficiently large set</span><span class="w">
</span><span class="n">n</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">10000</span><span class="w">

</span><span class="n">cat</span><span class="p">(</span><span class="s2">"On average, each sample contained"</span><span class="p">,</span><span class="w"> </span><span class="p">(</span><span class="n">runSimulation</span><span class="p">(</span><span class="n">n</span><span class="p">)</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="m">100.0</span><span class="p">),</span><span class="w">
    </span><span class="s2">"% of the values of the original set."</span><span class="p">)</span></code></pre></figure> <p>The above R-script should give you a value of approx. 63%, which indicates, that (for a sufficiently large training set, e.g. \(n=10\,000\)) roughly around 2/3 of the original training examples will appear in the sample. To show that this value of around 63% actually converges for increasing \(n\), we can run the following code (using the function defined above):</p> <figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">require</span><span class="p">(</span><span class="n">ggplot2</span><span class="p">)</span><span class="w">
</span><span class="n">require</span><span class="p">(</span><span class="n">scales</span><span class="p">)</span><span class="w"> </span><span class="c1"># For nicer axis labels</span><span class="w">

</span><span class="c1"># Number of simulations for each value of n</span><span class="w">
</span><span class="n">nSimulations</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">10000</span><span class="w">

</span><span class="c1"># generate sequence 1, 2, ..., 9, 10, 20, ..., 90, 100, 200, ..., 900, 1000, ..., 90 000</span><span class="w">
</span><span class="n">Ns</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="n">t</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="m">9</span><span class="p">)</span><span class="w"> </span><span class="o">%o%</span><span class="w"> </span><span class="m">10</span><span class="o">^</span><span class="p">(</span><span class="m">0</span><span class="o">:</span><span class="m">4</span><span class="p">))</span><span class="w">

</span><span class="c1"># Run simulation for different n's</span><span class="w">
</span><span class="n">frac</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">unlist</span><span class="p">(</span><span class="n">mclapply</span><span class="p">(</span><span class="n">Ns</span><span class="p">,</span><span class="w"> </span><span class="n">runSimulation</span><span class="p">,</span><span class="w"> </span><span class="n">mc.cores</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">23</span><span class="p">))</span><span class="w">

</span><span class="c1"># Zip</span><span class="w">
</span><span class="n">result</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">data.frame</span><span class="p">(</span><span class="n">n</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">Ns</span><span class="p">,</span><span class="w"> </span><span class="n">frac</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">frac</span><span class="p">)</span><span class="w">

</span><span class="c1"># Average of the last 10 values, for convergence line</span><span class="w">
</span><span class="n">convergeVal</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">round</span><span class="p">(</span><span class="n">mean</span><span class="p">(</span><span class="n">frac</span><span class="p">[(</span><span class="nf">length</span><span class="p">(</span><span class="n">frac</span><span class="p">)</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="m">10</span><span class="p">)</span><span class="o">:</span><span class="nf">length</span><span class="p">(</span><span class="n">frac</span><span class="p">)]),</span><span class="w"> </span><span class="m">4</span><span class="p">)</span><span class="w">

</span><span class="n">p</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">result</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">n</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">frac</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_line</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_point</span><span class="p">(</span><span class="n">size</span><span class="o">=</span><span class="m">2.5</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">scale_x_log10</span><span class="p">(</span><span class="n">breaks</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">10</span><span class="o">^</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="m">5</span><span class="p">),</span><span class="w"> </span><span class="n">labels</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">comma</span><span class="p">,</span><span class="w"> </span><span class="n">limits</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="m">1.2e5</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">scale_y_continuous</span><span class="p">(</span><span class="n">breaks</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="m">0.9</span><span class="p">,</span><span class="w"> </span><span class="m">0.8</span><span class="p">,</span><span class="w"> </span><span class="m">0.7</span><span class="p">,</span><span class="w"> </span><span class="n">convergeVal</span><span class="p">),</span><span class="w"> </span><span class="n">labels</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">comma</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">ylab</span><span class="p">(</span><span class="s2">"fraction of unique values"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">theme_bw</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">theme</span><span class="p">(</span><span class="n">axis.text</span><span class="o">=</span><span class="n">element_text</span><span class="p">(</span><span class="n">size</span><span class="o">=</span><span class="m">20</span><span class="p">),</span><span class="w">
        </span><span class="n">axis.title</span><span class="o">=</span><span class="n">element_text</span><span class="p">(</span><span class="n">size</span><span class="o">=</span><span class="m">20</span><span class="p">,</span><span class="n">face</span><span class="o">=</span><span class="s2">"bold"</span><span class="p">))</span><span class="w">
</span><span class="n">plot</span><span class="p">(</span><span class="n">p</span><span class="p">)</span></code></pre></figure> <p>The equivalent code in Python would look like this:</p> <figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="n">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="n">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>

<span class="c1"># Number of simulations per value of n
</span><span class="n">n_simulations</span> <span class="o">=</span> <span class="mi">10_000</span> <span class="c1"># takes some time, reduce to 100 for a fast run
</span>
<span class="k">def</span> <span class="nf">run_simulation</span><span class="p">(</span><span class="n">n</span><span class="p">:</span> <span class="nb">int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nb">float</span><span class="p">:</span>
    <span class="sh">"""</span><span class="s">
    Draw n samples with replacement from a set of size n,
    repeated n_simulations times, and return the average fraction
    of unique elements per sample.
    </span><span class="sh">"""</span>
    <span class="n">fractions</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">n_simulations</span><span class="p">):</span>
        <span class="n">sample</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="nf">choice</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="n">n</span><span class="p">,</span> <span class="n">replace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
        <span class="n">unique_fraction</span> <span class="o">=</span> <span class="nf">len</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">unique</span><span class="p">(</span><span class="n">sample</span><span class="p">))</span> <span class="o">/</span> <span class="n">n</span>
        <span class="n">fractions</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">unique_fraction</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">np</span><span class="p">.</span><span class="nf">mean</span><span class="p">(</span><span class="n">fractions</span><span class="p">)</span>

<span class="c1"># Create values of n: 1–9, 10, 20, ..., 90, 100, 200, ..., 90_000
</span><span class="n">Ns</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">unique</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">concatenate</span><span class="p">([</span><span class="n">np</span><span class="p">.</span><span class="nf">arange</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span> <span class="o">*</span> <span class="mi">10</span><span class="o">**</span><span class="n">e</span> <span class="k">for</span> <span class="n">e</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">5</span><span class="p">)]))</span>

<span class="c1"># Run simulations
</span><span class="n">fractions</span> <span class="o">=</span> <span class="p">[</span><span class="nf">run_simulation</span><span class="p">(</span><span class="n">n</span><span class="p">)</span> <span class="k">for</span> <span class="n">n</span> <span class="ow">in</span> <span class="n">Ns</span><span class="p">]</span>

<span class="c1"># Estimate convergence value from last 10 results
</span><span class="n">convergence_value</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">round</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">mean</span><span class="p">(</span><span class="n">fractions</span><span class="p">[</span><span class="o">-</span><span class="mi">10</span><span class="p">:]),</span> <span class="mi">4</span><span class="p">)</span>

<span class="c1"># Plot results
</span><span class="n">plt</span><span class="p">.</span><span class="nf">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">6</span><span class="p">))</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">plot</span><span class="p">(</span><span class="n">Ns</span><span class="p">,</span> <span class="n">fractions</span><span class="p">,</span> <span class="n">marker</span><span class="o">=</span><span class="sh">'</span><span class="s">o</span><span class="sh">'</span><span class="p">,</span> <span class="n">linestyle</span><span class="o">=</span><span class="sh">'</span><span class="s">-</span><span class="sh">'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">xscale</span><span class="p">(</span><span class="sh">'</span><span class="s">log</span><span class="sh">'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">xlabel</span><span class="p">(</span><span class="sh">"</span><span class="s">n (log scale)</span><span class="sh">"</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">14</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">ylabel</span><span class="p">(</span><span class="sh">"</span><span class="s">Fraction of unique values</span><span class="sh">"</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">14</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">title</span><span class="p">(</span><span class="sh">"</span><span class="s">Convergence of Unique Sample Fraction in Bootstrap Sampling</span><span class="sh">"</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">16</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">axhline</span><span class="p">(</span><span class="n">convergence_value</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="sh">'</span><span class="s">gray</span><span class="sh">'</span><span class="p">,</span> <span class="n">linestyle</span><span class="o">=</span><span class="sh">'</span><span class="s">--</span><span class="sh">'</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="sa">f</span><span class="sh">'</span><span class="s">Converges to ~</span><span class="si">{</span><span class="n">convergence_value</span><span class="si">}</span><span class="sh">'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">legend</span><span class="p">()</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">grid</span><span class="p">(</span><span class="bp">True</span><span class="p">,</span> <span class="n">which</span><span class="o">=</span><span class="sh">"</span><span class="s">both</span><span class="sh">"</span><span class="p">,</span> <span class="n">ls</span><span class="o">=</span><span class="sh">"</span><span class="s">--</span><span class="sh">"</span><span class="p">,</span> <span class="n">linewidth</span><span class="o">=</span><span class="mf">0.5</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">tight_layout</span><span class="p">()</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span></code></pre></figure> <p>Note that I run the code on a multicore system, since the computation on a single core would require a lot of time. The result of the above code is shown in the following graph:</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-06-28-sampling-with-replacement-random-forest/convergence_sampling-480.webp 480w,/assets/img/2025-06-28-sampling-with-replacement-random-forest/convergence_sampling-800.webp 800w,/assets/img/2025-06-28-sampling-with-replacement-random-forest/convergence_sampling-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-06-28-sampling-with-replacement-random-forest/convergence_sampling.png" class="img-fluid rounded z-depth-1 imgcenter" width="90%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 2:</b> Convergence for large sample sizes. </figcaption> </figure> <p>Obviously, for a training set and sample size of \(n=1\), we always have one unique value in the sample—i.e., 100% uniqueness. As \(n\) increases, the expected fraction of unique elements in the sample converges to approximately 0.6321, a value that might look familiar from various fields such as physics or probability theory. We will soon uncover the origin of this constant.</p> <p>After performing the simulations, we can now analytically calculate the expected number of unique examples in a sample drawn with replacement. Consider the random variable \(X_i\) for each example \(i \in \{1, \ldots, n\}\), defined as:</p> <ul> <li>\(X_i = 1\) if example \(i\) is selected at least once,</li> <li>\(X_i = 0\) otherwise.</li> </ul> <p>The probability \(P(X_i=1)\) is given by:</p> \[\begin{align} P(X_i=1) &amp;= 1 - P(X_i=0) \end{align}\] <p>It is easier to calculate \(P(X_i=0)\), the probability that example \(i\) is <em>not</em> selected in any of the \(n\) draws. Since each draw has probability \(\frac{n-1}{n}\) of avoiding \(i\), we have:</p> \[P(X_i=0) = \left(\frac{n-1}{n}\right)^n\] <p>Therefore, the probability \(P(X_i=1)\) becomes:</p> \[P(X_i=1) = 1 - \left(\frac{n-1}{n}\right)^n\] <p>As \(n\) approaches infinity, this limit converges to:</p> \[\begin{align} \lim_{n \to \infty} P(X_i=1) &amp;= 1 - \lim_{n \to \infty} \left(1 - \frac{1}{n}\right)^n \\ &amp;= 1 - e^{-1} \\ &amp;\approx 0.6321206 \end{align}\] <p>This result explains why Random Forests leave out roughly \(\frac{1}{e} \approx 36.8\%\) of the training examples in each bootstrap sample. These omitted samples form the so-called <strong>out-of-bag (OOB)</strong> data, which can be used as an unbiased estimate of the model’s generalization error.</p>]]></content><author><name></name></author><category term="stats"/><category term="ML"/><category term="math"/><summary type="html"><![CDATA[A common problem involves drawing a sample of size n from a set of n elements, with replacement. For example, in Random Forests, each decision tree is trained on a bootstrap sample drawn n times with replacement from the training data. A natural question is: how many unique examples can we expect in such a sample? Since sampling is done with replacement, some examples are likely selected multiple times, while others may not be selected at all.]]></summary></entry><entry><title type="html">Beyond 3D: Generalizing the Vector Cross Product</title><link href="https://markusthill.github.io/blog/2025/a-generalization-of-the-vector-cross-product/" rel="alternate" type="text/html" title="Beyond 3D: Generalizing the Vector Cross Product"/><published>2025-05-06T18:33:46+00:00</published><updated>2025-05-06T18:33:46+00:00</updated><id>https://markusthill.github.io/blog/2025/a-generalization-of-the-vector-cross-product</id><content type="html" xml:base="https://markusthill.github.io/blog/2025/a-generalization-of-the-vector-cross-product/"><![CDATA[<p>\( \def\matr#1{\mathbf #1} \def\tp{\mathsf T} \)</p> <p>Imagine you have two 3-dimensional vectors, \(\vec a\) and \(\vec b\), and you want to compute a third vector that is orthogonal to both. In three dimensions, this is straightforward: the cross product \(\vec a \times \vec b\) produces exactly such a vector. It is defined by the familiar formula:</p> \[\vec a \times \vec b = \begin{pmatrix} a_2b_3 - a_3b_2 \\ a_3b_1 - a_1b_3 \\ a_1b_2 - a_2b_1 \\ \end{pmatrix}.\] <p>In two dimensions, the situation is slightly different. Given a single vector \(\vec a\), its orthogonal counterpart can be obtained via a simple linear transformation:</p> \[\begin{pmatrix} a_1 \\ a_2 \\ \end{pmatrix} \mapsto \begin{pmatrix} a_2 \\ -a_1 \\ \end{pmatrix}\] <p>It’s easy to verify that the dot product of these two vectors is zero, confirming orthogonality.</p> <p>But what happens in higher dimensions? How would you define a cross product in 5 dimensions—or even in 100? Is there a generalization of the cross product that still yields a vector orthogonal to a given set of input vectors?</p> <p>As it turns out, computing a generalized cross product in higher dimensions is not as difficult as it might seem. In an \(n\)-dimensional space, \(\mathbb{R}^n\), the generalized cross product takes \(n - 1\) input vectors, each of length \(n\). These vectors must be pairwise linearly independent—otherwise, the result will be the zero vector. This condition ensures that the cross product spans the space orthogonal to all input vectors. Hence, we have a set of vectors</p> \[\vec u_1 =\begin{pmatrix} u_{11} \\ u_{21} \\ \vdots \\ u_{n1} \end{pmatrix}, \vec u_2= \begin{pmatrix} u_{12} \\ u_{22} \\ \vdots \\ u_{n2} \end{pmatrix}, \cdots, \vec u_{n-1} = \begin{pmatrix} u_{1(n-1)} \\ u_{2(n-1)} \\ \vdots \\ u_{n(n-1)} \end{pmatrix}.\] <p>Let us write the cross product as:</p> \[{⨉}_{j=1}^{n-1} \vec u_j = \vec u_1 \times \vec u_2 \times \cdots \times \vec u_{n-1}\] <p>Now let us arrange all vectors \(\vec u_1 \cdots \vec u_{n-1}\) in a matrix. Additionally, we add a standard basis vector \(\vec e_i\) for dimension \(i\) as a first column in the matrix:</p> \[\matr U^i = \begin{bmatrix} \vec e_i &amp; \vec u_1 &amp; \cdots &amp; \vec u_{n-1} \end{bmatrix} = \begin{bmatrix} \mathbf e_1 &amp; u_{11} &amp; \cdots &amp; u_{1(n-1)}\\ \mathbf e_2 &amp; u_{21} &amp; \cdots &amp; u_{2(n-1)}\\ \vdots &amp; \vdots &amp; \ddots &amp; \vdots\\ \mathbf e_n &amp; u_{n1} &amp; \cdots &amp; u_{n(n-1)} \end{bmatrix}\] <p>The standard basis vector \(\vec e_i\) has magnitude 1 and points along the \(i\)‑th coordinate axis. By inserting \(\vec e_i\) as the first column in our matrix, we obtain a slightly different matrix \(\matr U^i\) for each dimension \(i\).</p> <p>The generalized cross product can then be expressed in terms of determinants. While we won’t go into the full derivation here, the key idea is that each component of the resulting vector corresponds to the determinant of one of these matrices. Specifically, the \(i\)‑th component of the cross product is given by:</p> \[\Big({⨉}_{j=1}^{n-1} \vec u_j \Big ) _ {i} = \mbox{det}(\matr U_i) = |\matr U_i|\] <p>Overall, we receive a vector in the following form:</p> \[{⨉}_{j=1}^{n-1} \vec u_j = \begin{pmatrix} \mbox{det}(\matr U_1) \\ \mbox{det}(\matr U_2) \\ \vdots \\ \mbox{det}(\matr U_n) \\ \end{pmatrix}\] <p>Since the first column of \(\matr U_i\) contains only a single nonzero entry (a 1 in row \(i\)), the determinant can be efficiently computed using Laplace expansion along the first column. This reduces the computation to a single minor, making the process both simple and elegant.</p> <p>Let’s illustrate this with our initial example using the vectors:</p> \[\vec a =\begin{pmatrix} a_{1} \\ a_{2} \\ a_3 \end{pmatrix}, \vec b =\begin{pmatrix} b_{1} \\ b_{2} \\ b_3 \end{pmatrix}.\] <p>We first create the matrix \(\matr U_i\), which is:</p> \[\matr U_i =\begin{bmatrix} \mathbf e_1 &amp; a_{1} &amp; b_{1}\\ \mathbf e_2 &amp; a_{2} &amp; b_{2}\\ \mathbf e_3 &amp; a_3 &amp; b_3 \end{bmatrix}.\] <p>Then, we can compute the first element of the cross product vector for axis \(i=1\):</p> \[\begin{align*} \mbox{det}(\matr U_1) &amp;= \begin{vmatrix} \mathbf 1 &amp; a_{1} &amp; b_{1}\\ \mathbf 0 &amp; a_{2} &amp; b_{2}\\ \mathbf 0 &amp; a_3 &amp; b_3 \end{vmatrix} \\ &amp; = 1 \cdot \begin{vmatrix} a_{2} &amp; b_{2}\\ a_3 &amp; b_3 \end{vmatrix} - 0 \cdot \begin{vmatrix} a_{1} &amp; b_{1}\\ a_3 &amp; b_3 \end{vmatrix} + 0 \cdot \begin{vmatrix} a_{1} &amp; b_{1}\\ a_{2} &amp; b_{2} \end{vmatrix} \\ &amp; = a_2 b_3 - a_3 b_2 . \end{align*}\] <p>For the other two axis \(i=2\) and \(i=3\) we follow the same procedure and get:</p> \[\begin{align*} \mbox{det}(\matr U_2) &amp;= \begin{vmatrix} \mathbf 0 &amp; a_{1} &amp; b_{1}\\ \mathbf 1 &amp; a_{2} &amp; b_{2}\\ \mathbf 0 &amp; a_3 &amp; b_3 \end{vmatrix} \\ &amp; = 0 \cdot \begin{vmatrix} a_{2} &amp; b_{2}\\ a_3 &amp; b_3 \end{vmatrix} - 1 \cdot \begin{vmatrix} a_{1} &amp; b_{1}\\ a_3 &amp; b_3 \end{vmatrix} + 0 \cdot \begin{vmatrix} a_{1} &amp; b_{1}\\ a_{2} &amp; b_{2} \end{vmatrix} \\ &amp; = a_3 b_1 - a_1 b_3 \end{align*}\] \[\begin{align*} \mbox{det}(\matr U_3) &amp;= \begin{vmatrix} \mathbf 0 &amp; a_{1} &amp; b_{1}\\ \mathbf 0 &amp; a_{2} &amp; b_{2}\\ \mathbf 1 &amp; a_3 &amp; b_3 \end{vmatrix} \\ &amp; = 0 \cdot \begin{vmatrix} a_{2} &amp; b_{2}\\ a_3 &amp; b_3 \end{vmatrix} - 0 \cdot \begin{vmatrix} a_{1} &amp; b_{1}\\ a_3 &amp; b_3 \end{vmatrix} + 1 \cdot \begin{vmatrix} a_{1} &amp; b_{1}\\ a_{2} &amp; b_{2} \end{vmatrix} \\ &amp; = a_1 b_2 - a_2 b_1 . \end{align*}\] <p>Summarizing the previous results, we receive for the cross product \(\vec a \times \vec b\):</p> \[\vec a \times \vec b = \begin{pmatrix} \mbox{det}(\matr U_1) \\ \mbox{det}(\matr U_2) \\ \mbox{det}(\matr U_3) \\ \end{pmatrix} = \begin{pmatrix} a_2 b_3 - a_3 b_2 \\ a_3 b_1 - a_1 b_3 \\ a_1 b_2 - a_2 b_1 \\ \end{pmatrix}\] <p>which is exactly the same as we have already noted in the beginning.</p> <p>Note that the base R function <code class="language-plaintext highlighter-rouge">crossprod()</code> does not compute the vector cross product as discussed in this post—it actually returns the matrix product \(A^\top B\). To compute the generalized cross product in arbitrary dimensions, I provide a custom R function below that implements the determinant-based method described above.</p> <figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">opX</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">...</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">u</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">list</span><span class="p">(</span><span class="n">...</span><span class="p">)</span><span class="w">
  </span><span class="c1">#</span><span class="w">
  </span><span class="c1"># check length of all vectors</span><span class="w">
  </span><span class="c1">#</span><span class="w">
  </span><span class="n">len</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">unlist</span><span class="p">(</span><span class="n">lapply</span><span class="p">(</span><span class="n">u</span><span class="p">,</span><span class="w"> </span><span class="n">length</span><span class="p">))</span><span class="w">
  </span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nf">all</span><span class="p">(</span><span class="n">len</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="n">len</span><span class="p">[</span><span class="m">1</span><span class="p">]))</span><span class="w"> </span><span class="n">stop</span><span class="p">(</span><span class="s2">"All vectors must be of same length!"</span><span class="p">)</span><span class="w">
  </span><span class="n">len</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">len</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w">
  </span><span class="c1">#</span><span class="w">
  </span><span class="c1"># Check, if correct number of vectors is provided</span><span class="w">
  </span><span class="c1">#</span><span class="w">
  </span><span class="k">if</span><span class="p">(</span><span class="nf">length</span><span class="p">(</span><span class="n">u</span><span class="p">)</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="p">(</span><span class="n">len</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="m">1</span><span class="p">)</span><span class="w"> </span><span class="p">)</span><span class="w"> </span><span class="n">stop</span><span class="p">(</span><span class="s2">"For vector length "</span><span class="p">,</span><span class="n">len</span><span class="p">,</span><span class="s2">" you have to provide "</span><span class="p">,</span><span class="n">len</span><span class="m">-1</span><span class="p">,</span><span class="w"> </span><span class="s2">" vectors!"</span><span class="p">)</span><span class="w">
  </span><span class="n">U</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">do.call</span><span class="p">(</span><span class="n">cbind</span><span class="p">,</span><span class="w"> </span><span class="n">u</span><span class="p">)</span><span class="w">

  </span><span class="c1">#</span><span class="w">
  </span><span class="c1"># Compute the determinants based on the minors of U and Laplace's formula</span><span class="w">
  </span><span class="c1"># The determinants form the new vector which is the result of the cross-product</span><span class="w">
  </span><span class="c1">#</span><span class="w">
  </span><span class="n">sapply</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="n">len</span><span class="p">,</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">i</span><span class="p">)</span><span class="w"> </span><span class="p">(</span><span class="m">-1</span><span class="p">)</span><span class="o">^</span><span class="p">(</span><span class="n">i</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="m">1</span><span class="p">)</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="n">det</span><span class="p">(</span><span class="n">as.matrix</span><span class="p">(</span><span class="n">U</span><span class="p">[</span><span class="o">-</span><span class="n">i</span><span class="p">,])))</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="c1">#</span><span class="w">
</span><span class="c1"># Run an example</span><span class="w">
</span><span class="c1">#</span><span class="w">
</span><span class="n">a</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="m">2</span><span class="p">,</span><span class="m">3</span><span class="p">,</span><span class="m">4</span><span class="p">)</span><span class="w">
</span><span class="n">b</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="m">5</span><span class="p">,</span><span class="m">6</span><span class="p">,</span><span class="m">7</span><span class="p">,</span><span class="m">8</span><span class="p">)</span><span class="w">
</span><span class="n">c</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="m">9</span><span class="p">,</span><span class="m">10</span><span class="p">,</span><span class="m">-11</span><span class="p">,</span><span class="m">12</span><span class="p">)</span><span class="w">

</span><span class="n">print</span><span class="p">(</span><span class="n">opX</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">c</span><span class="p">))</span><span class="w">

</span><span class="c1">#</span><span class="w">
</span><span class="c1"># Check the orthogonality property</span><span class="w">
</span><span class="c1">#</span><span class="w">
</span><span class="n">print</span><span class="p">(</span><span class="n">t</span><span class="p">(</span><span class="n">a</span><span class="p">)</span><span class="w"> </span><span class="o">%*%</span><span class="w"> </span><span class="n">opX</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">c</span><span class="p">))</span><span class="w">
</span><span class="n">print</span><span class="p">(</span><span class="n">t</span><span class="p">(</span><span class="n">b</span><span class="p">)</span><span class="w"> </span><span class="o">%*%</span><span class="w"> </span><span class="n">opX</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">c</span><span class="p">))</span><span class="w">
</span><span class="n">print</span><span class="p">(</span><span class="n">t</span><span class="p">(</span><span class="n">c</span><span class="p">)</span><span class="w"> </span><span class="o">%*%</span><span class="w"> </span><span class="n">opX</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">c</span><span class="p">))</span></code></pre></figure> ]]></content><author><name></name></author><category term="vectors"/><category term="cross product"/><category term="high dimensions"/><category term="generalization"/><category term="multi dimensionality"/><summary type="html"><![CDATA[Imagine you are working in three-dimensional space and have two directions. You want to find a third direction that is perpendicular to both of them. In this setting, there's a well-known solution: the cross product. When applied to the two original directions, it produces a new one that is exactly orthogonal to both.]]></summary></entry><entry><title type="html">Math Challenge: The Sequence of Fibonacho</title><link href="https://markusthill.github.io/blog/2025/the-fibonacho-sequence/" rel="alternate" type="text/html" title="Math Challenge: The Sequence of Fibonacho"/><published>2025-01-05T12:16:00+00:00</published><updated>2025-01-05T12:16:00+00:00</updated><id>https://markusthill.github.io/blog/2025/the-fibonacho-sequence</id><content type="html" xml:base="https://markusthill.github.io/blog/2025/the-fibonacho-sequence/"><![CDATA[<figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/fibonacho-16-9.webp" sizes="95vw"/> <img src="/assets/img/fibonacho-16-9.webp" class="img-fluid rounded z-depth-1 imgcenter" width="90%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 1:</b> How OpenAI’s OpenAI’s DALL·E model imagines the Fibonacho Sequence. </figcaption> </figure> <p>The Fibonacho Sequence is a intriguing twist on the classical Fibonacci numbers. Unlike its better-known cousin, the Fibonacho Sequence does not follow the same simple recurrence relation. Instead, it introduces a slightly different structure, making it an entertaining little puzzle for math enthusiasts and programmers alike.</p> <p>In this challenge, you will explore the sequence’s definition, uncover its recurrence relation, and tackle a series of progressively more complex questions. Starting with small values and scaling up to massive indices, the goal is to unlock the underlying properties of this unique sequence, culminating in the analysis of numbers with hundreds of digits.</p> <p>Are you ready to dive into the challenge and see how far your skills can take you? Let’s get started!</p> <h2 id="sequence-definition-and-initial-values">Sequence Definition and Initial Values</h2> <p>The Fibonacho Sequence starts with a few predefined values and grows according to a hidden pattern. Unlike the Fibonacci sequence, which has a simple and elegant formula, the Fibonacho Sequence is less straightforward. Below is a table of the first few elements, \(F_n\) , of the <strong>Fibonacho Sequence</strong>:</p> <table> <thead> <tr> <th>n</th> <th>0</th> <th>1</th> <th>2</th> <th>3</th> <th>4</th> <th>5</th> <th>6</th> <th>7</th> <th>8</th> <th>9</th> <th>10</th> <th>11</th> <th>12</th> <th>13</th> <th>14</th> <th>15</th> <th>16</th> <th>17</th> <th>18</th> <th>19</th> <th>20</th> </tr> </thead> <tbody> <tr> <td>F<sub>n</sub></td> <td>0</td> <td>0</td> <td>0</td> <td>1</td> <td>1</td> <td>1</td> <td>2</td> <td>4</td> <td>6</td> <td>9</td> <td>15</td> <td>25</td> <td>40</td> <td>64</td> <td>104</td> <td>169</td> <td>273</td> <td>441</td> <td>714</td> <td>115</td> <td>1870</td> </tr> </tbody> </table> <p></p> <p>Furthermore, you are given \(F_{100} = 97905340104793732225\). Notice how the sequence grows, but not in the same way as the Fibonacci numbers.</p> <h2 id="part-1-understanding-the-problem--deriving-the-recurrence-relation">Part 1: Understanding the Problem &amp; Deriving the Recurrence Relation</h2> <p>The challenge begins with uncovering the recurrence relation that governs the Fibonacho Sequence. A recurrence relation is a formula that expresses each term of a sequence as a function of its preceding terms. However, unlike the Fibonacci sequence’s simple \(F_n = F_{n-1} + F_{n-2}\), the Fibonacho Sequence defies such simplicity. Your task is to deduce the recurrence relation by analyzing the given terms.</p> <p>Which general recurrence relation describes the sequence above?</p> <p><strong>Note again:</strong> It is <em>NOT</em> the recurrence relation for the <em>Fibonacci numbers</em>, since, for example, \(F_{17} \ne F_{15} + F_{16}\).</p> <h2 id="part-2-predicting-digits-at-larger-indices">Part 2: Predicting Digits at Larger Indices</h2> <p>Now that you’ve explored the recurrence relation, it’s time to tackle larger terms in the sequence. You are given that:</p> <ul> <li>The <strong>first 10 digits</strong> of \(F_{1000}\) are \(1201386106\)</li> <li>The <strong>last 10 digits</strong> of \(F_{1000}\) are \(1044856625\)</li> </ul> <p>What are the <strong>first</strong> and <strong>last</strong> \(10\) digits of \(F_{10000}\)?</p> <h2 id="part-3-scaling-up">Part 3: Scaling Up!</h2> <p>In this part, the challenge becomes even more daunting. You are now tasked with examining the <strong>first</strong> and <strong>last</strong> \(\mathbf{100}\) digits of massive terms like \(F_{7^7} = F_{823543}\).</p> <p>For reference, you are given the first and last digits of \(F_{7^{7}} = F_{823543}\):</p> <table> <thead> <tr> <th>\(F_{7^{7}}\)</th> <th>digits</th> </tr> </thead> <tbody> <tr> <td>first 100</td> <td>2513371832737186384322330481943752132726740483311444508185490845781280728438771549838156508593799526</td> </tr> <tr> <td>last 100</td> <td>739646476432651186655886864569054345315965466581269946302070897583058681065487248400966951495110916</td> </tr> </tbody> </table> <p></p> <p>What are the <strong>first</strong> and <strong>last</strong> \(100\) digits of \(F_{4^{4^4}}\), \(F_{5^{5^5}}\), and \(F_{6^{6^6}}\) ?</p> <hr/> <p>Stay tuned, as I will reveal the solution and dive deeper into a few properties of the Fibonacho Sequence in a future blog post!</p>]]></content><author><name></name></author><category term="fibonacci"/><category term="number theory"/><category term="math"/><category term="python"/><category term="programming"/><summary type="html"><![CDATA[The Fibonacho Sequence is a playful and intriguing twist on the classical Fibonacci numbers. Unlike its better-known cousin, the Fibonacho Sequence does not follow the same simple recurrence relation. Instead, it introduces a slightly different structure, making it a entertaining puzzle for math enthusiasts and programmers alike. Are you ready to dive into the challenge?]]></summary></entry><entry><title type="html">Short Notes: Upgrade Your GitHub Workflow - Migrate from HTTPS to SSH</title><link href="https://markusthill.github.io/blog/2024/migrating-git-from-https-to-ssh/" rel="alternate" type="text/html" title="Short Notes: Upgrade Your GitHub Workflow - Migrate from HTTPS to SSH"/><published>2024-12-21T12:16:00+00:00</published><updated>2024-12-21T12:16:00+00:00</updated><id>https://markusthill.github.io/blog/2024/migrating-git-from-https-to-ssh</id><content type="html" xml:base="https://markusthill.github.io/blog/2024/migrating-git-from-https-to-ssh/"><![CDATA[<p>If you’re currently using HTTPS to interact with your GitHub repositories and want to switch to SSH for better security and convenience, this guide walks you through the migration process step-by-step.</p> <hr/> <h2 id="why-switch-to-ssh">Why Switch to SSH?</h2> <p>SSH allows secure, password-less authentication using a key pair. Unlike HTTPS, you won’t need to repeatedly enter your GitHub credentials, making your workflow faster and more secure.</p> <hr/> <h2 id="steps-to-migrate-from-https-to-ssh">Steps to Migrate from HTTPS to SSH</h2> <h3 id="1-generate-a-new-ssh-key">1. Generate a New SSH Key</h3> <p>First, create a new SSH key if you don’t already have one: <code class="language-plaintext highlighter-rouge">ssh-keygen -t rsa -b 4096 -C "your_email@example.com"</code></p> <ul> <li>Replace <code class="language-plaintext highlighter-rouge">"your_email@example.com"</code> with your GitHub email.</li> <li>Follow the prompts to save the key to the default location and set a passcode (optional but recommended).</li> </ul> <h3 id="2-add-your-ssh-key-to-github">2. Add Your SSH Key to GitHub</h3> <p>Copy the public key to your clipboard:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>pbcopy &lt; ~/.ssh/id_rsa.pub
</code></pre></div></div> <p>If <code class="language-plaintext highlighter-rouge">pbcopy</code> is unavailable, use:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cat ~/.ssh/id_rsa.pub
</code></pre></div></div> <p>Then, add the key to your GitHub account:</p> <ul> <li>Go to <strong>Settings</strong> &gt; <strong>SSH and GPG Keys</strong> on GitHub.</li> <li>Click <strong>New SSH Key</strong>, paste the key, and save.</li> </ul> <h3 id="3-remove-stored-github-credentials-optional">3. Remove Stored GitHub Credentials (Optional)</h3> <p>If you’ve used HTTPS before, your system might have cached your GitHub credentials. To avoid conflicts:</p> <ul> <li>On macOS or Linux: Look for credentials in your credential manager or <code class="language-plaintext highlighter-rouge">~/.git-credentials</code> and remove them.</li> <li>On Windows: Clear stored credentials via the Credential Manager.</li> </ul> <p>This step is optional but helps ensure a clean transition to SSH.</p> <h3 id="4-update-the-remote-url">4. Update the Remote URL</h3> <p>Convert your Git repository’s remote URL from HTTPS to SSH:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git remote set-url origin &lt;SSH url&gt;
</code></pre></div></div> <p>For example, if your HTTPS URL is: <code class="language-plaintext highlighter-rouge">https://github.com/username/repo_name.git</code></p> <p>Convert it to: <code class="language-plaintext highlighter-rouge">git@github.com:username/repo_name.git</code></p> <h3 id="5-verify-the-new-remote-url">5. Verify the New Remote URL</h3> <p>Ensure your repository is now configured to use SSH:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git remote -v
</code></pre></div></div> <p>The output should display the SSH URL.</p> <h3 id="6-test-your-ssh-connection">6. Test Your SSH Connection</h3> <p>Run the following command to test the SSH connection:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ssh -T git@github.com
</code></pre></div></div> <p>If everything is set up correctly, you’ll see a message like: Hi username! You’ve successfully authenticated, but GitHub does not provide shell access.</p> <h3 id="7-enter-your-ssh-key-passcode">7. Enter Your SSH Key Passcode</h3> <p>The first time you interact with GitHub via SSH, you’ll be prompted for your key’s passcode if you set one.</p> <hr/> <p>Switching from HTTPS to SSH not only improves security but also streamlines your Git workflow by eliminating the need for repeated credential input. Follow these steps to make the transition smooth and hassle-free.</p> <p>Happy coding!</p>]]></content><author><name></name></author><category term="git"/><category term="ssh"/><category term="https"/><summary type="html"><![CDATA[A step-by-step guide to transitioning from HTTPS to SSH for secure and seamless GitHub repository management.]]></summary></entry></feed>