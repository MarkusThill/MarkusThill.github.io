<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://markusthill.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://markusthill.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-04-14T01:20:42+00:00</updated><id>https://markusthill.github.io/feed.xml</id><title type="html">blank</title><subtitle>Personal notes and code snippets on math, ML &amp; programming. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">Choosing a Voltage Divider Resistor for a Light Dependent Resistor</title><link href="https://markusthill.github.io/blog/2024/voltage-divider/" rel="alternate" type="text/html" title="Choosing a Voltage Divider Resistor for a Light Dependent Resistor"/><published>2024-03-31T00:20:00+00:00</published><updated>2024-03-31T00:20:00+00:00</updated><id>https://markusthill.github.io/blog/2024/voltage-divider</id><content type="html" xml:base="https://markusthill.github.io/blog/2024/voltage-divider/"><![CDATA[<p>Imagine that you are planning to use a Light Dependent Resistor (LDR) for your new IoT prototype in order to detect whether or not a lamp is turned on in a (otherwise dark) room. A common way to solve this problem is the usage of a voltage divider circuit in the following form:</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2024-03-31-choosing-a-voltage-divider-resistor-for-a-ldr/VoltageDivider1-480.webp 480w,/assets/img/2024-03-31-choosing-a-voltage-divider-resistor-for-a-ldr/VoltageDivider1-800.webp 800w,/assets/img/2024-03-31-choosing-a-voltage-divider-resistor-for-a-ldr/VoltageDivider1-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2024-03-31-choosing-a-voltage-divider-resistor-for-a-ldr/VoltageDivider1.png" class="img-fluid rounded z-depth-1 imgcenter" width="auto" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 1:</b> Voltage divider circuit with a LDR and a resistor. </figcaption> </figure> <p>In this blog post, we will discuss how to choose the voltage divider’s resistances appropriately. </p> <p>In the above diagram, the LDR is denoted as \(R^*\), and \(R\) is another resistance required to divide the compliance voltage \(U_0\). Depending on the light that falls onto the LDR, the resistance of \(R^*\) and the voltage \(U\) change. The voltage \(U\) can be converted into a discrete value using an Analog-to-Digital-Converter (ADC), and the retrieved value can then be evaluated in a micro-controller (μC) program to determine the current lighting conditions in the room. In the above diagram, if the light is very bright, \(U\) would be large (close to \(U_0\)). If no light falls onto the LDR (in a dark room), the voltage \(U\) will tend towards small values. If you want to achieve the opposite behavior (small value of \(U\) for bright light), you can swap the resistor \(R\) with the LDR. This is illustrated in the figure below:</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2024-03-31-choosing-a-voltage-divider-resistor-for-a-ldr/VoltageDivider2-480.webp 480w,/assets/img/2024-03-31-choosing-a-voltage-divider-resistor-for-a-ldr/VoltageDivider2-800.webp 800w,/assets/img/2024-03-31-choosing-a-voltage-divider-resistor-for-a-ldr/VoltageDivider2-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2024-03-31-choosing-a-voltage-divider-resistor-for-a-ldr/VoltageDivider2.png" class="img-fluid rounded z-depth-1 imgcenter" width="auto" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 2:</b> Same as Fig. 1, however, in this diagram the LDR was swapped with the resistor. </figcaption> </figure> <p>However, there is one major problem when using a voltage divider: Typically, one would like \(U\) to cover a wide range of values, ideally between 0V and \(U_0\) (\(U \in [0V, U_0]\)), independently of the range of \(R^*\). This is, for example, important when ADCs are used since an ADC only has a limited resolution. If \(U\) only changes in a small range for different lighting conditions, then we do not have a sufficient signal-to-noise ratio, and it will become very difficult to distinguish bright from dark. Let us assume, for example, that in our configuration (first diagram, with \(U_0\) = 5V), the voltage \(U\) varies between 3.5V (very dark) and 4.5V (very bright). If we are now using an 8-bit ADC (assuming that the reference voltage of the ADC is also \(U_0\)), we have a voltage resolution of \(5V/256\), which is approx. \(0.02V\). But since the input voltage only moves around in the interval \([3.5V, 4.5V]\), the ADC will only generate an interval of about \(1V/0.02V=50\) distinguishable values, although 256 would be theoretically possible. Taking slightly changing lighting conditions and other noise sources into account, this interval containing 50 discrete values is rather small. It will most likely lead to false assertions about the state of the lamp (on/off) in the room. Even if we use high-resolution ADCs in this configuration, we will run into problems if we have significant noise in \(U\). Hence, we should ensure that the interval of values \(U\) covers is as large as possible to maximize the signal-to-noise ratio.</p> <p>The good news is that we can maximize the range of \(U\) by selecting \(R\) appropriately if we know our extreme values (e.g., for dark and bright) of \(R^*\). The bad news is: If the ratio between these extreme values – which are given by the physical constraints of the LDR (or some other component) and its environment and which cannot be chosen by us – is too small, then we again run into the problem that \(U\) will only cover a small interval. For this reason, you should ensure that the varying resistor (LDR, force-sensitive resistor, etc.) you use has a high ratio between the extreme values for those conditions you want to distinguish.</p> <h2 id="step-by-step-guide">Step-by-step guide</h2> <ol> <li>Based on the previous remarks, you should follow these steps for the setup of a suitable voltage divider:</li> <li>Select a varying resistance (e.g., LDR) suitable for your task</li> <li>Choose either of the above circuit diagrams (whichever suits your needs)</li> <li>Measure the minimum and maximum values for R^* for the extreme conditions of your environment</li> <li>Compute the ratio \(R^*_{max} / R^*_{min}\) for the extreme values of \(R^*\). If the ratio is too small, return to 1. and find another component. If you are unsure if your ratio is fine, you can continue with the following steps and conduct some experiments afterward.</li> <li>Choose \(R=\sqrt{R^*_{min} \cdot R^*_{max}}\). This guarantees that you cover the largest interval for \(U\) (if you are interested in why, you can continue reading the following section).</li> <li>Build your circuit and test your setup to ensure that it is sufficiently robust. If you encounter problems, you either have to start with step one again or experiment with more advanced algorithmic approaches (outside the scope of this article).</li> </ol> <p>If you realize that the minimum value of \(R^*\) is close to 0Ω (which is rarely the case), then you should be doing fine with a value of R between 500Ω and 1000Ω. If possible, you should ensure that \(R^*_{min}+R &gt; 500 \Omega\), to avoid too large currents.</p> <h2 id="maximizing-the-voltage-margin-for-a-voltage-divider">Maximizing the Voltage Margin for a Voltage Divider</h2> <p>We assume that both \(R^*_{max}\) and \(R^*_{min}\) are known. \(U_0\) is typically also known in advance. However, we will see that it does not play a role in calculating \(R\). For a certain resistance \(R^* \in [R^*_{min}, R^*_{max}]\) we know that (following Fig. 1):</p> \[\begin{align} U(R)=U_0 \frac{R}{R^* + R} \end{align}\] <p>Since we wish to maximize the voltage margin for \(U\), we introduce a new quantity \(\Delta U\), which is simply the difference of the voltage \(U\) for the extreme values of \(R^*\):</p> \[\begin{align*} \Delta U(R) &amp;= U_{max}(R) - U_{min}(R) \\ &amp;= U_0 \frac{R}{R^*_{min} + R} - U_0 \frac{R}{R^*_{max} + R} \\ &amp;= U_0 \Bigg[\frac{R}{R^*_{min} + R} - \frac{R}{R^*_{max} + R} \Bigg] \\ &amp;= U_0 \Bigg[\frac{R(R^*_{max} + R) - R(R^*_{min} + R)}{(R^*_{min} + R)(R^*_{max} + R)} \Bigg] \\ &amp;= U_0 \Bigg[\frac{R(R^*_{max} - R^*_{min})}{(R^*_{min} + R)(R^*_{max} + R)} \Bigg] \\ \end{align*}\] <p>In order to maximize above function \(\Delta U(R)\) we first compute the derivative \(\frac{\partial}{\partial R} \Delta U\):</p> \[\begin{align*} \frac{\partial}{\partial R} \Delta U &amp;= U_0\Bigg[\frac{(R^*_{max} - R^*_{min})(R^*_{min} + R)(R^*_{max} + R)-(R^*_{max} - R^*_{min})(R^*_{min} + R^*_{max} + 2R)}{(R^*_{min} + R)^2(R^*_{max} + R)^2}\Bigg] \\ &amp;= U_0\Bigg[\frac{(R^*_{min} - R^*_{max})\big[R(R^*_{min} + R^*_{max} + 2R)- (R^*_{min} + R)(R^*_{max} + R)\big]}{(R^*_{min} + R)^2(R^*_{max} + R)^2}\Bigg] \\ &amp;= U_0\Bigg[\frac{(R^*_{min} - R^*_{max})\big[2R^2-R^*_{min}R^*_{max} - R^2\big]}{(R^*_{min} + R)^2(R^*_{max} + R)^2}\Bigg] \\ &amp;= U_0\Bigg[\frac{(R^*_{min} - R^*_{max})\big[R^2-R^*_{min}R^*_{max}\big]}{(R^*_{min} + R)^2(R^*_{max} + R)^2}\Bigg] \end{align*}\] <p>Then, we solve \(\frac{\partial \Delta U}{\partial R} = 0\), in order to detect the extrema of the function:</p> \[\begin{align*} 0 &amp;= \frac{\partial}{\partial R}\Delta U \\ 0 &amp;= U_0\Bigg[\frac{(R^*_{min} - R^*_{max})\big[R^2-R^*_{min}R^*_{max}\big]}{(R^*_{min} + R)^2(R^*_{max} + R)^2}\Bigg] \\ 0 &amp;= (R^*_{min} - R^*_{max})\big[R^2-R^*_{min}R^*_{max}\big] \\ \end{align*}\] <p>And, since we assume that \(R^*_{max}\) is strictly larger than \(R^*_{min}\), hence \(R^*_{max} &gt; R^*_{min}\), we finally get:</p> \[\begin{align*} 0 &amp;= R^2-R^*_{min}R^*_{max}\\ R^2 &amp;= R^*_{min}R^*_{max} \\ R &amp;= \sqrt{R^*_{min}R^*_{max}} \\ \end{align*}\] <p>It is easy to see that above solution for \(R\) maximizes the voltage margin.</p> <h2 id="example">Example</h2> <p>In the figure below we show the behaviour of the voltage margin for different min-max value pairs of \(R^*\).</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2024-03-31-choosing-a-voltage-divider-resistor-for-a-ldr/VoltageDivider-480.webp 480w,/assets/img/2024-03-31-choosing-a-voltage-divider-resistor-for-a-ldr/VoltageDivider-800.webp 800w,/assets/img/2024-03-31-choosing-a-voltage-divider-resistor-for-a-ldr/VoltageDivider-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/2024-03-31-choosing-a-voltage-divider-resistor-for-a-ldr/VoltageDivider.png" class="img-fluid rounded z-depth-1 imgcenter" width="80%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 3:</b> Plot showing curves for different min-max value pairs of \(R^*\). The values for \(R\) are plotted along the abscissa and the voltage margin \(\Delta U\) (in this case expressed in \(\%\) of the compliance voltage \(U_0\)). The curve labels in the parentheses indicate \(R^*_{min}\) and \(R^*_{max}\), respectively. The crossed circles indicate those points, where the voltage margin reaches its largest value. </figcaption> </figure> <p>As we can see from the diagram, for \(R^*_{min}=2k\Omega\) and \(R^*_{max}=10k\Omega\), we can – in the best case – achieve a voltage margin that covers about 38% of the original range of \(U_0\). If we read off the corresponding value of \(R\) from the abscissa, we have approx. \(R=5k\Omega\). The true value is \(R=\sqrt{2k\Omega \cdot 10k\Omega}\approx 4.5k\Omega\).</p> <p>As we mentioned before, not the difference \(R^*_{max} - R^*_{min}\) is important for the max. voltage margin, but rather the ratio \(R^*_{max}/R^*_{min}\). For example, the value pair \((R^*_{min}, R^*_{max})= (10k\Omega, 20k\Omega)\) has a larger difference \(R^*_{max}-R^*_{min}\) than \((R^*_{min}, R^*_{max})= (2k\Omega, 10k\Omega)\), however, the max. voltage margin is significantly lower for \((10k\Omega, 20k\Omega)\). If we have \((R^*_{min}, R^*_{max})= (20k\Omega, 100k\Omega)\), then the max. voltage margin we can achieve is exactly the same as for \((R^*_{min}, R^*_{max})= (2k\Omega, 10k\Omega)\), since the min-max ratio is equivalent, although both curves differ. In practice, one prefers the setting \((20k\Omega, 100k\Omega)\), because it is not as steep.</p> <p>To increase the voltage margin, we must find a setting that allows for a higher min-max ratio of \(R^*\). We can see in the figure that if we, for example, double \(R^*_{max}\) for \((R^*_{min}, R^*_{max})= (2k\Omega, 10k\Omega)\), \(\Delta U\) increases by approximately 15%. Nevertheless, only about 53% of the original range of \(U_0\) is covered in this case.</p> <p>In practice, if one has to find the closest suitable resistor for \(R\), moving towards slightly larger values is usually better. This is because the slope of the voltage margin curve (as seen in the above figure) is not as high when we leave the optimum towards higher values as if we would move towards smaller ones.</p> <p>The R-Code for generating the above figure is listed below:</p> <figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">require</span><span class="p">(</span><span class="n">ggplot2</span><span class="p">)</span><span class="w">
</span><span class="n">require</span><span class="p">(</span><span class="n">reshape2</span><span class="p">)</span><span class="w">
</span><span class="n">require</span><span class="p">(</span><span class="n">ggrepel</span><span class="p">)</span><span class="w">
</span><span class="n">require</span><span class="p">(</span><span class="n">latex2exp</span><span class="p">)</span><span class="w">

</span><span class="n">RS</span><span class="o">&lt;-</span><span class="nf">list</span><span class="p">(</span><span class="nf">c</span><span class="p">(</span><span class="m">2</span><span class="p">,</span><span class="m">10</span><span class="p">),</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="m">20</span><span class="p">,</span><span class="m">100</span><span class="p">),</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="m">2</span><span class="p">,</span><span class="m">20</span><span class="p">),</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="m">10</span><span class="p">,</span><span class="m">20</span><span class="p">))</span><span class="w">
</span><span class="n">R3</span><span class="o">&lt;-</span><span class="n">seq</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="m">100</span><span class="p">,</span><span class="m">.01</span><span class="p">)</span><span class="w">

</span><span class="n">u0</span><span class="o">&lt;</span><span class="m">-100</span><span class="w">
</span><span class="n">myV</span><span class="o">&lt;-</span><span class="k">function</span><span class="p">(</span><span class="n">u0</span><span class="p">,</span><span class="n">r3</span><span class="p">,</span><span class="n">rs</span><span class="p">){(</span><span class="n">u0</span><span class="o">*</span><span class="n">r3</span><span class="p">)</span><span class="o">/</span><span class="p">(</span><span class="n">rs</span><span class="o">+</span><span class="n">r3</span><span class="p">)}</span><span class="w">
</span><span class="n">Vdiff</span><span class="o">&lt;-</span><span class="k">function</span><span class="p">(</span><span class="n">rs</span><span class="p">,</span><span class="n">u0</span><span class="p">,</span><span class="n">r3</span><span class="p">){</span><span class="w">
  </span><span class="n">myV</span><span class="p">(</span><span class="n">u0</span><span class="p">,</span><span class="n">r3</span><span class="p">,</span><span class="n">rs</span><span class="p">[</span><span class="m">1</span><span class="p">])</span><span class="o">-</span><span class="n">myV</span><span class="p">(</span><span class="n">u0</span><span class="p">,</span><span class="n">r3</span><span class="p">,</span><span class="n">rs</span><span class="p">[</span><span class="m">2</span><span class="p">])</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">x</span><span class="o">&lt;-</span><span class="n">R3</span><span class="w">
</span><span class="n">y</span><span class="o">&lt;-</span><span class="w"> </span><span class="n">lapply</span><span class="p">(</span><span class="n">RS</span><span class="p">,</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">rs</span><span class="p">)</span><span class="w"> </span><span class="n">sapply</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">FUN</span><span class="o">=</span><span class="n">Vdiff</span><span class="p">,</span><span class="n">u0</span><span class="o">=</span><span class="n">u0</span><span class="p">,</span><span class="n">rs</span><span class="o">=</span><span class="n">rs</span><span class="p">))</span><span class="w">
</span><span class="n">xs</span><span class="o">&lt;-</span><span class="n">lapply</span><span class="p">(</span><span class="n">lapply</span><span class="p">(</span><span class="n">RS</span><span class="p">,</span><span class="w"> </span><span class="n">prod</span><span class="p">),</span><span class="n">sqrt</span><span class="p">)</span><span class="w">
</span><span class="n">ys</span><span class="o">&lt;-</span><span class="n">sapply</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="nf">length</span><span class="p">(</span><span class="n">RS</span><span class="p">),</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">i</span><span class="p">)</span><span class="w"> </span><span class="n">Vdiff</span><span class="p">(</span><span class="n">rs</span><span class="o">=</span><span class="n">RS</span><span class="p">[[</span><span class="n">i</span><span class="p">]],</span><span class="n">u0</span><span class="o">=</span><span class="n">u0</span><span class="p">,</span><span class="n">r3</span><span class="o">=</span><span class="n">xs</span><span class="p">[[</span><span class="n">i</span><span class="p">]]))</span><span class="w">

</span><span class="n">move</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="m">15</span><span class="p">,</span><span class="m">15</span><span class="p">,</span><span class="m">15</span><span class="p">,</span><span class="m">-5</span><span class="p">)</span><span class="w">
</span><span class="n">xsL</span><span class="o">&lt;-</span><span class="n">sapply</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="nf">length</span><span class="p">(</span><span class="n">RS</span><span class="p">),</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">i</span><span class="p">)</span><span class="w"> </span><span class="n">xs</span><span class="p">[[</span><span class="n">i</span><span class="p">]]</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">move</span><span class="p">[</span><span class="n">i</span><span class="p">])</span><span class="w">
</span><span class="n">ysL</span><span class="o">&lt;-</span><span class="n">sapply</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="nf">length</span><span class="p">(</span><span class="n">RS</span><span class="p">),</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">i</span><span class="p">)</span><span class="w"> </span><span class="n">Vdiff</span><span class="p">(</span><span class="n">rs</span><span class="o">=</span><span class="n">RS</span><span class="p">[[</span><span class="n">i</span><span class="p">]],</span><span class="n">u0</span><span class="o">=</span><span class="n">u0</span><span class="p">,</span><span class="n">r3</span><span class="o">=</span><span class="n">xsL</span><span class="p">[[</span><span class="n">i</span><span class="p">]]))</span><span class="w">


</span><span class="n">df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">data.frame</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="p">)</span><span class="w">
</span><span class="n">curves</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">unlist</span><span class="p">(</span><span class="n">lapply</span><span class="p">(</span><span class="n">RS</span><span class="p">,</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">x</span><span class="p">)</span><span class="w"> </span><span class="n">paste</span><span class="p">(</span><span class="n">sep</span><span class="o">=</span><span class="s2">""</span><span class="p">,</span><span class="w"> </span><span class="s2">"("</span><span class="p">,</span><span class="n">x</span><span class="p">[</span><span class="m">1</span><span class="p">],</span><span class="s2">"kΩ, "</span><span class="p">,</span><span class="w"> </span><span class="n">x</span><span class="p">[</span><span class="m">2</span><span class="p">],</span><span class="w"> </span><span class="s2">"kΩ)"</span><span class="p">)))</span><span class="w">
</span><span class="n">colnames</span><span class="p">(</span><span class="n">df</span><span class="p">)</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"x"</span><span class="p">,</span><span class="w"> </span><span class="n">curves</span><span class="p">)</span><span class="w">
</span><span class="n">dfPlot</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">melt</span><span class="p">(</span><span class="n">df</span><span class="p">,</span><span class="w"> </span><span class="n">id.vars</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"x"</span><span class="p">)</span><span class="w">

</span><span class="n">dfMax</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">data.frame</span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">unlist</span><span class="p">(</span><span class="n">xs</span><span class="p">),</span><span class="w"> </span><span class="n">variable</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">curves</span><span class="p">,</span><span class="w"> </span><span class="n">value</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">unlist</span><span class="p">(</span><span class="n">ys</span><span class="p">))</span><span class="w">
</span><span class="n">dfLabel</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">data.frame</span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">unlist</span><span class="p">(</span><span class="n">xsL</span><span class="p">),</span><span class="w"> </span><span class="n">variable</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">curves</span><span class="p">,</span><span class="w"> </span><span class="n">value</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">unlist</span><span class="p">(</span><span class="n">ysL</span><span class="p">))</span><span class="w">

</span><span class="n">p</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">dfPlot</span><span class="p">,</span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">x</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">value</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">variable</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_line</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_point</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">dfMax</span><span class="p">,</span><span class="w"> </span><span class="n">shape</span><span class="o">=</span><span class="m">13</span><span class="p">,</span><span class="w"> </span><span class="n">size</span><span class="o">=</span><span class="m">3</span><span class="p">)</span><span class="w">
</span><span class="n">p</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">p</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">geom_text_repel</span><span class="p">(</span><span class="w">
  </span><span class="n">data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">dfLabel</span><span class="p">,</span><span class="w">
  </span><span class="n">aes</span><span class="p">(</span><span class="w">
    </span><span class="c1">#color = factor(cyl),</span><span class="w">
    </span><span class="n">size</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">5</span><span class="p">,</span><span class="w">
    </span><span class="n">label</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">variable</span><span class="w">
  </span><span class="p">),</span><span class="w">
  </span><span class="n">point.padding</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">0.25</span><span class="p">,</span><span class="w">
  </span><span class="n">box.padding</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">0.25</span><span class="p">,</span><span class="w">
  </span><span class="n">nudge_y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">3</span><span class="p">,</span><span class="w">
  </span><span class="n">nudge_x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">7</span><span class="p">,</span><span class="w">
  </span><span class="n">arrow</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">arrow</span><span class="p">(</span><span class="n">length</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">unit</span><span class="p">(</span><span class="m">0.01</span><span class="p">,</span><span class="w"> </span><span class="s1">'npc'</span><span class="p">)),</span><span class="w">
  </span><span class="c1"># Strength of the repulsion force.</span><span class="w">
  </span><span class="n">force</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="p">,</span><span class="w">
  </span><span class="c1"># Maximum iterations of the naive repulsion algorithm O(n^2).</span><span class="w">
  </span><span class="n">max.iter</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">3e3</span><span class="w">
</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
</span><span class="n">theme_bw</span><span class="p">()</span><span class="o">+</span><span class="w">
</span><span class="n">theme</span><span class="p">(</span><span class="n">legend.position</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"none"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
</span><span class="n">scale_color_manual</span><span class="p">(</span><span class="n">values</span><span class="o">=</span><span class="nf">rep</span><span class="p">(</span><span class="s2">"black"</span><span class="p">,</span><span class="w"> </span><span class="nf">length</span><span class="p">(</span><span class="n">RS</span><span class="p">)))</span><span class="w"> </span><span class="o">+</span><span class="w">
</span><span class="n">xlab</span><span class="p">(</span><span class="nf">expression</span><span class="p">(</span><span class="s2">"R "</span><span class="o">*</span><span class="p">(</span><span class="s2">"k"</span><span class="o">*</span><span class="n">Omega</span><span class="p">)))</span><span class="o">+</span><span class="w">
</span><span class="n">ylab</span><span class="p">(</span><span class="nf">expression</span><span class="p">(</span><span class="n">Delta</span><span class="o">*</span><span class="s2">"U"</span><span class="o">*</span><span class="s2">" (% of "</span><span class="o">*</span><span class="n">U</span><span class="p">[</span><span class="m">0</span><span class="p">]</span><span class="o">*</span><span class="s2">")"</span><span class="p">))</span><span class="o">+</span><span class="w">
</span><span class="n">theme</span><span class="p">(</span><span class="n">axis.text</span><span class="o">=</span><span class="n">element_text</span><span class="p">(</span><span class="n">size</span><span class="o">=</span><span class="m">13</span><span class="p">),</span><span class="w">
</span><span class="n">axis.title</span><span class="o">=</span><span class="n">element_text</span><span class="p">(</span><span class="n">size</span><span class="o">=</span><span class="m">15</span><span class="p">))</span><span class="w">

</span><span class="n">plot</span><span class="p">(</span><span class="n">p</span><span class="p">)</span></code></pre></figure> <p>Sorry, the notebook you are looking for does not exist.</p>]]></content><author><name></name></author><category term="electronics"/><category term="voltage"/><category term="divider"/><category term="electronics"/><summary type="html"><![CDATA[Imagine that you are planning to use a Light Dependent Resistor (LDR) for your new IoT prototype in order to detect whether or not a lamp is turned on in a (otherwise dark) room. A common way to solve this problem is the usage of a voltage divider circuit.]]></summary></entry><entry><title type="html">Deriving a Closed-Form Solution of the Fibonacci Sequence</title><link href="https://markusthill.github.io/blog/2024/fibonacci-closed/" rel="alternate" type="text/html" title="Deriving a Closed-Form Solution of the Fibonacci Sequence"/><published>2024-03-29T00:20:00+00:00</published><updated>2024-03-29T00:20:00+00:00</updated><id>https://markusthill.github.io/blog/2024/fibonacci-closed</id><content type="html" xml:base="https://markusthill.github.io/blog/2024/fibonacci-closed/"><![CDATA[<p>The Fibonacci sequence might be one of the most famous sequences in the field of mathematics and computer science. High school students starting with programming classes already compute the first few Fibonacci numbers with their programs using different iterative or recursive approaches. One reason for its popularity might be that the Fibonacci sequence is closely related to many other fields of math and physics, often in astonishing ways that one might not expect. Usually, the Fibonacci sequence is defined recursively. Hence, to compute the n-th Fibonacci number, all previous Fibonacci numbers must be calculated first. In this blog post, we will derive an intriguing closed-form solution to directly compute any arbitrary Fibonacci number without first obtaining its predecessors. Interestingly, we will solve this problem with the help of a tool – the so called Z-Transform – which is actually more common in the field of digital signal processing.</p> <p>The Fibonacci sequence, starting with</p> \[F_0 = 0, \, F_1=1\] <p>can be defined recursively as</p> \[\begin{align} F_n = F_{n-1} + F_{n-2}, \, \, \mbox{for} \, n \in \mathbb{N}_{&gt;1}. \label{eq:fibo} \end{align}\] <p>A simple recursive function in R, implementing the sequence could look like this:</p> <div class="language-R highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">fibo</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">n</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
</span><span class="k">if</span><span class="p">(</span><span class="n">n</span><span class="o">&lt;</span><span class="m">0</span><span class="p">)</span><span class="w"> </span><span class="n">return</span><span class="w"> </span><span class="p">(</span><span class="kc">NaN</span><span class="p">);</span><span class="w">
</span><span class="k">if</span><span class="p">(</span><span class="n">n</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="m">0</span><span class="w"> </span><span class="p">)</span><span class="w"> </span><span class="n">return</span><span class="w"> </span><span class="p">(</span><span class="m">0</span><span class="p">);</span><span class="w">
</span><span class="k">if</span><span class="p">(</span><span class="n">n</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="m">1</span><span class="p">)</span><span class="w"> </span><span class="n">return</span><span class="w"> </span><span class="p">(</span><span class="m">1</span><span class="p">);</span><span class="w">
</span><span class="n">return</span><span class="w"> </span><span class="p">(</span><span class="n">fibo</span><span class="p">(</span><span class="n">n</span><span class="m">-1</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">fibo</span><span class="p">(</span><span class="n">n</span><span class="m">-2</span><span class="p">));</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">sapply</span><span class="p">(</span><span class="m">0</span><span class="o">:</span><span class="m">19</span><span class="p">,</span><span class="w"> </span><span class="n">fibo</span><span class="p">)</span><span class="w">
</span></code></pre></div></div> <p>The first 20 elements \(F_0 \ldots F_{19}\) of the Fibonacci Sequence are thus:</p> \[\begin{align} 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181. \end{align}\] <p>Surprisingly (maybe not really, if you think about it), the Fibonacci sequence can also be generated using an IIR (infinite impulse response) filter. Consider the difference equation of an IIR-filter in the form:</p> \[\begin{align} y[n]=y[n-1]+y[n-2]+x[n-1]. \end{align}\] <p>The impuls response of this filter is defined as:</p> \[\begin{align} h[n]=h[n-1]+h[n-2]+\delta[n-1], \end{align}\] <p>where \(\delta[n]\) is the Kronecker Delta-Function. So at the time \(n=1\), we give a single impulse into our system and it starts running and computing a sequence of numbers. We get:</p> \[\begin{align} h[0]=0 \\ h[1]=1 \\ h[2]=1\\ h[3]=2\\ \vdots \end{align}\] <p>Now, let us compute the impulse response for the given filter with some code and plot the results. Since the filter coefficients usually have to be passed differently to most functions of the DSP toolboxes, which requires reading off the coefficients from the transfer function \(H(z)\), let us first compute the transfer function (the Z-transform of our filter in the time domain):</p> \[\begin{align} y[n]=y[n-1]+y[n-2]+x[n-1] \\ \mathcal{Z} \{ y[n] \} = \mathcal{Z} \{ y[n-1] \} + \mathcal{Z} \{ y[n-2] \} + \mathcal{Z} \{ x[n-1] \}\\ Y(z) = z^{-2}Y(z) + z^{-1}Y(z) + z^{-1}X(z) \\ Y(z) - z^{-1}Y(z) - z^{-2}Y(z) = z^{-1}X(z) \\ Y(z) \big(1- z^{-1} - z^{-2} \big) = z^{-1}X(z)\\ H(z)=\frac{Y(z)}{X(z)} = \frac{z^{-1}}{1- z^{-1} - z^{-2}} \label{eq:z-transform} \end{align}\] <p>Now, we can read off the filter coefficients (from the numerator for the forward coefficients and the denominator for the reverse coefficients). Hence, the forward coefficients are</p> \[\begin{align} b = [0, 1] \end{align}\] <p>and the reverse coefficients are</p> \[\begin{align} a = [1,-1,-1]. \end{align}\] <p>Subsequently, we can compute and plot the impulse response of our system.</p> <div class="language-R highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">signal</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">ggplot2</span><span class="p">)</span><span class="w">
</span><span class="n">b</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="m">1</span><span class="p">)</span><span class="w">
</span><span class="n">a</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="m">-1</span><span class="p">,</span><span class="m">-1</span><span class="p">)</span><span class="w">
</span><span class="n">h</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">impz</span><span class="p">(</span><span class="n">filt</span><span class="o">=</span><span class="n">b</span><span class="p">,</span><span class="n">a</span><span class="o">=</span><span class="n">a</span><span class="p">,</span><span class="w"> </span><span class="n">n</span><span class="o">=</span><span class="m">10</span><span class="p">)</span><span class="o">$</span><span class="n">x</span><span class="w"> </span><span class="c1"># compute impulse response for our Filter</span><span class="w">

</span><span class="c1"># Plot the impulse response</span><span class="w">

</span><span class="n">df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">data.frame</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">h</span><span class="o">$</span><span class="n">t</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">h</span><span class="o">$</span><span class="n">x</span><span class="p">)</span><span class="w">
</span><span class="n">p</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">df</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">x</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">y</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
</span><span class="n">geom_segment</span><span class="p">(</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">x</span><span class="p">,</span><span class="w"> </span><span class="n">xend</span><span class="o">=</span><span class="n">x</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="m">0</span><span class="p">,</span><span class="w"> </span><span class="n">yend</span><span class="o">=</span><span class="n">y</span><span class="p">),</span><span class="w"> </span><span class="n">color</span><span class="o">=</span><span class="s2">"darkgrey"</span><span class="p">,</span><span class="w"> </span><span class="n">size</span><span class="o">=</span><span class="m">1</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
</span><span class="n">geom_point</span><span class="p">(</span><span class="n">size</span><span class="o">=</span><span class="m">4</span><span class="p">,</span><span class="w"> </span><span class="n">shape</span><span class="o">=</span><span class="m">21</span><span class="p">,</span><span class="w"> </span><span class="n">fill</span><span class="o">=</span><span class="s2">"orange"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
</span><span class="n">geom_text</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">label</span><span class="o">=</span><span class="n">y</span><span class="p">),</span><span class="n">hjust</span><span class="o">=</span><span class="m">0</span><span class="p">,</span><span class="w"> </span><span class="n">vjust</span><span class="o">=</span><span class="m">-.7</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
</span><span class="n">theme_light</span><span class="p">(</span><span class="n">base_size</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">18</span><span class="p">)</span><span class="o">+</span><span class="w">
</span><span class="n">scale_x_continuous</span><span class="p">(</span><span class="n">breaks</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">0</span><span class="o">:</span><span class="m">10</span><span class="p">))</span><span class="o">+</span><span class="w">
</span><span class="n">xlab</span><span class="p">(</span><span class="s2">"n"</span><span class="p">)</span><span class="o">+</span><span class="w">
</span><span class="n">ylab</span><span class="p">(</span><span class="s2">"h[n]"</span><span class="p">)</span><span class="w">
</span><span class="n">p</span><span class="w">
</span></code></pre></div></div> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/fibo-impulse-response-480.webp 480w,/assets/img/fibo-impulse-response-800.webp 800w,/assets/img/fibo-impulse-response-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/fibo-impulse-response.png" class="img-fluid rounded z-depth-1 imgcenter" width="auto" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> <figcaption class="caption"> <b>Figure 1:</b> The impulse response (first 10 values) of our second-order IIR filter. </figcaption> </figure> <p>The impulse response corresponds precisely to the Fibonacci sequence.</p> <p>In Eq. \eqref{eq:z-transform}, we already computed the transfer function of our “Fibonacci”-filter. Let us see if we can obtain another representation of the impulse response in the time domain, which is no longer recursive and depicts a closed-form description of the Fibonacci numbers. Such a representation would be astonishing. We will do the following:</p> <ol> <li>Compute the partial fraction decomposition of our transfer function in Eq. \eqref{eq:z-transform}</li> <li>Look at the Z-transform of a certain type of infinite series</li> <li>Use the insights from 2. to transform our transfer function back into the time domain and remove the recursive structure of the impulse response</li> <li>Take the new impulse response to generate arbitrary Fibonacci numbers immediately</li> </ol> <h1 id="1-partial-fraction-decomposition-of-hz">1. Partial Fraction Decomposition of H(z)</h1> <p>Initially, we have to find the poles of our system</p> \[\begin{align} H(z)=\frac{Y(z)}{X(z)} = \frac{z^{-1}}{1- z^{-1} - z^{-2}}, \end{align}\] <p>hence, the roots in the denominator:</p> \[\begin{align} z^2-z-1=0. \end{align}\] <p>The 2 (non-complex) roots can be trivially found to be:</p> \[\begin{align} z_{1,2}=\frac{1}{2}(1\pm \sqrt 5). \end{align}\] <p>Now we can write our transfer function as:</p> \[\begin{align} H(z)=\frac{Y(z)}{X(z)} &amp;= \frac{z^{-1}}{1- z^{-1} - z^{-2}} \\ &amp;= \frac{z^{-1}}{\big(1-\frac{1}{2}(1 +\sqrt 5)z^{-1} \big) \big(1-\frac{1}{2}(1 -\sqrt 5)z^{-1}\big)} \\ &amp;= \frac{A}{1-\frac{1}{2}(1 +\sqrt 5)z^{-1}} + \frac{B}{1-\frac{1}{2}(1 -\sqrt 5)z^{-1}} \end{align}\] <p>To find the constants \(A\) and \(B\), we can multiply with the denominator of each term and evaluate the expression at the poles we found previously (done exemplarily here for the constant \(A\)):</p> \[\begin{align} z^{-1}\frac{1-\frac{1}{2}(1 +\sqrt 5)z^{-1}}{\big(1-\frac{1}{2}(1 +\sqrt 5)z^{-1} \big) \big(1-\frac{1}{2}(1 -\sqrt 5)z^{-1}\big)} = A + \frac{B \big(1-\frac{1}{2}(1 +\sqrt 5)z^{-1}\big)}{1-\frac{1}{2}(1 -\sqrt 5)z^{-1}} \\ \frac{z^{-1}}{\big(1-\frac{1}{2}(1 -\sqrt 5)z^{-1}\big)}\Bigg|_{z = \frac{1}{2}(1 +\sqrt 5)} = A + \frac{B \big(1-\frac{1}{2}(1 +\sqrt 5)z^{-1}\big)}{\frac{1}{2}(1 -\sqrt 5)z^{-1}}\bigg|_{z = 1-\frac{1}{2}(1 +\sqrt 5)} \\ \end{align}\] <p>Since the term with the constant \(B\) vanishes due to the vanishing numerator, this leads to</p> \[\begin{align} A &amp;= \frac{z^{-1}}{1-\frac{1}{2}(1 -\sqrt 5)z^{-1}}\Bigg|_{z = \frac{1}{2}(1 +\sqrt 5)} \\ &amp;= \frac{2(1 +\sqrt 5)^{-1}}{1- \frac{\frac{1}{2}(1 -\sqrt 5)}{\frac{1}{2}(1 +\sqrt 5)}} \\ &amp;= \frac{2(1 +\sqrt 5)^{-1}}{\frac{1 +\sqrt 5 - (1 -\sqrt 5)}{1 +\sqrt 5}} \\ &amp;= \frac{2(1 +\sqrt 5)^{-1}(1 +\sqrt 5)}{2\sqrt 5} \\ &amp;= \frac{1}{\sqrt 5}. \\ \end{align}\] <p>Similarly, we obtain the constant \(B\):</p> \[\begin{align} B = -A = -\frac{1}{\sqrt 5}. \end{align}\] <p>This let’s us finally write our previous transfer function as:</p> \[\begin{align} H(z)=\frac{Y(z)}{X(z)} &amp;= \frac{1}{1- z^{-1} - z^{-2}} \\ &amp;= \frac{1}{\sqrt 5}\frac{1}{1-\frac{1}{2}(1 +\sqrt 5)z^{-1}} - \frac{1}{\sqrt 5}\frac{1}{1-\frac{1}{2}(1 -\sqrt 5)z^{-1}} \label{eq:partialfrac} \end{align}\] <h1 id="2-determing-the-inverse-z-transform-of-a-special-transfer-function">2. Determing the inverse Z-Transform of a special Transfer Function</h1> <p>To transfer our transfer function in Eq. \eqref{eq:partialfrac} back into the time domain, we have to find a suitable inverse transformation for an expression of the type</p> \[\begin{align} X(z) = \frac{b}{1-az^{-1}}. \label{eq:ztransinfinite} \end{align}\] <p>This is not a trivial task. However, if we remember the geometric series, we might be able to continue. We notice that the infinite sum</p> \[b\sum_{n=0}^{\infty} q^k\] <p>converges to</p> \[\begin{align} b\sum_{n=0}^{\infty} q^k = \frac{b}{1-q}, \label{eq:geom} \end{align}\] <p>if \(|q|&lt;1\).</p> <p>If we look at Eq. \eqref{eq:ztransinfinite}, we can see that we have something which is very similar to Eq. \eqref{eq:geom}. By identifying</p> \[q = az^{-1}\] <p>we can write</p> \[\begin{align} X(z) &amp;= \frac{b}{1-az^{-1}} = b\sum_{n=0}^{\infty} (az^{-1})^n \\ &amp;= b\sum_{n=0}^{\infty} a^nz^{-n} \label{eq:sumZ} \\ &amp;= b(1 + az^{-1} + a^2 z^{-2} + \ldots) \end{align}\] <p>Note that this step assumes that \(|az^{-1}|&lt;1\) or \(|a|&lt;|z|\) .</p> <p>For this sum that we found, the inverse Z-transform can now be easily determined:</p> \[\begin{align} x[n] &amp;= \mathcal{Z}^{-1}\big\{X(z)\big\}\\ &amp;= b a^n u[n], \\ \end{align}\] <p>where \(u[n]\) is the unit-step function which turns on at \(n=0.\) This is necessary, since the sum in Eq. \eqref{eq:sumZ} starts with \(n=0\) and \(x[n]\) is not defined (or is zero) for negative indexes.</p> <p>We can summarize the findings of this section in basically one equation:</p> \[\begin{align} \mathcal{Z}\big\{b a^n u[n])\big\} &amp;= \frac{b}{1-az^{-1}}. \label{eq:finalrelation} \end{align}\] <h1 id="3-inverse-transform-of-the-previous-partial-fraction-decomposition">3. Inverse Transform of the previous Partial Fraction Decomposition</h1> <p>We are ready to transform Eq. \eqref{eq:partialfrac} back into the time domain by using the relation in Eq. \eqref{eq:finalrelation}. Let’s do it. Remember:</p> <p>\(\begin{align} H(z)=\frac{1}{\sqrt 5}\frac{1}{1-\frac{1}{2}(1 +\sqrt 5)z^{-1}} - \frac{1}{\sqrt 5}\frac{1}{1-\frac{1}{2}(1 -\sqrt 5)z^{-1}} \end{align}\)</p> <p>This leads us to: </p> \[\begin{align} h[n] &amp;= \mathcal{Z}^{-1}\big\{H(z)\big\} \\ &amp;= \frac{1}{\sqrt 5} \Big[\frac{1}{2}(1 +\sqrt 5)\Big]^{n}u[n] - \frac{1}{\sqrt 5} \Big[\frac{1}{2}(1 -\sqrt 5)\Big]^{n}u[n] \\ &amp;= \frac{1}{\sqrt 5} \Big[\frac{1}{2}(1 +\sqrt 5)\Big]^{n} - \frac{1}{\sqrt 5} \Big[\frac{1}{2}(1 -\sqrt 5)\Big]^{n}, \, \mbox{for} \, n \ge 0 \label{eq:backintime} \end{align}\] <p>which – when looked at closer – is a truly remarkable result. There is no longer a recursive formulation in the impulse response. This means we can directly compute any arbitrary Fibonacci number using this closed-form solution.</p> <p>Another interesting observation from the above equation is that the term \(\frac{1}{2}(1 +\sqrt 5)\) is the so called golden ratio \(\varphi.\) The golden ratio has many exciting properties that one should look at. In this case, we will use it to simplify our expression above.</p> <p>Using \(\varphi = \frac{1 +\sqrt 5}{2}\) and the additional relation</p> \[\begin{align} -\frac{1}{\varphi} &amp;= -\varphi^{-1} = -\frac{2}{1 +\sqrt 5} \\ &amp;= -\frac{2}{1 +\sqrt 5} \frac{1 -\sqrt 5}{1 -\sqrt 5} \\ &amp;= -2 \frac{1 -\sqrt 5}{(1 +\sqrt 5)(1 -\sqrt 5)} \\ &amp;= -2 \frac{1 -\sqrt 5}{1 - 5} \\ &amp;= -2 \frac{1 -\sqrt 5}{-4} \\ &amp;= \frac{1 -\sqrt 5}{2} , \end{align}\] <p>we can re-write Eq. \eqref{eq:backintime} in the following way:</p> \[\begin{align} h[n] &amp;= \frac{1}{\sqrt 5} \Big[\frac{1}{2}(1 +\sqrt 5)\Big]^{n} - \frac{1}{\sqrt 5} \Big[\frac{1}{2}(1 -\sqrt 5)\Big]^{n} \\ &amp;= \frac{1}{\sqrt 5} \varphi^{n} - \frac{1}{\sqrt 5} (-\varphi)^{-n} \\ &amp;= \frac{\varphi^{n} - (-\varphi)^{-n}}{\sqrt 5}\\ &amp;= \frac{\varphi^{n} - (-\varphi)^{-n}}{2\varphi -1}, \end{align}\] <p>which is – as I find – a really stunning formulation of the Fibonacci sequence. (There are also some issues with the above representation, but let’s forget about them at the moment.)</p> <h1 id="4-compute-arbitrary-fibonacci-numbers-using-the-closed-form-solution">4. Compute arbitrary Fibonacci Numbers using the Closed-Form Solution</h1> <p>A simple R-function implementing this closed form solution could look like this:</p> <div class="language-R highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">fibo</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">n</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">phi</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">(</span><span class="m">1</span><span class="o">+</span><span class="nf">sqrt</span><span class="p">(</span><span class="m">5</span><span class="p">))</span><span class="o">/</span><span class="m">2</span><span class="w">
  </span><span class="p">(</span><span class="n">phi</span><span class="o">^</span><span class="p">(</span><span class="n">n</span><span class="p">)</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="p">(</span><span class="o">-</span><span class="n">phi</span><span class="p">)</span><span class="o">^</span><span class="p">(</span><span class="o">-</span><span class="n">n</span><span class="p">))</span><span class="o">/</span><span class="p">(</span><span class="m">2</span><span class="o">*</span><span class="n">phi</span><span class="m">-1</span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div> <p>Try it out! For exampe, I get the following results in the following for the following cases:</p> <div class="language-R highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;</span><span class="w"> </span><span class="n">sapply</span><span class="p">(</span><span class="m">0</span><span class="o">:</span><span class="m">19</span><span class="p">,</span><span class="w"> </span><span class="n">fibo</span><span class="p">)</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="m">0</span><span class="w">  </span><span class="m">1</span><span class="w">  </span><span class="m">1</span><span class="w">  </span><span class="m">2</span><span class="w">  </span><span class="m">3</span><span class="w">  </span><span class="m">5</span><span class="w">  </span><span class="m">8</span><span class="w">  </span><span class="m">13</span><span class="w">  </span><span class="m">21</span><span class="w">  </span><span class="m">34</span><span class="w">  </span><span class="m">55</span><span class="w">  </span><span class="m">89</span><span class="w">  </span><span class="m">144</span><span class="w">  </span><span class="m">233</span><span class="w">  </span><span class="m">377</span><span class="w">  </span><span class="m">610</span><span class="w">  </span><span class="m">987</span><span class="w"> </span><span class="m">1597</span><span class="w"> </span><span class="m">2584</span><span class="w"> </span><span class="m">4181</span><span class="w">
</span></code></pre></div></div> <div class="language-R highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;</span><span class="w"> </span><span class="n">fibo</span><span class="p">(</span><span class="m">57</span><span class="p">)</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="m">365435296162</span><span class="w">
</span></code></pre></div></div>]]></content><author><name></name></author><category term="math"/><category term="fibonacci"/><category term="math"/><category term="signal"/><category term="processing"/><summary type="html"><![CDATA[The Fibonacci sequence might be one of the most famous sequences in the field of mathmatics and computer science. In this blog post we will derive an interesting closed-form solution to directly compute any arbitrary Fibonacci number without the necessity to obtain its predecessors first.]]></summary></entry><entry><title type="html">a post with code diff</title><link href="https://markusthill.github.io/blog/2024/code-diff/" rel="alternate" type="text/html" title="a post with code diff"/><published>2024-01-27T19:22:00+00:00</published><updated>2024-01-27T19:22:00+00:00</updated><id>https://markusthill.github.io/blog/2024/code-diff</id><content type="html" xml:base="https://markusthill.github.io/blog/2024/code-diff/"><![CDATA[<p>You can display diff code by using the regular markdown syntax:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">diff
</span><span class="gh">diff --git a/sample.js b/sample.js
index 0000001..0ddf2ba
</span><span class="gd">--- a/sample.js
</span><span class="gi">+++ b/sample.js
</span><span class="p">@@ -1 +1 @@</span>
<span class="gd">-console.log("Hello World!")
</span><span class="gi">+console.log("Hello from Diff2Html!")</span>
<span class="p">```</span>
</code></pre></div></div> <p>Which generates:</p> <div class="language-diff highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gh">diff --git a/sample.js b/sample.js
index 0000001..0ddf2ba
</span><span class="gd">--- a/sample.js
</span><span class="gi">+++ b/sample.js
</span><span class="p">@@ -1 +1 @@</span>
<span class="gd">-console.log("Hello World!")
</span><span class="gi">+console.log("Hello from Diff2Html!")
</span></code></pre></div></div> <p>But this is difficult to read, specially if you have a large diff. You can use <a href="https://diff2html.xyz/">diff2html</a> to display a more readable version of the diff. For this, just use <code class="language-plaintext highlighter-rouge">diff2html</code> instead of <code class="language-plaintext highlighter-rouge">diff</code> for the code block language:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">diff2html
</span><span class="sb">diff --git a/sample.js b/sample.js
index 0000001..0ddf2ba
--- a/sample.js
+++ b/sample.js
@@ -1 +1 @@
-console.log("Hello World!")
+console.log("Hello from Diff2Html!")</span>
<span class="p">```</span>
</code></pre></div></div> <p>If we use a longer example, for example <a href="https://github.com/rtfpessoa/diff2html/commit/c2c253d3e3f8b8b267f551e659f72b44ca2ac927">this commit from diff2html</a>, it will generate the following output:</p> <pre><code class="language-diff2html">From 2aaae31cc2a37bfff83430c2c914b140bee59b6a Mon Sep 17 00:00:00 2001
From: Rodrigo Fernandes &lt;rtfrodrigo@gmail.com&gt;
Date: Sun, 9 Oct 2016 16:41:54 +0100
Subject: [PATCH 1/2] Initial template override support

---
 scripts/hulk.js                    |  4 ++--
 src/diff2html.js                   |  3 +--
 src/file-list-printer.js           | 11 ++++++++---
 src/hoganjs-utils.js               | 29 +++++++++++++++++------------
 src/html-printer.js                |  6 ++++++
 src/line-by-line-printer.js        |  6 +++++-
 src/side-by-side-printer.js        |  6 +++++-
 test/file-list-printer-tests.js    |  2 +-
 test/hogan-cache-tests.js          | 18 +++++++++++++++---
 test/line-by-line-tests.js         |  3 +--
 test/side-by-side-printer-tests.js |  3 +--
 11 files changed, 62 insertions(+), 29 deletions(-)

diff --git a/scripts/hulk.js b/scripts/hulk.js
index 5a793c18..a4b1a4d5 100755
--- a/scripts/hulk.js
+++ b/scripts/hulk.js
@@ -173,11 +173,11 @@ function namespace(name) {
 // write a template foreach file that matches template extension
 templates = extractFiles(options.argv.remain)
   .map(function(file) {
-    var openedFile = fs.readFileSync(file, 'utf-8');
+    var openedFile = fs.readFileSync(file, 'utf-8').trim();
     var name;
     if (!openedFile) return;
     name = namespace(path.basename(file).replace(/\..*$/, ''));
-    openedFile = removeByteOrderMark(openedFile.trim());
+    openedFile = removeByteOrderMark(openedFile);
     openedFile = wrap(file, name, openedFile);
     if (!options.outputdir) return openedFile;
     fs.writeFileSync(path.join(options.outputdir, name + '.js')
diff --git a/src/diff2html.js b/src/diff2html.js
index 21b0119e..64e138f5 100644
--- a/src/diff2html.js
+++ b/src/diff2html.js
@@ -7,7 +7,6 @@

 (function() {
   var diffParser = require('./diff-parser.js').DiffParser;
-  var fileLister = require('./file-list-printer.js').FileListPrinter;
   var htmlPrinter = require('./html-printer.js').HtmlPrinter;

   function Diff2Html() {
@@ -43,7 +42,7 @@

     var fileList = '';
     if (configOrEmpty.showFiles === true) {
-      fileList = fileLister.generateFileList(diffJson, configOrEmpty);
+      fileList = htmlPrinter.generateFileListSummary(diffJson, configOrEmpty);
     }

     var diffOutput = '';
diff --git a/src/file-list-printer.js b/src/file-list-printer.js
index e408d9b2..1e0a2c61 100644
--- a/src/file-list-printer.js
+++ b/src/file-list-printer.js
@@ -8,11 +8,16 @@
 (function() {
   var printerUtils = require('./printer-utils.js').PrinterUtils;

-  var hoganUtils = require('./hoganjs-utils.js').HoganJsUtils;
+  var hoganUtils;
+
   var baseTemplatesPath = 'file-summary';
   var iconsBaseTemplatesPath = 'icon';

-  function FileListPrinter() {
+  function FileListPrinter(config) {
+    this.config = config;
+
+    var HoganJsUtils = require('./hoganjs-utils.js').HoganJsUtils;
+    hoganUtils = new HoganJsUtils(config);
   }

   FileListPrinter.prototype.generateFileList = function(diffFiles) {
@@ -38,5 +43,5 @@
     });
   };

-  module.exports.FileListPrinter = new FileListPrinter();
+  module.exports.FileListPrinter = FileListPrinter;
 })();
diff --git a/src/hoganjs-utils.js b/src/hoganjs-utils.js
index 9949e5fa..0dda08d7 100644
--- a/src/hoganjs-utils.js
+++ b/src/hoganjs-utils.js
@@ -8,18 +8,19 @@
 (function() {
   var fs = require('fs');
   var path = require('path');
-
   var hogan = require('hogan.js');

   var hoganTemplates = require('./templates/diff2html-templates.js');

-  var templatesPath = path.resolve(__dirname, 'templates');
+  var extraTemplates;

-  function HoganJsUtils() {
+  function HoganJsUtils(configuration) {
+    this.config = configuration || {};
+    extraTemplates = this.config.templates || {};
   }

-  HoganJsUtils.prototype.render = function(namespace, view, params, configuration) {
-    var template = this.template(namespace, view, configuration);
+  HoganJsUtils.prototype.render = function(namespace, view, params) {
+    var template = this.template(namespace, view);
     if (template) {
       return template.render(params);
     }
@@ -27,17 +28,16 @@
     return null;
   };

-  HoganJsUtils.prototype.template = function(namespace, view, configuration) {
-    var config = configuration || {};
+  HoganJsUtils.prototype.template = function(namespace, view) {
     var templateKey = this._templateKey(namespace, view);

-    return this._getTemplate(templateKey, config);
+    return this._getTemplate(templateKey);
   };

-  HoganJsUtils.prototype._getTemplate = function(templateKey, config) {
+  HoganJsUtils.prototype._getTemplate = function(templateKey) {
     var template;

-    if (!config.noCache) {
+    if (!this.config.noCache) {
       template = this._readFromCache(templateKey);
     }

@@ -53,6 +53,7 @@

     try {
       if (fs.readFileSync) {
+        var templatesPath = path.resolve(__dirname, 'templates');
         var templatePath = path.join(templatesPath, templateKey);
         var templateContent = fs.readFileSync(templatePath + '.mustache', 'utf8');
         template = hogan.compile(templateContent);
@@ -66,12 +67,16 @@
   };

   HoganJsUtils.prototype._readFromCache = function(templateKey) {
-    return hoganTemplates[templateKey];
+    return extraTemplates[templateKey] || hoganTemplates[templateKey];
   };

   HoganJsUtils.prototype._templateKey = function(namespace, view) {
     return namespace + '-' + view;
   };

-  module.exports.HoganJsUtils = new HoganJsUtils();
+  HoganJsUtils.prototype.compile = function(templateStr) {
+    return hogan.compile(templateStr);
+  };
+
+  module.exports.HoganJsUtils = HoganJsUtils;
 })();
diff --git a/src/html-printer.js b/src/html-printer.js
index 585d5b66..13f83047 100644
--- a/src/html-printer.js
+++ b/src/html-printer.js
@@ -8,6 +8,7 @@
 (function() {
   var LineByLinePrinter = require('./line-by-line-printer.js').LineByLinePrinter;
   var SideBySidePrinter = require('./side-by-side-printer.js').SideBySidePrinter;
+  var FileListPrinter = require('./file-list-printer.js').FileListPrinter;

   function HtmlPrinter() {
   }
@@ -22,5 +23,10 @@
     return sideBySidePrinter.generateSideBySideJsonHtml(diffFiles);
   };

+  HtmlPrinter.prototype.generateFileListSummary = function(diffJson, config) {
+    var fileListPrinter = new FileListPrinter(config);
+    return fileListPrinter.generateFileList(diffJson);
+  };
+
   module.exports.HtmlPrinter = new HtmlPrinter();
 })();
diff --git a/src/line-by-line-printer.js b/src/line-by-line-printer.js
index b07eb53c..d230bedd 100644
--- a/src/line-by-line-printer.js
+++ b/src/line-by-line-printer.js
@@ -11,7 +11,8 @@
   var utils = require('./utils.js').Utils;
   var Rematch = require('./rematch.js').Rematch;

-  var hoganUtils = require('./hoganjs-utils.js').HoganJsUtils;
+  var hoganUtils;
+
   var genericTemplatesPath = 'generic';
   var baseTemplatesPath = 'line-by-line';
   var iconsBaseTemplatesPath = 'icon';
@@ -19,6 +20,9 @@

   function LineByLinePrinter(config) {
     this.config = config;
+
+    var HoganJsUtils = require('./hoganjs-utils.js').HoganJsUtils;
+    hoganUtils = new HoganJsUtils(config);
   }

   LineByLinePrinter.prototype.makeFileDiffHtml = function(file, diffs) {
diff --git a/src/side-by-side-printer.js b/src/side-by-side-printer.js
index bbf1dc8d..5e3033b3 100644
--- a/src/side-by-side-printer.js
+++ b/src/side-by-side-printer.js
@@ -11,7 +11,8 @@
   var utils = require('./utils.js').Utils;
   var Rematch = require('./rematch.js').Rematch;

-  var hoganUtils = require('./hoganjs-utils.js').HoganJsUtils;
+  var hoganUtils;
+
   var genericTemplatesPath = 'generic';
   var baseTemplatesPath = 'side-by-side';
   var iconsBaseTemplatesPath = 'icon';
@@ -26,6 +27,9 @@

   function SideBySidePrinter(config) {
     this.config = config;
+
+    var HoganJsUtils = require('./hoganjs-utils.js').HoganJsUtils;
+    hoganUtils = new HoganJsUtils(config);
   }

   SideBySidePrinter.prototype.makeDiffHtml = function(file, diffs) {
diff --git a/test/file-list-printer-tests.js b/test/file-list-printer-tests.js
index a502a46f..60ea3208 100644
--- a/test/file-list-printer-tests.js
+++ b/test/file-list-printer-tests.js
@@ -1,6 +1,6 @@
 var assert = require('assert');

-var fileListPrinter = require('../src/file-list-printer.js').FileListPrinter;
+var fileListPrinter = new (require('../src/file-list-printer.js').FileListPrinter)();

 describe('FileListPrinter', function() {
   describe('generateFileList', function() {
diff --git a/test/hogan-cache-tests.js b/test/hogan-cache-tests.js
index 190bf6f8..3bb754ac 100644
--- a/test/hogan-cache-tests.js
+++ b/test/hogan-cache-tests.js
@@ -1,6 +1,6 @@
 var assert = require('assert');

-var HoganJsUtils = require('../src/hoganjs-utils.js').HoganJsUtils;
+var HoganJsUtils = new (require('../src/hoganjs-utils.js').HoganJsUtils)();
 var diffParser = require('../src/diff-parser.js').DiffParser;

 describe('HoganJsUtils', function() {
@@ -21,16 +21,28 @@ describe('HoganJsUtils', function() {
       });
       assert.equal(emptyDiffHtml, result);
     });
+
     it('should render view without cache', function() {
       var result = HoganJsUtils.render('generic', 'empty-diff', {
         contentClass: 'd2h-code-line',
         diffParser: diffParser
       }, {noCache: true});
-      assert.equal(emptyDiffHtml + '\n', result);
+      assert.equal(emptyDiffHtml, result);
     });
+
     it('should return null if template is missing', function() {
-      var result = HoganJsUtils.render('generic', 'missing-template', {}, {noCache: true});
+      var hoganUtils = new (require('../src/hoganjs-utils.js').HoganJsUtils)({noCache: true});
+      var result = hoganUtils.render('generic', 'missing-template', {});
       assert.equal(null, result);
     });
+
+    it('should allow templates to be overridden', function() {
+      var emptyDiffTemplate = HoganJsUtils.compile('&lt;p&gt;&lt;/p&gt;');
+
+      var config = {templates: {'generic-empty-diff': emptyDiffTemplate}};
+      var hoganUtils = new (require('../src/hoganjs-utils.js').HoganJsUtils)(config);
+      var result = hoganUtils.render('generic', 'empty-diff', {myName: 'Rodrigo Fernandes'});
+      assert.equal('&lt;p&gt;Rodrigo Fernandes&lt;/p&gt;', result);
+    });
   });
 });
diff --git a/test/line-by-line-tests.js b/test/line-by-line-tests.js
index 1cd92073..8869b3df 100644
--- a/test/line-by-line-tests.js
+++ b/test/line-by-line-tests.js
@@ -14,7 +14,7 @@ describe('LineByLinePrinter', function() {
         '            File without changes\n' +
         '        &lt;/div&gt;\n' +
         '    &lt;/td&gt;\n' +
-        '&lt;/tr&gt;\n';
+        '&lt;/tr&gt;';

       assert.equal(expected, fileHtml);
     });
@@ -422,7 +422,6 @@ describe('LineByLinePrinter', function() {
         '        &lt;/div&gt;\n' +
         '    &lt;/td&gt;\n' +
         '&lt;/tr&gt;\n' +
-        '\n' +
         '                &lt;/tbody&gt;\n' +
         '            &lt;/table&gt;\n' +
         '        &lt;/div&gt;\n' +
diff --git a/test/side-by-side-printer-tests.js b/test/side-by-side-printer-tests.js
index 76625f8e..771daaa5 100644
--- a/test/side-by-side-printer-tests.js
+++ b/test/side-by-side-printer-tests.js
@@ -14,7 +14,7 @@ describe('SideBySidePrinter', function() {
         '            File without changes\n' +
         '        &lt;/div&gt;\n' +
         '    &lt;/td&gt;\n' +
-        '&lt;/tr&gt;\n';
+        '&lt;/tr&gt;';

       assert.equal(expectedRight, fileHtml.right);
       assert.equal(expectedLeft, fileHtml.left);
@@ -324,7 +324,6 @@ describe('SideBySidePrinter', function() {
         '        &lt;/div&gt;\n' +
         '    &lt;/td&gt;\n' +
         '&lt;/tr&gt;\n' +
-        '\n' +
         '                    &lt;/tbody&gt;\n' +
         '                &lt;/table&gt;\n' +
         '            &lt;/div&gt;\n' +

From f3cadb96677d0eb82fc2752dc3ffbf35ca9b5bdb Mon Sep 17 00:00:00 2001
From: Rodrigo Fernandes &lt;rtfrodrigo@gmail.com&gt;
Date: Sat, 15 Oct 2016 13:21:22 +0100
Subject: [PATCH 2/2] Allow uncompiled templates

---
 README.md                 |  3 +++
 src/hoganjs-utils.js      |  7 +++++++
 test/hogan-cache-tests.js | 24 +++++++++++++++++++++++-
 3 files changed, 33 insertions(+), 1 deletion(-)

diff --git a/README.md b/README.md
index 132c8a28..46909f25 100644
--- a/README.md
+++ b/README.md
@@ -98,6 +98,9 @@ The HTML output accepts a Javascript object with configuration. Possible options
   - `synchronisedScroll`: scroll both panes in side-by-side mode: `true` or `false`, default is `false`
   - `matchWordsThreshold`: similarity threshold for word matching, default is 0.25
   - `matchingMaxComparisons`: perform at most this much comparisons for line matching a block of changes, default is `2500`
+  - `templates`: object with previously compiled templates to replace parts of the html
+  - `rawTemplates`: object with raw not compiled templates to replace parts of the html
+  &gt; For more information regarding the possible templates look into [src/templates](https://github.com/rtfpessoa/diff2html/tree/master/src/templates)

 ## Diff2HtmlUI Helper

diff --git a/src/hoganjs-utils.js b/src/hoganjs-utils.js
index 0dda08d7..b2e9c275 100644
--- a/src/hoganjs-utils.js
+++ b/src/hoganjs-utils.js
@@ -17,6 +17,13 @@
   function HoganJsUtils(configuration) {
     this.config = configuration || {};
     extraTemplates = this.config.templates || {};
+
+    var rawTemplates = this.config.rawTemplates || {};
+    for (var templateName in rawTemplates) {
+      if (rawTemplates.hasOwnProperty(templateName)) {
+        if (!extraTemplates[templateName]) extraTemplates[templateName] = this.compile(rawTemplates[templateName]);
+      }
+    }
   }

   HoganJsUtils.prototype.render = function(namespace, view, params) {
diff --git a/test/hogan-cache-tests.js b/test/hogan-cache-tests.js
index 3bb754ac..a34839c0 100644
--- a/test/hogan-cache-tests.js
+++ b/test/hogan-cache-tests.js
@@ -36,7 +36,7 @@ describe('HoganJsUtils', function() {
       assert.equal(null, result);
     });

-    it('should allow templates to be overridden', function() {
+    it('should allow templates to be overridden with compiled templates', function() {
       var emptyDiffTemplate = HoganJsUtils.compile('&lt;p&gt;&lt;/p&gt;');

       var config = {templates: {'generic-empty-diff': emptyDiffTemplate}};
@@ -44,5 +44,27 @@ describe('HoganJsUtils', function() {
       var result = hoganUtils.render('generic', 'empty-diff', {myName: 'Rodrigo Fernandes'});
       assert.equal('&lt;p&gt;Rodrigo Fernandes&lt;/p&gt;', result);
     });
+
+    it('should allow templates to be overridden with uncompiled templates', function() {
+      var emptyDiffTemplate = '&lt;p&gt;&lt;/p&gt;';
+
+      var config = {rawTemplates: {'generic-empty-diff': emptyDiffTemplate}};
+      var hoganUtils = new (require('../src/hoganjs-utils.js').HoganJsUtils)(config);
+      var result = hoganUtils.render('generic', 'empty-diff', {myName: 'Rodrigo Fernandes'});
+      assert.equal('&lt;p&gt;Rodrigo Fernandes&lt;/p&gt;', result);
+    });
+
+    it('should allow templates to be overridden giving priority to compiled templates', function() {
+      var emptyDiffTemplate = HoganJsUtils.compile('&lt;p&gt;&lt;/p&gt;');
+      var emptyDiffTemplateUncompiled = '&lt;p&gt;Not used!&lt;/p&gt;';
+
+      var config = {
+        templates: {'generic-empty-diff': emptyDiffTemplate},
+        rawTemplates: {'generic-empty-diff': emptyDiffTemplateUncompiled}
+      };
+      var hoganUtils = new (require('../src/hoganjs-utils.js').HoganJsUtils)(config);
+      var result = hoganUtils.render('generic', 'empty-diff', {myName: 'Rodrigo Fernandes'});
+      assert.equal('&lt;p&gt;Rodrigo Fernandes&lt;/p&gt;', result);
+    });
   });
 });
</code></pre>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="code"/><summary type="html"><![CDATA[this is how you can display code diffs]]></summary></entry><entry><title type="html">a post with advanced image components</title><link href="https://markusthill.github.io/blog/2024/advanced-images/" rel="alternate" type="text/html" title="a post with advanced image components"/><published>2024-01-27T11:46:00+00:00</published><updated>2024-01-27T11:46:00+00:00</updated><id>https://markusthill.github.io/blog/2024/advanced-images</id><content type="html" xml:base="https://markusthill.github.io/blog/2024/advanced-images/"><![CDATA[<p>This is an example post with advanced image components.</p> <h2 id="image-slider">Image Slider</h2> <p>This is a simple image slider. It uses the <a href="https://swiperjs.com/">Swiper</a> library. Check the <a href="https://swiperjs.com/demos">examples page</a> for more information of what you can achieve with it.</p> <swiper-container keyboard="true" navigation="true" pagination="true" pagination-clickable="true" pagination-dynamic-bullets="true" rewind="true"> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/9-480.webp 480w,/assets/img/9-800.webp 800w,/assets/img/9-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/9.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/7-480.webp 480w,/assets/img/7-800.webp 800w,/assets/img/7-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/7.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/8-480.webp 480w,/assets/img/8-800.webp 800w,/assets/img/8-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/8.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/10-480.webp 480w,/assets/img/10-800.webp 800w,/assets/img/10-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/10.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/12-480.webp 480w,/assets/img/12-800.webp 800w,/assets/img/12-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/12.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> </swiper-container> <h2 id="image-comparison-slider">Image Comparison Slider</h2> <p>This is a simple image comparison slider. It uses the <a href="https://img-comparison-slider.sneas.io/">img-comparison-slider</a> library. Check the <a href="https://img-comparison-slider.sneas.io/examples.html">examples page</a> for more information of what you can achieve with it.</p> <img-comparison-slider> <figure slot="first"> <picture> <source class="responsive-img-srcset" srcset="/assets/img/prof_pic-480.webp 480w,/assets/img/prof_pic-800.webp 800w,/assets/img/prof_pic-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/prof_pic.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <figure slot="second"> <picture> <source class="responsive-img-srcset" srcset="/assets/img/prof_pic_color-480.webp 480w,/assets/img/prof_pic_color-800.webp 800w,/assets/img/prof_pic_color-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/prof_pic_color.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </img-comparison-slider>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="images"/><summary type="html"><![CDATA[this is what advanced image components could look like]]></summary></entry><entry><title type="html">a post with vega lite</title><link href="https://markusthill.github.io/blog/2024/vega-lite/" rel="alternate" type="text/html" title="a post with vega lite"/><published>2024-01-27T00:20:00+00:00</published><updated>2024-01-27T00:20:00+00:00</updated><id>https://markusthill.github.io/blog/2024/vega-lite</id><content type="html" xml:base="https://markusthill.github.io/blog/2024/vega-lite/"><![CDATA[<p>This is an example post with some <a href="https://vega.github.io/vega-lite/">vega lite</a> code.</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">vega_lite
</span><span class="sb">{
  "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
  "description": "A dot plot showing each movie in the database, and the difference from the average movie rating. The display is sorted by year to visualize everything in sequential order. The graph is for all Movies before 2019.",
  "data": {
    "url": "https://raw.githubusercontent.com/vega/vega/main/docs/data/movies.json"
  },
  "transform": [
    {"filter": "datum['IMDB Rating'] != null"},
    {"filter": {"timeUnit": "year", "field": "Release Date", "range": [null, 2019]}},
    {
      "joinaggregate": [{
        "op": "mean",
        "field": "IMDB Rating",
        "as": "AverageRating"
      }]
    },
    {
      "calculate": "datum['IMDB Rating'] - datum.AverageRating",
      "as": "RatingDelta"
    }
  ],
  "mark": "point",
  "encoding": {
    "x": {
      "field": "Release Date",
      "type": "temporal"
    },
    "y": {
      "field": "RatingDelta",
      "type": "quantitative",
      "title": "Rating Delta"
    },
    "color": {
      "field": "RatingDelta",
      "type": "quantitative",
      "scale": {"domainMid": 0},
      "title": "Rating Delta"
    }
  }
}</span>
<span class="p">```</span>
</code></pre></div></div> <p>Which generates:</p> <pre><code class="language-vega_lite">{
  "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
  "description": "A dot plot showing each movie in the database, and the difference from the average movie rating. The display is sorted by year to visualize everything in sequential order. The graph is for all Movies before 2019.",
  "data": {
    "url": "https://raw.githubusercontent.com/vega/vega/main/docs/data/movies.json"
  },
  "transform": [
    {"filter": "datum['IMDB Rating'] != null"},
    {"filter": {"timeUnit": "year", "field": "Release Date", "range": [null, 2019]}},
    {
      "joinaggregate": [{
        "op": "mean",
        "field": "IMDB Rating",
        "as": "AverageRating"
      }]
    },
    {
      "calculate": "datum['IMDB Rating'] - datum.AverageRating",
      "as": "RatingDelta"
    }
  ],
  "mark": "point",
  "encoding": {
    "x": {
      "field": "Release Date",
      "type": "temporal"
    },
    "y": {
      "field": "RatingDelta",
      "type": "quantitative",
      "title": "Rating Delta"
    },
    "color": {
      "field": "RatingDelta",
      "type": "quantitative",
      "scale": {"domainMid": 0},
      "title": "Rating Delta"
    }
  }
}
</code></pre> <p>This plot supports both light and dark themes.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="charts"/><summary type="html"><![CDATA[this is what included vega lite code could look like]]></summary></entry><entry><title type="html">a post with geojson</title><link href="https://markusthill.github.io/blog/2024/geojson-map/" rel="alternate" type="text/html" title="a post with geojson"/><published>2024-01-26T17:57:00+00:00</published><updated>2024-01-26T17:57:00+00:00</updated><id>https://markusthill.github.io/blog/2024/geojson-map</id><content type="html" xml:base="https://markusthill.github.io/blog/2024/geojson-map/"><![CDATA[<p>This is an example post with some <a href="https://geojson.org/">geojson</a> code. The support is provided thanks to <a href="https://leafletjs.com/">Leaflet</a>. To create your own visualization, go to <a href="https://geojson.io/">geojson.io</a>.</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">geojson
</span><span class="sb">{
  "type": "FeatureCollection",
  "features": [
    {
      "type": "Feature",
      "properties": {},
      "geometry": {
        "coordinates": [
          [
            [
              -60.11363029935569,
              -2.904625022183211
            ],
            [
              -60.11363029935569,
              -3.162613728707967
            ],
            [
              -59.820894493858034,
              -3.162613728707967
            ],
            [
              -59.820894493858034,
              -2.904625022183211
            ],
            [
              -60.11363029935569,
              -2.904625022183211
            ]
          ]
        ],
        "type": "Polygon"
      }
    }
  ]
}</span>
<span class="p">```</span>
</code></pre></div></div> <p>Which generates:</p> <pre><code class="language-geojson">{
  "type": "FeatureCollection",
  "features": [
    {
      "type": "Feature",
      "properties": {},
      "geometry": {
        "coordinates": [
          [
            [
              -60.11363029935569,
              -2.904625022183211
            ],
            [
              -60.11363029935569,
              -3.162613728707967
            ],
            [
              -59.820894493858034,
              -3.162613728707967
            ],
            [
              -59.820894493858034,
              -2.904625022183211
            ],
            [
              -60.11363029935569,
              -2.904625022183211
            ]
          ]
        ],
        "type": "Polygon"
      }
    }
  ]
}
</code></pre>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="charts"/><category term="maps"/><summary type="html"><![CDATA[this is what included geojson code could look like]]></summary></entry><entry><title type="html">a post with echarts</title><link href="https://markusthill.github.io/blog/2024/echarts/" rel="alternate" type="text/html" title="a post with echarts"/><published>2024-01-26T16:03:00+00:00</published><updated>2024-01-26T16:03:00+00:00</updated><id>https://markusthill.github.io/blog/2024/echarts</id><content type="html" xml:base="https://markusthill.github.io/blog/2024/echarts/"><![CDATA[<p>This is an example post with some <a href="https://echarts.apache.org/">echarts</a> code.</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">echarts
</span><span class="sb">{
  "title": {
    "text": "ECharts Getting Started Example"
  },
  "responsive": true,
  "tooltip": {},
  "legend": {
    "top": "30px",
    "data": ["sales"]
  },
  "xAxis": {
    "data": ["Shirts", "Cardigans", "Chiffons", "Pants", "Heels", "Socks"]
  },
  "yAxis": {},
  "series": [
    {
      "name": "sales",
      "type": "bar",
      "data": [5, 20, 36, 10, 10, 20]
    }
  ]
}</span>
<span class="p">```</span>
</code></pre></div></div> <p>Which generates:</p> <pre><code class="language-echarts">{
  "title": {
    "text": "ECharts Getting Started Example"
  },
  "responsive": true,
  "tooltip": {},
  "legend": {
    "top": "30px",
    "data": ["sales"]
  },
  "xAxis": {
    "data": ["Shirts", "Cardigans", "Chiffons", "Pants", "Heels", "Socks"]
  },
  "yAxis": {},
  "series": [
    {
      "name": "sales",
      "type": "bar",
      "data": [5, 20, 36, 10, 10, 20]
    }
  ]
}
</code></pre> <p>Note that this library offer support for both light and dark themes. You can switch between them using the theme switcher in the top right corner of the page.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="charts"/><summary type="html"><![CDATA[this is what included echarts code could look like]]></summary></entry><entry><title type="html">a post with chart.js</title><link href="https://markusthill.github.io/blog/2024/chartjs/" rel="alternate" type="text/html" title="a post with chart.js"/><published>2024-01-26T01:04:00+00:00</published><updated>2024-01-26T01:04:00+00:00</updated><id>https://markusthill.github.io/blog/2024/chartjs</id><content type="html" xml:base="https://markusthill.github.io/blog/2024/chartjs/"><![CDATA[<p>This is an example post with some <a href="https://www.chartjs.org/">chart.js</a> code.</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">chartjs
</span><span class="sb">{
  "type": "line",
  "data": {
    "labels": [
      "January",
      "February",
      "March",
      "April",
      "May",
      "June",
      "July"
    ],
    "datasets": [
      {
        "label": "# of bugs",
        "fill": false,
        "lineTension": 0.1,
        "backgroundColor": "rgba(75,192,192,0.4)",
        "borderColor": "rgba(75,192,192,1)",
        "borderCapStyle": "butt",
        "borderDash": [],
        "borderDashOffset": 0,
        "borderJoinStyle": "miter",
        "pointBorderColor": "rgba(75,192,192,1)",
        "pointBackgroundColor": "#fff",
        "pointBorderWidth": 1,
        "pointHoverRadius": 5,
        "pointHoverBackgroundColor": "rgba(75,192,192,1)",
        "pointHoverBorderColor": "rgba(220,220,220,1)",
        "pointHoverBorderWidth": 2,
        "pointRadius": 1,
        "pointHitRadius": 10,
        "data": [
          65,
          59,
          80,
          81,
          56,
          55,
          40
        ],
        "spanGaps": false
      }
    ]
  },
  "options": {}
}</span>
<span class="p">```</span>
</code></pre></div></div> <p>This is how it looks like:</p> <pre><code class="language-chartjs">{
  "type": "line",
  "data": {
    "labels": [
      "January",
      "February",
      "March",
      "April",
      "May",
      "June",
      "July"
    ],
    "datasets": [
      {
        "label": "# of bugs",
        "fill": false,
        "lineTension": 0.1,
        "backgroundColor": "rgba(75,192,192,0.4)",
        "borderColor": "rgba(75,192,192,1)",
        "borderCapStyle": "butt",
        "borderDash": [],
        "borderDashOffset": 0,
        "borderJoinStyle": "miter",
        "pointBorderColor": "rgba(75,192,192,1)",
        "pointBackgroundColor": "#fff",
        "pointBorderWidth": 1,
        "pointHoverRadius": 5,
        "pointHoverBackgroundColor": "rgba(75,192,192,1)",
        "pointHoverBorderColor": "rgba(220,220,220,1)",
        "pointHoverBorderWidth": 2,
        "pointRadius": 1,
        "pointHitRadius": 10,
        "data": [
          65,
          59,
          80,
          81,
          56,
          55,
          40
        ],
        "spanGaps": false
      }
    ]
  },
  "options": {}
}
</code></pre> <p>Also another example chart.</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">chartjs
</span><span class="sb">{
  "type": "doughnut",
  "data": {
    "labels": [
      "Red",
      "Blue",
      "Yellow"
    ],
    "datasets": [
      {
        "data": [
          300,
          50,
          100
        ],
        "backgroundColor": [
          "#FF6384",
          "#36A2EB",
          "#FFCE56"
        ],
        "hoverBackgroundColor": [
          "#FF6384",
          "#36A2EB",
          "#FFCE56"
        ]
      }
    ]
  },
  "options": {}
}</span>
<span class="p">```</span>
</code></pre></div></div> <p>Which generates:</p> <pre><code class="language-chartjs">{
  "type": "doughnut",
  "data": {
    "labels": [
      "Red",
      "Blue",
      "Yellow"
    ],
    "datasets": [
      {
        "data": [
          300,
          50,
          100
        ],
        "backgroundColor": [
          "#FF6384",
          "#36A2EB",
          "#FFCE56"
        ],
        "hoverBackgroundColor": [
          "#FF6384",
          "#36A2EB",
          "#FFCE56"
        ]
      }
    ]
  },
  "options": {}
}
</code></pre>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="charts"/><summary type="html"><![CDATA[this is what included chart.js code could look like]]></summary></entry><entry><title type="html">a post with TikZJax</title><link href="https://markusthill.github.io/blog/2023/tikzjax/" rel="alternate" type="text/html" title="a post with TikZJax"/><published>2023-12-12T22:25:00+00:00</published><updated>2023-12-12T22:25:00+00:00</updated><id>https://markusthill.github.io/blog/2023/tikzjax</id><content type="html" xml:base="https://markusthill.github.io/blog/2023/tikzjax/"><![CDATA[<p>This is an example post with TikZ code. TikZJax converts script tags (containing TikZ code) into SVGs.</p> <script type="text/tikz">
\begin{tikzpicture}
    \draw[red,fill=black!60!red] (0,0) circle [radius=1.5];
    \draw[green,fill=black!60!green] (0,0) circle [x radius=1.5cm, y radius=10mm];
    \draw[blue,fill=black!60!blue] (0,0) circle [x radius=1cm, y radius=5mm, rotate=30];
\end{tikzpicture}
</script>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="diagrams"/><summary type="html"><![CDATA[this is what included TikZ code could look like]]></summary></entry><entry><title type="html">a post with bibliography</title><link href="https://markusthill.github.io/blog/2023/post-bibliography/" rel="alternate" type="text/html" title="a post with bibliography"/><published>2023-07-12T13:56:00+00:00</published><updated>2023-07-12T13:56:00+00:00</updated><id>https://markusthill.github.io/blog/2023/post-bibliography</id><content type="html" xml:base="https://markusthill.github.io/blog/2023/post-bibliography/"><![CDATA[<p>This post shows how to add bibliography to simple blog posts. We support every citation style that <a href="https://github.com/inukshuk/jekyll-scholar">jekyll-scholar</a> does. That means simple citation like (missing reference), multiple citations like (missing reference), long references like (missing reference) or also quotes:</p> <blockquote><p>Lorem ipsum dolor sit amet, consectetur adipisicing elit,<br/>sed do eiusmod tempor.</p><p>Lorem ipsum dolor sit amet, consectetur adipisicing.</p><cite>(missing reference)</cite></blockquote> <p>If you would like something more academic, check the <a href="/blog/2021/distill/">distill style post</a>.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="bib"/><summary type="html"><![CDATA[an example of a blog post with bibliography]]></summary></entry></feed>